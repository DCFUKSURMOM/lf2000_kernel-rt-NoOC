/*
 * Register settings for 2MP Hynix Hi-253 and 3MP SiliconFile SR300PC10 sensors
 *
 * (C) Copyright 2011, LeapFrog Enterprises, Inc.
 *
 * These settings were delivered by the vendor in .usf files with the following
 * format:
 *----------------------------------------------------------------------------
 *	[USERSET_0]
 * 	DISP_NAME = "init_011"
 *	DISP_WIDTH = 800
 *	DISP_HEIGHT = 600
 *	//MCLK=24M  
 *	//PLL=2
 *	//DISP_FORMAT = YUV422
 *	//DISP_DATAORDER = YUYV
 *	BEGIN
 *		
 *		{0x01,0x91},
 *		{0x08,0x0f},
 *		{0x01,0x90},
 *		{0x03,0x00},
 *		{0x03,0x00},
 *	...
 *		{0x01,0x90},
 *
 *	END
 *	[END]
 *
 *----------------------------------------------------------------------------
 *
 * where each hexidecimal value pair indicates a register address and value.
 * Page-switching is built into the sequence with the globally-accessible
 * PAGEMODE register (address 0x03).
 *
 * The usf files were run through a simple program to convert them into
 * C array-friendly triples consisting of {page, address, value}.
 * Page and address are supplied as symbols rather than raw values to account
 * for the different register maps present on each sensor model, and to make
 * them somewhat human-readable.
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef __HYNIX_YAC_DAT_H__
#define __HYNIX_YAC_DAT_H__

#include "hynix_yac_regs.h"

/* source: "HI253 the best Initial setting for LeapFrog .sif" patched */
/* This is the master initialization sequence */
static const char HI253_Best_Initial[][3] = {
{WINDOW_PAGE, PWRCTL, 0xf1}, 
{WINDOW_PAGE, 0x08, 0x0f}, 
{WINDOW_PAGE, PWRCTL, 0xf0}, 

{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE}, 
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE}, 

{WINDOW_PAGE, PLLCTL1, 0x03}, 
{WINDOW_PAGE, PLLCTL1, 0x73}, 

{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE}, 
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE}, 

{WINDOW_PAGE, PLLCTL1, 0x00}, 
{WINDOW_PAGE, PWRCTL, 0xf1}, 
{WINDOW_PAGE, 0x08, 0x00}, 

{WINDOW_PAGE, PWRCTL, 0xf3},
{WINDOW_PAGE, PWRCTL, 0xf1},


{WINDOW_PAGE, PAGEMODE, AUTOEXP_PAGE}, 
{AUTOEXP_PAGE, AECTL1, 0x1c}, 


{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE}, 
{AUTOWB_PAGE, AWBCTL1, 0x69}, 


//Initial Start
/////// PAGE 0 START ///////
{AUTOWB_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, VDOCTL1, 0x11}, 
{WINDOW_PAGE, VDOCTL2, 0x90},//B[0],Horizontal Flip;B[1],Vertical Flip.
{WINDOW_PAGE, SYNCCTL, 0x00},

{WINDOW_PAGE, 0x0b, 0xaa}, 
{WINDOW_PAGE, 0x0c, 0xaa}, 
{WINDOW_PAGE, 0x0d, 0xaa}, 

{WINDOW_PAGE, WINROWH, 0x00}, 
{WINDOW_PAGE, WINROWL, 0x04},
{WINDOW_PAGE, WINCOLH, 0x00}, 
{WINDOW_PAGE, WINCOLL, 0x07},

{WINDOW_PAGE, WINHGTH, 0x04},
{WINDOW_PAGE, WINHGTL, 0xb0},
{WINDOW_PAGE, WINWIDH, 0x06},
{WINDOW_PAGE, WINWIDL, 0x40}, 

{WINDOW_PAGE, HBLANKH, 0x01}, 
{WINDOW_PAGE, HBLANKL, 0x98}, 
{WINDOW_PAGE, VSYNCH, 0x00}, 
{WINDOW_PAGE, VSYNCL, 0x14}, 

{WINDOW_PAGE, VSCTL1, 0x04},
{WINDOW_PAGE, VSCTL2, 0x18},
{WINDOW_PAGE, VSCTL3, 0xd8},

//BLC
{WINDOW_PAGE, BLCCTL, 0x2e},
{WINDOW_PAGE, 0x81, 0x7e},
{WINDOW_PAGE, 0x82, 0x90},
{WINDOW_PAGE, 0x83, 0x00},
{WINDOW_PAGE, 0x84, 0x0c},
{WINDOW_PAGE, 0x85, 0x00},
{WINDOW_PAGE, BLCTIMETHON, 0x0e}, 
{WINDOW_PAGE, BLCTIMETHOFF, 0x0e}, 
{WINDOW_PAGE, BLCAGTHH, 0x98}, 
{WINDOW_PAGE, BLCAGTHL, 0x90}, 
{WINDOW_PAGE, BLCDGH, 0x75},
{WINDOW_PAGE, BLCDGL, 0x70},
{WINDOW_PAGE, 0x96, 0xdc},
{WINDOW_PAGE, 0x97, 0xfe},
{WINDOW_PAGE, 0x98, 0x38},


{WINDOW_PAGE, 0x99, 0x43},
{WINDOW_PAGE, 0x9a, 0x43},
{WINDOW_PAGE, 0x9b, 0x43},
{WINDOW_PAGE, 0x9c, 0x43},


{WINDOW_PAGE, BLCOFSDB, 0x00},
{WINDOW_PAGE, BLCOFSDGB, 0x00},
{WINDOW_PAGE, BLCOFSDR, 0x00},
{WINDOW_PAGE, BLCOFSDGR, 0x00},


{WINDOW_PAGE, 0xa8, 0x43},
{WINDOW_PAGE, 0xaa, 0x43},
{WINDOW_PAGE, 0xac, 0x43},
{WINDOW_PAGE, 0xae, 0x43},

/////// PAGE 2 START ///////
{WINDOW_PAGE, PAGEMODE, UNDOC_0x02_PAGE},
{UNDOC_0x02_PAGE, 0x12, 0x03},
{UNDOC_0x02_PAGE, 0x13, 0x03},
{UNDOC_0x02_PAGE, 0x16, 0x00},
{UNDOC_0x02_PAGE, 0x17, 0x8C},
{UNDOC_0x02_PAGE, 0x18, 0x4c}, 
{UNDOC_0x02_PAGE, 0x19, 0x00},
{UNDOC_0x02_PAGE, 0x1a, 0x39}, 
{UNDOC_0x02_PAGE, 0x1c, 0x09},
{UNDOC_0x02_PAGE, 0x1d, 0x40},
{UNDOC_0x02_PAGE, 0x1e, 0x30},
{UNDOC_0x02_PAGE, 0x1f, 0x10},

{UNDOC_0x02_PAGE, 0x20, 0x77},
{UNDOC_0x02_PAGE, 0x21, 0xde},
{UNDOC_0x02_PAGE, 0x22, 0xa7},
{UNDOC_0x02_PAGE, 0x23, 0x30}, 
{UNDOC_0x02_PAGE, 0x27, 0x3c},
{UNDOC_0x02_PAGE, 0x2b, 0x80},
{UNDOC_0x02_PAGE, 0x2e, 0x11},
{UNDOC_0x02_PAGE, 0x2f, 0xa1},
{UNDOC_0x02_PAGE, 0x30, 0x05}, 

{UNDOC_0x02_PAGE, 0x50, 0x20},
{UNDOC_0x02_PAGE, 0x52, 0x01},
{UNDOC_0x02_PAGE, 0x53, 0xc1}, 
{UNDOC_0x02_PAGE, 0x55, 0x1c},
{UNDOC_0x02_PAGE, 0x56, 0x11},
{UNDOC_0x02_PAGE, 0x5d, 0xa2},
{UNDOC_0x02_PAGE, 0x5e, 0x5a},

{UNDOC_0x02_PAGE, 0x60, 0x87},
{UNDOC_0x02_PAGE, 0x61, 0x99},
{UNDOC_0x02_PAGE, 0x62, 0x88},
{UNDOC_0x02_PAGE, 0x63, 0x97},
{UNDOC_0x02_PAGE, 0x64, 0x88},
{UNDOC_0x02_PAGE, 0x65, 0x97},

{UNDOC_0x02_PAGE, 0x67, 0x0c},
{UNDOC_0x02_PAGE, 0x68, 0x0c},
{UNDOC_0x02_PAGE, 0x69, 0x0c},

{UNDOC_0x02_PAGE, 0x72, 0x89},
{UNDOC_0x02_PAGE, 0x73, 0x96},
{UNDOC_0x02_PAGE, 0x74, 0x89},
{UNDOC_0x02_PAGE, 0x75, 0x96},
{UNDOC_0x02_PAGE, 0x76, 0x89},
{UNDOC_0x02_PAGE, 0x77, 0x96},

{UNDOC_0x02_PAGE, 0x7c, 0x85},
{UNDOC_0x02_PAGE, 0x7d, 0xaf},
{UNDOC_0x02_PAGE, 0x80, 0x01},
{UNDOC_0x02_PAGE, 0x81, 0x7f},
{UNDOC_0x02_PAGE, 0x82, 0x13},

{UNDOC_0x02_PAGE, 0x83, 0x24},
{UNDOC_0x02_PAGE, 0x84, 0x7d},
{UNDOC_0x02_PAGE, 0x85, 0x81},
{UNDOC_0x02_PAGE, 0x86, 0x7d},
{UNDOC_0x02_PAGE, 0x87, 0x81},

{UNDOC_0x02_PAGE, 0x92, 0x48},
{UNDOC_0x02_PAGE, 0x93, 0x54},
{UNDOC_0x02_PAGE, 0x94, 0x7d},
{UNDOC_0x02_PAGE, 0x95, 0x81},
{UNDOC_0x02_PAGE, 0x96, 0x7d},
{UNDOC_0x02_PAGE, 0x97, 0x81},

{UNDOC_0x02_PAGE, 0xa0, 0x02},
{UNDOC_0x02_PAGE, 0xa1, 0x7b},
{UNDOC_0x02_PAGE, 0xa2, 0x02},
{UNDOC_0x02_PAGE, 0xa3, 0x7b},
{UNDOC_0x02_PAGE, 0xa4, 0x7b},
{UNDOC_0x02_PAGE, 0xa5, 0x02},
{UNDOC_0x02_PAGE, 0xa6, 0x7b},
{UNDOC_0x02_PAGE, 0xa7, 0x02},

{UNDOC_0x02_PAGE, 0xa8, 0x85},
{UNDOC_0x02_PAGE, 0xa9, 0x8c},
{UNDOC_0x02_PAGE, 0xaa, 0x85},
{UNDOC_0x02_PAGE, 0xab, 0x8c},
{UNDOC_0x02_PAGE, 0xac, 0x10},
{UNDOC_0x02_PAGE, 0xad, 0x16},
{UNDOC_0x02_PAGE, 0xae, 0x10},
{UNDOC_0x02_PAGE, 0xaf, 0x16},

{UNDOC_0x02_PAGE, 0xb0, 0x99},
{UNDOC_0x02_PAGE, 0xb1, 0xa3},
{UNDOC_0x02_PAGE, 0xb2, 0xa4},
{UNDOC_0x02_PAGE, 0xb3, 0xae},
{UNDOC_0x02_PAGE, 0xb4, 0x9b},
{UNDOC_0x02_PAGE, 0xb5, 0xa2},
{UNDOC_0x02_PAGE, 0xb6, 0xa6},
{UNDOC_0x02_PAGE, 0xb7, 0xac},
{UNDOC_0x02_PAGE, 0xb8, 0x9b},
{UNDOC_0x02_PAGE, 0xb9, 0x9f},
{UNDOC_0x02_PAGE, 0xba, 0xa6},
{UNDOC_0x02_PAGE, 0xbb, 0xaa},
{UNDOC_0x02_PAGE, 0xbc, 0x9b},
{UNDOC_0x02_PAGE, 0xbd, 0x9f},
{UNDOC_0x02_PAGE, 0xbe, 0xa6},
{UNDOC_0x02_PAGE, 0xbf, 0xaa},

{UNDOC_0x02_PAGE, 0xc4, 0x2c},
{UNDOC_0x02_PAGE, 0xc5, 0x43},
{UNDOC_0x02_PAGE, 0xc6, 0x63},
{UNDOC_0x02_PAGE, 0xc7, 0x79},

{UNDOC_0x02_PAGE, 0xc8, 0x2d},
{UNDOC_0x02_PAGE, 0xc9, 0x42},
{UNDOC_0x02_PAGE, 0xca, 0x2d},
{UNDOC_0x02_PAGE, 0xcb, 0x42},
{UNDOC_0x02_PAGE, 0xcc, 0x64},
{UNDOC_0x02_PAGE, 0xcd, 0x78},
{UNDOC_0x02_PAGE, 0xce, 0x64},
{UNDOC_0x02_PAGE, 0xcf, 0x78},

{UNDOC_0x02_PAGE, 0xd0, 0x0a},
{UNDOC_0x02_PAGE, 0xd1, 0x09},
{UNDOC_0x02_PAGE, 0xd4, 0x0e}, 
{UNDOC_0x02_PAGE, 0xd5, 0x0e}, 
{UNDOC_0x02_PAGE, 0xd6, 0x98}, 
{UNDOC_0x02_PAGE, 0xd7, 0x90}, 
{UNDOC_0x02_PAGE, 0xe0, 0xc4},
{UNDOC_0x02_PAGE, 0xe1, 0xc4},
{UNDOC_0x02_PAGE, 0xe2, 0xc4},
{UNDOC_0x02_PAGE, 0xe3, 0xc4},
{UNDOC_0x02_PAGE, 0xe4, 0x00},
{UNDOC_0x02_PAGE, 0xe8, 0x80},
{UNDOC_0x02_PAGE, 0xe9, 0x40},
{UNDOC_0x02_PAGE, 0xea, 0x7f},

{UNDOC_0x02_PAGE, 0xf0, 0x01},
{UNDOC_0x02_PAGE, 0xf1, 0x01},
{UNDOC_0x02_PAGE, 0xf2, 0x01},
{UNDOC_0x02_PAGE, 0xf3, 0x01},
{UNDOC_0x02_PAGE, 0xf4, 0x01},


/////// PAGE 3 ///////
{UNDOC_0x02_PAGE, PAGEMODE, UNDOC_0x03_PAGE},
{UNDOC_0x03_PAGE, 0x10, 0x10},

/////// PAGE 10 START ///////
{UNDOC_0x03_PAGE, PAGEMODE, FORMAT_PAGE},
//{FORMAT_PAGE, ISPCTL1, 0x03}, 
{FORMAT_PAGE, ISPCTL1, 0x07}, // ITU656, YUYV
{FORMAT_PAGE, ISPCTL3, 0x30},
{FORMAT_PAGE, ISPCTL4, 0x0a},
//{FORMAT_PAGE, ITUCTL, 0x00},
{FORMAT_PAGE, ITUCTL, 0x15},

{FORMAT_PAGE, ITUSOF, 0x80}, // ITU656: SOF : SAV field (per Nexell)
{FORMAT_PAGE, ITUSOL, 0x80}, // ITU656: SOL : SAV field
{FORMAT_PAGE, ITUEOF, 0xb6}, // ITU656: EOF : EAV blank
{FORMAT_PAGE, ITUEOL, 0x9d}, // ITU656: EOL : EAV field

{FORMAT_PAGE, 0x30, 0x00},
{FORMAT_PAGE, 0x31, 0x00},
{FORMAT_PAGE, 0x32, 0x00},
{FORMAT_PAGE, 0x33, 0x00},

{FORMAT_PAGE, 0x34, 0x30},
{FORMAT_PAGE, 0x35, 0x00},
{FORMAT_PAGE, 0x36, 0x00},
{FORMAT_PAGE, 0x38, 0x00},
{FORMAT_PAGE, 0x3e, 0x58},
{FORMAT_PAGE, 0x3f, 0x00},

{FORMAT_PAGE, YOFS, 0x8b},//Luminance offset
{FORMAT_PAGE, DYOFS, 0x00}, 
{FORMAT_PAGE, CONTRAST, 0x82},//Contrast

{FORMAT_PAGE, SATCTL, 0x67},
{FORMAT_PAGE, SATB, 0x80}, //Blue Saturation
{FORMAT_PAGE, SATR, 0x7c}, //Red  Saturation
{FORMAT_PAGE, AGSAT, 0x50}, 
{FORMAT_PAGE, 0x64, 0x41},

{FORMAT_PAGE, SATTIMETH, 0x42},
{FORMAT_PAGE, SATOUTDEL, 0x20},

{FORMAT_PAGE, CBPOSSAT, 0x80}, 
{FORMAT_PAGE, CBNEGSAT, 0x80}, 
{FORMAT_PAGE, CRPOSSAT, 0x88}, 
{FORMAT_PAGE, CRNEGSAT, 0x80}, 

/////// PAGE 11
{FORMAT_PAGE, PAGEMODE, NOISE1_PAGE},
{NOISE1_PAGE, DLPFCTL1, 0x3f}, 
{NOISE1_PAGE, DLPFCTL2, 0x40}, 
{NOISE1_PAGE, 0x12, 0xba}, 
{NOISE1_PAGE, 0x13, 0xcb}, 

{NOISE1_PAGE, LPFAGTHL_HI253, 0x31}, 
{NOISE1_PAGE, LPFAGTHH_HI253, 0x34}, 
{NOISE1_PAGE, LPFOUTTHL_HI253, 0x0f}, 
{NOISE1_PAGE, LPFOUTTHH_HI253, 0x10}, 
{NOISE1_PAGE, LPFYMEANTHL_HI253, 0x30}, 
{NOISE1_PAGE, LPFYMEANTHH_HI253, 0x32}, 


{NOISE1_PAGE, OUT2YBOUNDH, 0x70}, 
{NOISE1_PAGE, OUT2YBOUNDL, 0x10}, 
{NOISE1_PAGE, OUT2RATIO, 0x63}, 
{NOISE1_PAGE, OUT2THH, 0x0a}, 
{NOISE1_PAGE, OUT2THM, 0x07}, 
{NOISE1_PAGE, OUT2THL, 0x04}, 


{NOISE1_PAGE, OUT1YBOUNDH, 0x70}, 
{NOISE1_PAGE, OUT1YBOUNDL, 0x18}, 
{NOISE1_PAGE, OUT1RATIO, 0x63},
{NOISE1_PAGE, OUT1THH, 0x0a},
{NOISE1_PAGE, OUT1THM, 0x07},
{NOISE1_PAGE, OUT1THL, 0x04}, 


{NOISE1_PAGE, INYBOUNDH, 0x80}, 
{NOISE1_PAGE, INYBOUNDL, 0x18}, 
{NOISE1_PAGE, INRATIO, 0x80}, 
{NOISE1_PAGE, INTHH_HI253, 0x0c}, 
{NOISE1_PAGE, INTHM_HI253, 0x09}, 
{NOISE1_PAGE, INTHL_HI253, 0x06}, 

{NOISE1_PAGE, DARK1YBNDH, 0x80}, 
{NOISE1_PAGE, DARK1YBNDL, 0x18}, 
{NOISE1_PAGE, DARK1RATIO, 0x80}, 
{NOISE1_PAGE, DARK1THH, 0x13}, 
{NOISE1_PAGE, DARK1THM, 0x10}, 
{NOISE1_PAGE, DARK1THL, 0x11}, 

{NOISE1_PAGE, DARK2YBNDH, 0x90}, 
{NOISE1_PAGE, DARK2YBNDL, 0x40}, 
{NOISE1_PAGE, DARK2RATIO, 0x80}, 
{NOISE1_PAGE, DARK2THH, 0x13}, 
{NOISE1_PAGE, DARK2THM, 0x10}, 
{NOISE1_PAGE, DARK2THL, 0x11}, 

{NOISE1_PAGE, DARK3YBNDH, 0x80}, 
{NOISE1_PAGE, DARK3YBNDL, 0x30}, 
{NOISE1_PAGE, DARK3RATIO, 0x80}, 
{NOISE1_PAGE, DARK3THH, 0x13}, 
{NOISE1_PAGE, DARK3THM, 0x10}, 
{NOISE1_PAGE, DARK3THL, 0x13}, 

{NOISE1_PAGE, 0x54, 0x11}, 
{NOISE1_PAGE, 0x55, 0x17}, 
{NOISE1_PAGE, 0x56, 0x20}, 
{NOISE1_PAGE, 0x57, 0x20}, 
{NOISE1_PAGE, 0x58, 0x20}, 
{NOISE1_PAGE, 0x59, 0x30}, 

{NOISE1_PAGE, 0x5a, 0x18}, 
{NOISE1_PAGE, 0x5b, 0x00}, 
{NOISE1_PAGE, 0x5c, 0x00}, 

{NOISE1_PAGE, 0x60, 0x3f}, 
{NOISE1_PAGE, 0x62, 0x50}, 
{NOISE1_PAGE, 0x70, 0x06}, 

/////// PAGE 12
{NOISE1_PAGE, PAGEMODE, NOISE2_PAGE},
{NOISE2_PAGE, YCLPFCTL1, 0x0f}, 
{NOISE2_PAGE, YCLPFCTL2, 0x0f}, 
{NOISE2_PAGE, 0x25, 0x30}, 

{NOISE2_PAGE, 0x28, 0x00},
{NOISE2_PAGE, 0x29, 0x00},
{NOISE2_PAGE, 0x2a, 0x00},

{NOISE2_PAGE, YCPRWTH, 0x50},
{NOISE2_PAGE, YCUNI1TH, 0x18},
{NOISE2_PAGE, YCUNI2TH_HI253, 0x32},
{NOISE2_PAGE, YCUNI3TH_HI253, 0x40},
{NOISE2_PAGE, YCNOR1TH_HI253, 0x50},
{NOISE2_PAGE, YCNOR2TH_HI253, 0x70},
{NOISE2_PAGE, YCNOR3TH_HI253, 0xa0},


{NOISE2_PAGE, YCOUT2THH, 0xa0},
{NOISE2_PAGE, YCOUT2THL, 0x40},
{NOISE2_PAGE, YCOUT2STDH, 0xa0},
{NOISE2_PAGE, YCOUT2STDM, 0x90},
{NOISE2_PAGE, YCOUT2STDL, 0x85}, 
{NOISE2_PAGE, YCOUT2RAT, 0x80},


{NOISE2_PAGE, YCOUT1THH, 0xb0},
{NOISE2_PAGE, YCOUT2THL, 0x55},
{NOISE2_PAGE, YCOUT1STDH, 0xa0},
{NOISE2_PAGE, YCOUT1STDM, 0x90},
{NOISE2_PAGE, YCOUT1STDL, 0x85}, 
{NOISE2_PAGE, YCOUT1RAT, 0x80},


{NOISE2_PAGE, YCINTHH_HI253, 0xb0},
{NOISE2_PAGE, YCINTHL_HI253, 0x40},
{NOISE2_PAGE, YCINSTDH_HI253, 0x90},
{NOISE2_PAGE, YCINSTDM_HI253, 0x90},
{NOISE2_PAGE, YCINSTDL_HI253, 0x90}, 
{NOISE2_PAGE, YCINRAT_HI253, 0x80},


{NOISE2_PAGE, YCDARK1THH_HI253, 0xb0},
{NOISE2_PAGE, YCDARK1THL_HI253, 0x60},
{NOISE2_PAGE, YCDARK1STDH_HI253, 0xc0},
{NOISE2_PAGE, YCDARK1STDM_HI253, 0xc0},
{NOISE2_PAGE, YCDARK1STDL_HI253, 0xc0},
{NOISE2_PAGE, YCDARK1RAT_HI253, 0x80},

{NOISE2_PAGE, YCDARK2THH, 0x90},
{NOISE2_PAGE, YCDARK2THL, 0x40},
{NOISE2_PAGE, YCDARK2STDH, 0xd0},
{NOISE2_PAGE, YCDARK2STDM, 0xd0},
{NOISE2_PAGE, YCDARK2STDL, 0xe0},
{NOISE2_PAGE, YCDARK2RAT, 0x80},


{NOISE2_PAGE, YCDARK3THH, 0x88},
{NOISE2_PAGE, YCDARK3THL, 0x40},
{NOISE2_PAGE, YCDARK3STDH, 0xe0},
{NOISE2_PAGE, YCDARK3STDM, 0xe0}, 
{NOISE2_PAGE, YCDARK3STDL, 0xe0}, 
{NOISE2_PAGE, YCDARK3RAT, 0x80},

{NOISE2_PAGE, 0x70, 0x13}, 
{NOISE2_PAGE, 0x71, 0x01}, 

{NOISE2_PAGE, 0x72, 0x15}, 
{NOISE2_PAGE, 0x73, 0x01}, 

{NOISE2_PAGE, 0x74, 0x25},
{NOISE2_PAGE, 0x75, 0x15},

{NOISE2_PAGE, 0x80, 0x15}, 
{NOISE2_PAGE, 0x81, 0x25}, 
{NOISE2_PAGE, 0x82, 0x50}, 
{NOISE2_PAGE, 0x85, 0x1a},
{NOISE2_PAGE, 0x88, 0x00},
{NOISE2_PAGE, 0x89, 0x00},
{NOISE2_PAGE, DPCCTL, 0x5c}, 


{NOISE2_PAGE, 0xD0, 0x0c},
{NOISE2_PAGE, 0xD1, 0x80},
{NOISE2_PAGE, 0xD2, 0x67},
{NOISE2_PAGE, 0xD3, 0x00},
{NOISE2_PAGE, 0xD4, 0x00},
{NOISE2_PAGE, 0xD5, 0x02},
{NOISE2_PAGE, 0xD6, 0xff},
{NOISE2_PAGE, 0xD7, 0x18},

{NOISE2_PAGE, 0x3b, 0x06},
{NOISE2_PAGE, 0x3c, 0x06},

{NOISE2_PAGE, 0xc5, 0x30}, 
{NOISE2_PAGE, 0xc6, 0x2a}, 

/////// PAGE 13 START ///////
{NOISE2_PAGE, PAGEMODE, EDGE_PAGE},

{EDGE_PAGE, EDGECTL1, 0xab}, 
{EDGE_PAGE, EDGECTL2, 0x7b},
{EDGE_PAGE, EDGECTL3, 0x06}, 
{EDGE_PAGE, EDGECTL5_HI253, 0x00},

{EDGE_PAGE, EDGENGAIN, 0x15},
{EDGE_PAGE, EDGEPGAIN, 0x13},
{EDGE_PAGE, 0x22, 0x33},
{EDGE_PAGE, EDGEHCLIP1TH, 0x04}, 
{EDGE_PAGE, EDGEHCLIP2TH, 0x09},

{EDGE_PAGE, EDGELCLIPTH, 0x08}, 

{EDGE_PAGE, EDGELCLIPLMT, 0x20}, 
{EDGE_PAGE, 0x27, 0x30},
{EDGE_PAGE, EDGETIMETH_HI253, 0x12},
{EDGE_PAGE, EDGEAGTH_HI253, 0x50},


{EDGE_PAGE, 0x2b, 0x06}, 
{EDGE_PAGE, 0x2c, 0x07}, 
{EDGE_PAGE, EDGELCLIPTH, 0x08}, 
{EDGE_PAGE, 0x2d, 0x0c},
{EDGE_PAGE, 0x2e, 0x12},
{EDGE_PAGE, 0x2f, 0x12},


{EDGE_PAGE, 0x50, 0x10},
{EDGE_PAGE, 0x51, 0x14},
{EDGE_PAGE, 0x52, 0x12}, 
{EDGE_PAGE, 0x53, 0x0c},
{EDGE_PAGE, 0x54, 0x0f},
{EDGE_PAGE, 0x55, 0x0f}, 


{EDGE_PAGE, 0x56, 0x10},
{EDGE_PAGE, 0x57, 0x13},
{EDGE_PAGE, 0x58, 0x12}, 
{EDGE_PAGE, 0x59, 0x0c},
{EDGE_PAGE, 0x5a, 0x0f},
{EDGE_PAGE, 0x5b, 0x0f}, 


{EDGE_PAGE, 0x5c, 0x0a},
{EDGE_PAGE, 0x5d, 0x0b},
{EDGE_PAGE, 0x5e, 0x0a},
{EDGE_PAGE, 0x5f, 0x08},
{EDGE_PAGE, 0x60, 0x09},
{EDGE_PAGE, 0x61, 0x08},


{EDGE_PAGE, 0x62, 0x08},
{EDGE_PAGE, 0x63, 0x09}, 
{EDGE_PAGE, 0x64, 0x08},
{EDGE_PAGE, 0x65, 0x06},
{EDGE_PAGE, 0x66, 0x07}, 
{EDGE_PAGE, 0x67, 0x06},


{EDGE_PAGE, 0x68, 0x07},
{EDGE_PAGE, 0x69, 0x08}, 
{EDGE_PAGE, 0x6a, 0x07},
{EDGE_PAGE, 0x6b, 0x06}, 
{EDGE_PAGE, 0x6c, 0x07}, 
{EDGE_PAGE, 0x6d, 0x06}, 


{EDGE_PAGE, 0x6e, 0x07},
{EDGE_PAGE, 0x6f, 0x08}, 
{EDGE_PAGE, 0x70, 0x07},
{EDGE_PAGE, 0x71, 0x06}, 
{EDGE_PAGE, 0x72, 0x07}, 
{EDGE_PAGE, 0x73, 0x06}, 


{EDGE_PAGE, EDGE2DCTL1, 0x00}, 
{EDGE_PAGE, EDGE2DCTL2, 0x1f},
{EDGE_PAGE, EDGE2DCTL3, 0x01}, 
{EDGE_PAGE, EDGE2DCTL4, 0x31}, 

{EDGE_PAGE, EDGE2DNGAIN, 0x3f}, 
{EDGE_PAGE, EDGE2DPGAIN, 0x3f}, 
{EDGE_PAGE, 0x92, 0x33},
{EDGE_PAGE, EDGE2DLCLIPLMT, 0x30},
{EDGE_PAGE, EDGE2DHCLIP1TH, 0x05}, 
{EDGE_PAGE, EDGE2DHCLIP2TH, 0x18}, 
{EDGE_PAGE, 0x97, 0x30}, 
{EDGE_PAGE, 0x99, 0x35}, 

{EDGE_PAGE, EDGE2DLCOUT2N, 0x01}, 
{EDGE_PAGE, EDGE2DLCOUT2P, 0x02}, 
{EDGE_PAGE, EDGE2DLCOUT1N, 0x01}, 
{EDGE_PAGE, EDGE2DLCOUT1P, 0x02}, 
{EDGE_PAGE, EDGE2DLCINN, 0x02}, 
{EDGE_PAGE, EDGE2DLCINP, 0x04}, 
{EDGE_PAGE, EDGE2DLCD1N, 0x04}, 
{EDGE_PAGE, EDGE2DLCD1P, 0x06}, 
{EDGE_PAGE, EDGE2DLCD2N, 0x05}, 
{EDGE_PAGE, EDGE2DLCD2P, 0x08}, 
{EDGE_PAGE, EDGE2DLCD3N, 0x05}, 
{EDGE_PAGE, EDGE2DLCD3P, 0x08}, 


{EDGE_PAGE, 0xb0, 0x22},
{EDGE_PAGE, 0xb1, 0x2a},
{EDGE_PAGE, 0xb2, 0x28},
{EDGE_PAGE, 0xb3, 0x22},
{EDGE_PAGE, 0xb4, 0x2a},
{EDGE_PAGE, 0xb5, 0x28},


{EDGE_PAGE, 0xb6, 0x22},
{EDGE_PAGE, 0xb7, 0x2a},
{EDGE_PAGE, 0xb8, 0x28},
{EDGE_PAGE, 0xb9, 0x22},
{EDGE_PAGE, 0xba, 0x2a},
{EDGE_PAGE, 0xbb, 0x28},


{EDGE_PAGE, 0xbc, 0x27}, 
{EDGE_PAGE, 0xbd, 0x30}, 
{EDGE_PAGE, 0xbe, 0x2a}, 
{EDGE_PAGE, 0xbf, 0x27}, 
{EDGE_PAGE, 0xc0, 0x30}, 
{EDGE_PAGE, 0xc1, 0x2a}, 


{EDGE_PAGE, 0xc2, 0x1e}, 
{EDGE_PAGE, 0xc3, 0x24}, 
{EDGE_PAGE, 0xc4, 0x20}, 
{EDGE_PAGE, 0xc5, 0x1e}, 
{EDGE_PAGE, 0xc6, 0x24}, 
{EDGE_PAGE, 0xc7, 0x20}, 


{EDGE_PAGE, 0xc8, 0x18}, 
{EDGE_PAGE, 0xc9, 0x20}, 
{EDGE_PAGE, 0xca, 0x1e}, 
{EDGE_PAGE, 0xcb, 0x18}, 
{EDGE_PAGE, 0xcc, 0x20}, 
{EDGE_PAGE, 0xcd, 0x1e}, 


{EDGE_PAGE, 0xce, 0x18}, 
{EDGE_PAGE, 0xcf, 0x20}, 
{EDGE_PAGE, 0xd0, 0x1e}, 
{EDGE_PAGE, 0xd1, 0x18}, 
{EDGE_PAGE, 0xd2, 0x20}, 
{EDGE_PAGE, 0xd3, 0x1e}, 


/////// PAGE 14
{EDGE_PAGE, PAGEMODE, LENS_PAGE},
{LENS_PAGE, LENSCTL1, 0x11},

{LENS_PAGE, Gb_XCEN, 0x80}, 
{LENS_PAGE, Gb_YCEN, 0x80}, 
{LENS_PAGE, R_XCEN, 0x80}, 
{LENS_PAGE, R_YCEN, 0x80}, 
{LENS_PAGE, B_XCEN, 0x80}, 
{LENS_PAGE, B_YCEN, 0x80}, 

{LENS_PAGE, XCEN, 0x80}, 
{LENS_PAGE, YCEN, 0x80}, 

{LENS_PAGE, LENSRGAIN_HI253, 0x80},
{LENS_PAGE, LENSGGAIN_HI253, 0x80},
{LENS_PAGE, LENSBGAIN_HI253, 0x80},

{LENS_PAGE, 0x30, 0xc8},
{LENS_PAGE, 0x31, 0x2b},
{LENS_PAGE, 0x32, 0x00},
{LENS_PAGE, 0x33, 0x00},
{LENS_PAGE, 0x34, 0x90},

{LENS_PAGE, LENSRP0, 0x42}, //0x48
{LENS_PAGE, LENSGrP0, 0x34}, //0x34
{LENS_PAGE, LENSBP0, 0x2a}, //0x29
{LENS_PAGE, LENSGbP0, 0x34}, //0x34

/////// PAGE 15
{LENS_PAGE, PAGEMODE, COLOR_PAGE},
{COLOR_PAGE, CMCCTL, 0x0f},


{COLOR_PAGE, CMCOFSGH, 0x42}, 
{COLOR_PAGE, CMCOFSGM, 0x32}, 
{COLOR_PAGE, CMCOFSGL, 0x24}, 
{COLOR_PAGE, CMCSIGN, 0x2f}, 


{COLOR_PAGE, CMC11, 0x8f},
{COLOR_PAGE, CMC12, 0x59},
{COLOR_PAGE, CMC13, 0x0a},
{COLOR_PAGE, CMC21, 0x15},
{COLOR_PAGE, CMC22, 0x5b},
{COLOR_PAGE, CMC23, 0x06},
{COLOR_PAGE, CMC31, 0x07},
{COLOR_PAGE, CMC32, 0x40},
{COLOR_PAGE, CMC33, 0x87}, 


{COLOR_PAGE, CMCOFSL11, 0x92},
{COLOR_PAGE, CMCOFSL12, 0x1b},
{COLOR_PAGE, CMCOFSL13, 0x89},
{COLOR_PAGE, CMCOFSL21, 0x81},
{COLOR_PAGE, CMCOFSL22, 0x00},
{COLOR_PAGE, CMCOFSL23, 0x01},
{COLOR_PAGE, CMCOFSL31, 0x89},
{COLOR_PAGE, CMCOFSL32, 0x9e},
{COLOR_PAGE, CMCOFSL33, 0x28},


{COLOR_PAGE, CMCOFSH11, 0x02},
{COLOR_PAGE, CMCOFSH12, 0x82},
{COLOR_PAGE, CMCOFSH13, 0x00},
{COLOR_PAGE, CMCOFSH21, 0x07},
{COLOR_PAGE, CMCOFSH22, 0x11},
{COLOR_PAGE, CMCOFSH23, 0x98},
{COLOR_PAGE, CMCOFSH31, 0x00},
{COLOR_PAGE, CMCOFSH32, 0x0b},
{COLOR_PAGE, CMCOFSH33, 0x8b},

{COLOR_PAGE, 0x80, 0x03},
{COLOR_PAGE, 0x85, 0x40},
{COLOR_PAGE, 0x87, 0x02},
{COLOR_PAGE, 0x88, 0x00},
{COLOR_PAGE, 0x89, 0x00},
{COLOR_PAGE, 0x8a, 0x00},



/////// PAGE 16
{COLOR_PAGE, PAGEMODE, GAMMA_PAGE},
{GAMMA_PAGE, GMACTL, 0x31},
{GAMMA_PAGE, 0x18, 0x5e}, 
{GAMMA_PAGE, 0x19, 0x5d}, 
{GAMMA_PAGE, 0x1a, 0x00}, 
{GAMMA_PAGE, 0x1b, 0x00}, 
{GAMMA_PAGE, 0x1c, 0xdc}, 
{GAMMA_PAGE, 0x1d, 0xff}, 


{GAMMA_PAGE, GGMA0, 0x00}, 
{GAMMA_PAGE, GGMA1, 0x0a},
{GAMMA_PAGE, GGMA2, 0x1f},
{GAMMA_PAGE, GGMA3, 0x33},
{GAMMA_PAGE, GGMA4, 0x53},
{GAMMA_PAGE, GGMA5, 0x6c},
{GAMMA_PAGE, GGMA6, 0x81},
{GAMMA_PAGE, GGMA7, 0x94},
{GAMMA_PAGE, GGMA8, 0xa4},
{GAMMA_PAGE, GGMA9, 0xb3},
{GAMMA_PAGE, GGMA10, 0xc0},
{GAMMA_PAGE, GGMA11, 0xcb},
{GAMMA_PAGE, GGMA12, 0xd5},
{GAMMA_PAGE, GGMA13, 0xde},
{GAMMA_PAGE, GGMA14, 0xe6},
{GAMMA_PAGE, GGMA15, 0xea},
{GAMMA_PAGE, GGMA16, 0xee}, 
{GAMMA_PAGE, GGMA17, 0xf2},
{GAMMA_PAGE, GGMA18, 0xf9},

{GAMMA_PAGE, RGMA0, 0x00}, 
{GAMMA_PAGE, RGMA1, 0x09},
{GAMMA_PAGE, RGMA2, 0x1f},
{GAMMA_PAGE, RGMA3, 0x37},
{GAMMA_PAGE, RGMA4, 0x5b},
{GAMMA_PAGE, RGMA5, 0x76},
{GAMMA_PAGE, RGMA6, 0x8d},
{GAMMA_PAGE, RGMA7, 0xae},
{GAMMA_PAGE, RGMA8, 0xb2},
{GAMMA_PAGE, RGMA9, 0xbe},
{GAMMA_PAGE, RGMA10, 0xc9}, 
{GAMMA_PAGE, RGMA11, 0xd2},
{GAMMA_PAGE, RGMA12, 0xdb},
{GAMMA_PAGE, RGMA13, 0xe4}, 
{GAMMA_PAGE, RGMA14, 0xeb}, 
{GAMMA_PAGE, RGMA15, 0xf0}, 
{GAMMA_PAGE, RGMA16, 0xf5}, 
{GAMMA_PAGE, RGMA17, 0xf7},
{GAMMA_PAGE, RGMA18, 0xf8},

{GAMMA_PAGE, BGMA0, 0x00}, 
{GAMMA_PAGE, BGMA1, 0x07},
{GAMMA_PAGE, BGMA2, 0x0c},
{GAMMA_PAGE, BGMA3, 0x18},
{GAMMA_PAGE, BGMA4, 0x31},
{GAMMA_PAGE, BGMA5, 0x4d},
{GAMMA_PAGE, BGMA6, 0x69},
{GAMMA_PAGE, BGMA7, 0x83},
{GAMMA_PAGE, BGMA8, 0x9b},
{GAMMA_PAGE, BGMA9, 0xb1},
{GAMMA_PAGE, BGMA10, 0xc3},
{GAMMA_PAGE, BGMA11, 0xd2},
{GAMMA_PAGE, BGMA12, 0xde},
{GAMMA_PAGE, BGMA13, 0xe8},
{GAMMA_PAGE, BGMA14, 0xf0},
{GAMMA_PAGE, BGMA15, 0xf5},
{GAMMA_PAGE, BGMA16, 0xfa},
{GAMMA_PAGE, BGMA17, 0xfd},
{GAMMA_PAGE, BGMA18, 0xff}, 



/////// PAGE 17
{GAMMA_PAGE, PAGEMODE, FLICKER_PAGE},
{FLICKER_PAGE, 0x10, 0xf7},

/////// PAGE 20
{FLICKER_PAGE, PAGEMODE, AUTOEXP_PAGE},
{AUTOEXP_PAGE, AECTL2, 0x1c},
{AUTOEXP_PAGE, 0x18, 0x30},
{AUTOEXP_PAGE, 0x1a, 0x08},
{AUTOEXP_PAGE, AEFRAMECTL1, 0x01}, 
{AUTOEXP_PAGE, 0x21, 0x30},
{AUTOEXP_PAGE, 0x22, 0x10},
{AUTOEXP_PAGE, 0x23, 0x00},
{AUTOEXP_PAGE, 0x24, 0x00}, 

{AUTOEXP_PAGE, AEFINECTL1, 0xe7},
{AUTOEXP_PAGE, AEFINECTL2, 0x0d}, 
{AUTOEXP_PAGE, AEFINECTL3, 0xff},
{AUTOEXP_PAGE, AEFINECTL4, 0x34}, 

{AUTOEXP_PAGE, AEFINECTL5, 0xc3},
{AUTOEXP_PAGE, AEFINECTL6, 0xcf}, 
{AUTOEXP_PAGE, AEFINECTL7, 0x33},
{AUTOEXP_PAGE, 0x30, 0x78}, 
{AUTOEXP_PAGE, 0x32, 0x03},
{AUTOEXP_PAGE, 0x33, 0x2e},
{AUTOEXP_PAGE, 0x34, 0x30},
{AUTOEXP_PAGE, 0x35, 0xd4},
{AUTOEXP_PAGE, 0x36, 0xfe},
{AUTOEXP_PAGE, 0x37, 0x32},
{AUTOEXP_PAGE, 0x38, 0x04},

{AUTOEXP_PAGE, 0x39, 0x22}, 
{AUTOEXP_PAGE, 0x3a, 0xde}, 

{AUTOEXP_PAGE, 0x3b, 0x22}, 
{AUTOEXP_PAGE, 0x3c, 0xde}, 

{AUTOEXP_PAGE, 0x50, 0x45},
{AUTOEXP_PAGE, 0x51, 0x88},

{AUTOEXP_PAGE, 0x56, 0x03},
{AUTOEXP_PAGE, 0x57, 0xf7},
{AUTOEXP_PAGE, 0x58, 0x14},
{AUTOEXP_PAGE, 0x59, 0x88},
{AUTOEXP_PAGE, 0x5a, 0x04},


{AUTOEXP_PAGE, AEWGT1, 0xff},
{AUTOEXP_PAGE, AEWGT2, 0xff},
{AUTOEXP_PAGE, AEWGT3, 0xea},
{AUTOEXP_PAGE, AEWGT4, 0xab},
{AUTOEXP_PAGE, AEWGT5, 0xea},
{AUTOEXP_PAGE, AEWGT6, 0xab},
{AUTOEXP_PAGE, AEWGT7, 0xeb},
{AUTOEXP_PAGE, AEWGT8, 0xeb},
{AUTOEXP_PAGE, AEWGT9, 0xeb},
{AUTOEXP_PAGE, AEWGT10, 0xeb},
{AUTOEXP_PAGE, AEWGT11, 0xea},
{AUTOEXP_PAGE, AEWGT12, 0xab},
{AUTOEXP_PAGE, AEWGT13, 0xea},
{AUTOEXP_PAGE, AEWGT14, 0xab},
{AUTOEXP_PAGE, AEWGT15, 0xff},
{AUTOEXP_PAGE, AEWGT16, 0xff},


{AUTOEXP_PAGE, YLVL, 0x42},
{AUTOEXP_PAGE, 0x71, 0x89},


{AUTOEXP_PAGE, 0x76, 0x43},
{AUTOEXP_PAGE, 0x77, 0xe2}, 
{AUTOEXP_PAGE, YTH1, 0x23}, 
{AUTOEXP_PAGE, YTH2HI, 0x46}, 
{AUTOEXP_PAGE, 0x7a, 0x23}, 
{AUTOEXP_PAGE, 0x7b, 0x22}, 
{AUTOEXP_PAGE, 0x7d, 0x23},

{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
{AUTOEXP_PAGE, EXPTIMEM, 0x5f}, 
{AUTOEXP_PAGE, EXPTIMEL, 0x00}, 

{AUTOEXP_PAGE, EXPMINH, 0x02}, 
{AUTOEXP_PAGE, EXPMINL, 0x00}, 


{AUTOEXP_PAGE, EXPMAXH, 0x07}, 
{AUTOEXP_PAGE, EXPMAXM, 0x50}, 
{AUTOEXP_PAGE, EXPMAXL, 0x00}, 

{AUTOEXP_PAGE, EXP100H, 0x75}, 
{AUTOEXP_PAGE, EXP100L, 0x00}, 
{AUTOEXP_PAGE, EXP120H, 0x61}, 
{AUTOEXP_PAGE, EXP120L, 0x00}, 

{AUTOEXP_PAGE, EXPLMTH, 0x18}, 
{AUTOEXP_PAGE, EXPLMTL, 0x00}, 
{AUTOEXP_PAGE, EXPUNITH, 0x02}, 
{AUTOEXP_PAGE, EXPUNITL, 0x00}, 



{AUTOEXP_PAGE, AG, 0x18},
{AUTOEXP_PAGE, AGMIN, 0x14}, 
{AUTOEXP_PAGE, AGMAX, 0xa0},
{AUTOEXP_PAGE, AGLVLH, 0x18},
{AUTOEXP_PAGE, AGTH1, 0x1a},
{AUTOEXP_PAGE, AGTH2, 0x44},
{AUTOEXP_PAGE, AGBTH1, 0x2f},
{AUTOEXP_PAGE, AGBTH2, 0x28},
{AUTOEXP_PAGE, AGBTH3, 0x25},
{AUTOEXP_PAGE, AGBTH4, 0x22},
{AUTOEXP_PAGE, AGBTH5, 0x21},
{AUTOEXP_PAGE, AGBTH6, 0x20},
{AUTOEXP_PAGE, AGBTH7, 0x1f},
{AUTOEXP_PAGE, AGBTH8, 0x1f},


{AUTOEXP_PAGE, AGSKY_HI253, 0x14},
{AUTOEXP_PAGE, 0xc1, 0x1f},
{AUTOEXP_PAGE, 0xc2, 0x1f},
{AUTOEXP_PAGE, AGLVLL_HI253, 0x18}, 
{AUTOEXP_PAGE, AGTIMETH, 0x10}, 

{AUTOEXP_PAGE, DGMAX, 0x80},
{AUTOEXP_PAGE, DGMIN, 0x40},

/////// PAGE 22
{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE},
{AUTOWB_PAGE, AWBCTL1, 0xfd},
{AUTOWB_PAGE, AWBCTL2, 0x2e},
{AUTOWB_PAGE, 0x19, 0x01}, 
{AUTOWB_PAGE, 0x20, 0x30},
{AUTOWB_PAGE, 0x21, 0x80},
{AUTOWB_PAGE, 0x24, 0x01},


{AUTOWB_PAGE, ULVL, 0x80},
{AUTOWB_PAGE, VLVL, 0x80},
{AUTOWB_PAGE, UVTH1, 0x11},
{AUTOWB_PAGE, UVTH2, 0x34},

{AUTOWB_PAGE, YRANGE, 0xf7}, 
{AUTOWB_PAGE, CDIFF, 0x55}, 
{AUTOWB_PAGE, CSUM2, 0x33}, 

{AUTOWB_PAGE, 0x43, 0xf7},
{AUTOWB_PAGE, 0x44, 0x55}, 
{AUTOWB_PAGE, 0x45, 0x44}, 

{AUTOWB_PAGE, WHTPXLTH, 0x00},
{AUTOWB_PAGE, 0x50, 0xb2},
{AUTOWB_PAGE, 0x51, 0x81},
{AUTOWB_PAGE, 0x52, 0x98},

{AUTOWB_PAGE, RGAIN, 0x45},
{AUTOWB_PAGE, GGAIN, 0x20},
{AUTOWB_PAGE, BGAIN, 0x2e},

{AUTOWB_PAGE, RMAX, 0x5e}, 
{AUTOWB_PAGE, RMIN, 0x1e}, 
{AUTOWB_PAGE, BMAX, 0x5e}, 
{AUTOWB_PAGE, BMIN, 0x22}, 

{AUTOWB_PAGE, RMAXM, 0x40},
{AUTOWB_PAGE, RMINM, 0x30},
{AUTOWB_PAGE, BMAXM, 0x3f},
{AUTOWB_PAGE, BMINM, 0x28}, 

{AUTOWB_PAGE, RMAXB, 0x40},
{AUTOWB_PAGE, RMINB, 0x33},
{AUTOWB_PAGE, BMAXB, 0x39},
{AUTOWB_PAGE, BMINB, 0x30},

{AUTOWB_PAGE, BGAINPARA1, 0x53}, 
{AUTOWB_PAGE, BGAINPARA2, 0x52}, 
{AUTOWB_PAGE, BGAINPARA3, 0x51}, 
{AUTOWB_PAGE, BGAINPARA4, 0x4e}, 
{AUTOWB_PAGE, BGAINPARA5, 0x4a}, 
{AUTOWB_PAGE, BGAINPARA6, 0x45},
{AUTOWB_PAGE, BGAINPARA7, 0x3d},
{AUTOWB_PAGE, BGAINPARA8, 0x31},
{AUTOWB_PAGE, BGAINPARA9, 0x28},
{AUTOWB_PAGE, BGAINPARA10, 0x24},
{AUTOWB_PAGE, BGAINPARA11, 0x20},
{AUTOWB_PAGE, BGAINPARA12, 0x20},

{AUTOWB_PAGE, BGAINBND1, 0xcc},
{AUTOWB_PAGE, BGAINBND2, 0xcc},
{AUTOWB_PAGE, RAINTH1, 0x48},
{AUTOWB_PAGE, RAINTH2, 0x38},
{AUTOWB_PAGE, RAINTH3, 0x30},

{AUTOWB_PAGE, RDELTA1, 0x60},
{AUTOWB_PAGE, BDELTA1, 0x34},
{AUTOWB_PAGE, RDELTA2, 0x6f},
{AUTOWB_PAGE, BDELTA2, 0xff},

{AUTOWB_PAGE, AWBEXPLMT1, 0x14}, 
{AUTOWB_PAGE, AWBEXPLMT2, 0x2c}, 
{AUTOWB_PAGE, AWBEXPLMT3, 0xcf},

{AUTOWB_PAGE, 0xad, 0x40},
{AUTOWB_PAGE, 0xae, 0x4a},

{AUTOWB_PAGE, 0xaf, 0x28}, 
{AUTOWB_PAGE, 0xb0, 0x26}, 

{AUTOWB_PAGE, 0xb1, 0x00}, 
{AUTOWB_PAGE, 0xb4, 0xea},
{AUTOWB_PAGE, 0xb8, 0xa0}, 
{AUTOWB_PAGE, 0xb9, 0x00},


{AUTOWB_PAGE, PAGEMODE, AUTOEXP_PAGE},
{AUTOEXP_PAGE, AECTL1, 0x8c},


{AUTOEXP_PAGE, PAGEMODE, AUTOEXP_PAGE},
{AUTOEXP_PAGE, AECTL1, 0xcc},

{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE},
{AUTOWB_PAGE, AWBCTL1, 0xe9},

{AUTOWB_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PLLCTL1, 0x03},
{WINDOW_PAGE, PLLCTL1, 0x73},

{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, PWRCTL, 0x60},
};

/* source: SVGA~15fps_variable.usf patched w/SVGA_15fps_fixed.usf */
/* This is the former master initialization sequence */
static const char hi253_svga_18fps_fixed[][3] =
{
	{WINDOW_PAGE, PWRCTL, 0xf1},
	{WINDOW_PAGE, PWRCTL, 0xf3},
	{WINDOW_PAGE, PWRCTL, 0xf1}, //91},
	{WINDOW_PAGE, 0x08,0x0f},
	{WINDOW_PAGE, PWRCTL, 0xf0}, //90},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PLLCTL1, 0x03},
	{WINDOW_PAGE, PLLCTL1, 0x73},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PLLCTL1, 0x00},
	{WINDOW_PAGE, PWRCTL, 0xf1},
	{WINDOW_PAGE, 0x08,0x00},
	{WINDOW_PAGE, PWRCTL, 0xf3},
	{WINDOW_PAGE, PWRCTL, 0xf1},
	{WINDOW_PAGE, PAGEMODE, AUTOEXP_PAGE},
	{AUTOEXP_PAGE, AECTL1, 0x1c},
	{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE},
	{AUTOWB_PAGE, AWBCTL1, 0x69},

	{AUTOWB_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, VDOCTL1, 0x13},//pre 1  ->0x11,pre2 ->0x13//bit3 0->type1 1->type2
	{WINDOW_PAGE, VDOCTL2, 0x90},
{WINDOW_PAGE, VDOCTL2, 0x94},//patch: 15 fps fixed

	{WINDOW_PAGE, SYNCCTL, 0x00}, //00}, //bit5 0-->type1  1-->type2  // bit4 hsync 0 or 1 active

	{WINDOW_PAGE, 0x0b,0xaa},
	{WINDOW_PAGE, 0x0c,0xaa},
	{WINDOW_PAGE, 0x0d,0xaa},
	{WINDOW_PAGE, WINROWH, 0x00},
	{WINDOW_PAGE, WINROWL, 0x04},
	{WINDOW_PAGE, WINCOLH, 0x00},
	{WINDOW_PAGE, WINCOLL, 0x07},
	{WINDOW_PAGE, WINHGTH, 0x04},
	{WINDOW_PAGE, WINHGTL, 0xb0},
	{WINDOW_PAGE, WINWIDH, 0x06},
	{WINDOW_PAGE, WINWIDL, 0x40},

	{WINDOW_PAGE, HBLANKH, 0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL, 0x68}, 
{WINDOW_PAGE, HBLANKL, 0x78}, //patch: 15 fps fixed
	{WINDOW_PAGE, VSYNCH, 0x00},
	{WINDOW_PAGE, VSYNCL, 0x14},

	{WINDOW_PAGE, VSCTL1, 0x04},
	{WINDOW_PAGE, VSCTL2, 0x18},
	{WINDOW_PAGE, VSCTL3, 0xd8},

	{WINDOW_PAGE, BLCCTL, 0x2e},
	{WINDOW_PAGE, 0x81,0x7e},
	{WINDOW_PAGE, 0x82,0x90},
	{WINDOW_PAGE, 0x83,0x00},
	{WINDOW_PAGE, 0x84,0x0c},
	{WINDOW_PAGE, 0x85,0x00},

	{WINDOW_PAGE, BLCTIMETHON, 0x03}, //BLC_TIME_TH_ON 
{WINDOW_PAGE, BLCTIMETHON, 0x06}, //BLC_TIME_TH_ON //patch: 15 fps fixed
	{WINDOW_PAGE, BLCTIMETHOFF, 0x03}, //BLC_TIME_TH_OFF
{WINDOW_PAGE, BLCTIMETHOFF, 0x06}, //BLC_TIME_TH_OFF //patch: 15 fps fixed
	{WINDOW_PAGE, BLCAGTHH, 0xa8}, //BLC_AG_TH_ON   
	{WINDOW_PAGE, BLCAGTHL, 0xa0}, //BLC_AG_TH_OFF  

	{WINDOW_PAGE, BLCDGH, 0x75},
	{WINDOW_PAGE, BLCDGL, 0x70},
	{WINDOW_PAGE, 0x96,0xdc},
	{WINDOW_PAGE, 0x97,0xfe},
	{WINDOW_PAGE, 0x98,0x38},
	{WINDOW_PAGE, 0x99, 0x00}, //OutDoor BLC
	{WINDOW_PAGE, 0x9a, 0x00}, 
	{WINDOW_PAGE, 0x9b, 0x00}, 
	{WINDOW_PAGE, 0x9c, 0x00}, 
	{WINDOW_PAGE, BLCOFSDB, 0x00}, //Dark BLC 
	{WINDOW_PAGE, BLCOFSDGB, 0x00},
	{WINDOW_PAGE, BLCOFSDR, 0x00},
	{WINDOW_PAGE, BLCOFSDGR, 0x00},
	{WINDOW_PAGE, 0xa8, 0x00}, //Normal BLC 
	{WINDOW_PAGE, 0xaa, 0x00}, 
	{WINDOW_PAGE, 0xac, 0x00}, 
	{WINDOW_PAGE, 0xae, 0x00}, 

	{WINDOW_PAGE, PAGEMODE, UNDOC_0x02_PAGE},
	{UNDOC_0x02_PAGE, 0x12,0x03},
	{UNDOC_0x02_PAGE, 0x13,0x03},
	{UNDOC_0x02_PAGE, 0x16,0x00},
	{UNDOC_0x02_PAGE, 0x17,0x8C},
	{UNDOC_0x02_PAGE, 0x18,0x4c},
	{UNDOC_0x02_PAGE, 0x19,0x00},
	{UNDOC_0x02_PAGE, 0x1a,0x39},
	{UNDOC_0x02_PAGE, 0x1c,0x09},
	{UNDOC_0x02_PAGE, 0x1d,0x40},
	{UNDOC_0x02_PAGE, 0x1e,0x30},
	{UNDOC_0x02_PAGE, 0x1f,0x10},
	{UNDOC_0x02_PAGE, 0x20,0x77},
	{UNDOC_0x02_PAGE, 0x21,0xde},
	{UNDOC_0x02_PAGE, 0x22,0xa7},
	{UNDOC_0x02_PAGE, 0x23,0x30},
	{UNDOC_0x02_PAGE, 0x27,0x3c},
	{UNDOC_0x02_PAGE, 0x2b,0x80},
	{UNDOC_0x02_PAGE, 0x2e,0x00},
	{UNDOC_0x02_PAGE, 0x2f,0x00},
	{UNDOC_0x02_PAGE, 0x30,0x05},
	{UNDOC_0x02_PAGE, 0x50,0x20},
	{UNDOC_0x02_PAGE, 0x52,0x01},
	{UNDOC_0x02_PAGE, 0x53,0xc1},
	{UNDOC_0x02_PAGE, 0x55,0x1c},
	{UNDOC_0x02_PAGE, 0x56,0x11},
	{UNDOC_0x02_PAGE, 0x5d,0xa2},
	{UNDOC_0x02_PAGE, 0x5e,0x5a},
	{UNDOC_0x02_PAGE, 0x60,0x87},
	{UNDOC_0x02_PAGE, 0x61,0x99},
	{UNDOC_0x02_PAGE, 0x62,0x88},
	{UNDOC_0x02_PAGE, 0x63,0x97},
	{UNDOC_0x02_PAGE, 0x64,0x88},
	{UNDOC_0x02_PAGE, 0x65,0x97},
	{UNDOC_0x02_PAGE, 0x67,0x0c},
	{UNDOC_0x02_PAGE, 0x68,0x0c},
	{UNDOC_0x02_PAGE, 0x69,0x0c},
	{UNDOC_0x02_PAGE, 0x72,0x89},
	{UNDOC_0x02_PAGE, 0x73,0x96},
	{UNDOC_0x02_PAGE, 0x74,0x89},
	{UNDOC_0x02_PAGE, 0x75,0x96},
	{UNDOC_0x02_PAGE, 0x76,0x89},
	{UNDOC_0x02_PAGE, 0x77,0x96},
	{UNDOC_0x02_PAGE, 0x7c,0x85},
	{UNDOC_0x02_PAGE, 0x7d,0xaf},
	{UNDOC_0x02_PAGE, 0x80,0x01},
	{UNDOC_0x02_PAGE, 0x81,0x7f},
	{UNDOC_0x02_PAGE, 0x82,0x13},
	{UNDOC_0x02_PAGE, 0x83,0x24},
	{UNDOC_0x02_PAGE, 0x84,0x7d},
	{UNDOC_0x02_PAGE, 0x85,0x81},
	{UNDOC_0x02_PAGE, 0x86,0x7d},
	{UNDOC_0x02_PAGE, 0x87,0x81},
	{UNDOC_0x02_PAGE, 0x92,0x48},
	{UNDOC_0x02_PAGE, 0x93,0x54},
	{UNDOC_0x02_PAGE, 0x94,0x7d},
	{UNDOC_0x02_PAGE, 0x95,0x81},
	{UNDOC_0x02_PAGE, 0x96,0x7d},
	{UNDOC_0x02_PAGE, 0x97,0x81},
	{UNDOC_0x02_PAGE, 0xa0,0x02},
	{UNDOC_0x02_PAGE, 0xa1,0x7b},
	{UNDOC_0x02_PAGE, 0xa2,0x02},
	{UNDOC_0x02_PAGE, 0xa3,0x7b},
	{UNDOC_0x02_PAGE, 0xa4,0x7b},
	{UNDOC_0x02_PAGE, 0xa5,0x02},
	{UNDOC_0x02_PAGE, 0xa6,0x7b},
	{UNDOC_0x02_PAGE, 0xa7,0x02},
	{UNDOC_0x02_PAGE, 0xa8,0x85},
	{UNDOC_0x02_PAGE, 0xa9,0x8c},
	{UNDOC_0x02_PAGE, 0xaa,0x85},
	{UNDOC_0x02_PAGE, 0xab,0x8c},
	{UNDOC_0x02_PAGE, 0xac,0x10},
	{UNDOC_0x02_PAGE, 0xad,0x16},
	{UNDOC_0x02_PAGE, 0xae,0x10},
	{UNDOC_0x02_PAGE, 0xaf,0x16},
	{UNDOC_0x02_PAGE, 0xb0,0x99},
	{UNDOC_0x02_PAGE, 0xb1,0xa3},
	{UNDOC_0x02_PAGE, 0xb2,0xa4},
	{UNDOC_0x02_PAGE, 0xb3,0xae},
	{UNDOC_0x02_PAGE, 0xb4,0x9b},
	{UNDOC_0x02_PAGE, 0xb5,0xa2},
	{UNDOC_0x02_PAGE, 0xb6,0xa6},
	{UNDOC_0x02_PAGE, 0xb7,0xac},
	{UNDOC_0x02_PAGE, 0xb8,0x9b},
	{UNDOC_0x02_PAGE, 0xb9,0x9f},
	{UNDOC_0x02_PAGE, 0xba,0xa6},
	{UNDOC_0x02_PAGE, 0xbb,0xaa},
	{UNDOC_0x02_PAGE, 0xbc,0x9b},
	{UNDOC_0x02_PAGE, 0xbd,0x9f},
	{UNDOC_0x02_PAGE, 0xbe,0xa6},
	{UNDOC_0x02_PAGE, 0xbf,0xaa},
	{UNDOC_0x02_PAGE, 0xc4,0x2c},
	{UNDOC_0x02_PAGE, 0xc5,0x43},
	{UNDOC_0x02_PAGE, 0xc6,0x63},
	{UNDOC_0x02_PAGE, 0xc7,0x79},
	{UNDOC_0x02_PAGE, 0xc8,0x2d},
	{UNDOC_0x02_PAGE, 0xc9,0x42},
	{UNDOC_0x02_PAGE, 0xca,0x2d},
	{UNDOC_0x02_PAGE, 0xcb,0x42},
	{UNDOC_0x02_PAGE, 0xcc,0x64},
	{UNDOC_0x02_PAGE, 0xcd,0x78},
	{UNDOC_0x02_PAGE, 0xce,0x64},
	{UNDOC_0x02_PAGE, 0xcf,0x78},
	{UNDOC_0x02_PAGE, 0xd0,0x0a},
	{UNDOC_0x02_PAGE, 0xd1,0x09},
	{UNDOC_0x02_PAGE, 0xd4,0x03}, //BLC_TIME_TH_ON
{UNDOC_0x02_PAGE, 0xd4,0x06}, //BLC_TIME_TH_ON//patch: 15 fps fixed
	{UNDOC_0x02_PAGE, 0xd5,0x03}, //BLC_TIME_TH_OFF
{UNDOC_0x02_PAGE, 0xd5,0x06}, //BLC_TIME_TH_OFF//patch 15 fps fixed
	{UNDOC_0x02_PAGE, 0xd6,0xa8}, //
	{UNDOC_0x02_PAGE, 0xd7,0xa0},
	{UNDOC_0x02_PAGE, 0xe0,0xc4},
	{UNDOC_0x02_PAGE, 0xe1,0xc4},
	{UNDOC_0x02_PAGE, 0xe2,0xc4},
	{UNDOC_0x02_PAGE, 0xe3,0xc4},
	{UNDOC_0x02_PAGE, 0xe4,0x00},
	{UNDOC_0x02_PAGE, 0xe8,0x80},
	{UNDOC_0x02_PAGE, 0xe9,0x40},
	{UNDOC_0x02_PAGE, 0xea,0x7f},
	{UNDOC_0x02_PAGE, 0xf0,0x01},
	{UNDOC_0x02_PAGE, 0xf1,0x01},
	{UNDOC_0x02_PAGE, 0xf2,0x01},
	{UNDOC_0x02_PAGE, 0xf3,0x01},
	{UNDOC_0x02_PAGE, 0xf4,0x01},

	{UNDOC_0x02_PAGE, PAGEMODE, UNDOC_0x03_PAGE},
	{UNDOC_0x03_PAGE, 0x10,0x10},

	{UNDOC_0x03_PAGE, PAGEMODE, FORMAT_PAGE},
	{FORMAT_PAGE, ISPCTL1, 0x07},//bit2  ITU656 enable 1->active
	{FORMAT_PAGE, ISPCTL3, 0x30},
	{FORMAT_PAGE, ISPCTL4, 0x02},
	{FORMAT_PAGE, ITUCTL, 0x15},//bit2 ITU656   0->YUV 0-255, 1->Y=16-236 U/V=16-240
	{FORMAT_PAGE, 0x30,0x00},
	{FORMAT_PAGE, 0x31,0x00},
	{FORMAT_PAGE, 0x32,0x00},
	{FORMAT_PAGE, 0x33,0x00},
	{FORMAT_PAGE, 0x34,0x30},
	{FORMAT_PAGE, 0x35,0x00},
	{FORMAT_PAGE, 0x36,0x00},
	{FORMAT_PAGE, 0x38,0x00},
	{FORMAT_PAGE, 0x3e,0x58},
	{FORMAT_PAGE, 0x3f,0x00},
	{FORMAT_PAGE, YOFS, 0x80},
	{FORMAT_PAGE, DYOFS, 0x00},
	{FORMAT_PAGE, CONTRAST, 0x85}, //contrast//0x80
	{FORMAT_PAGE, SATCTL, 0x67},

	{FORMAT_PAGE, SATB, 0x80}, //Sat B LHC
	{FORMAT_PAGE, SATR, 0x80}, //Sat R LHC
	{FORMAT_PAGE, AGSAT, 0x50}, //ACS thr.

	{FORMAT_PAGE, AGSAT, 0x50},
	{FORMAT_PAGE, 0x64,0x41},
	{FORMAT_PAGE, SATTIMETH, 0x42},
	{FORMAT_PAGE, SATOUTDEL, 0x00}, //20}, //outdoor sat offset
	{FORMAT_PAGE, CBPOSSAT, 0x80}, //Cb+ 
	{FORMAT_PAGE, CBNEGSAT, 0x90}, //8a}, //80}, //Cb- 
	{FORMAT_PAGE, CRPOSSAT, 0x80}, //Cr+ 
	{FORMAT_PAGE, CRNEGSAT, 0x80}, //Cr- 


	{FORMAT_PAGE, 0x72, 0x80},
	{FORMAT_PAGE, 0x73, 0x10},
	{FORMAT_PAGE, 0x74, 0x6b}, 
	{FORMAT_PAGE, 0x76, 0x01}, //White protection ON
	{FORMAT_PAGE, 0x77, 0x04}, 

	{FORMAT_PAGE, PAGEMODE, NOISE1_PAGE}, //11 Page D-LPF 
	{NOISE1_PAGE, DLPFCTL1, 0x7f}, 
	{NOISE1_PAGE, DLPFCTL2, 0x40},
	{NOISE1_PAGE, 0x12, 0x0a},
	{NOISE1_PAGE, 0x13, 0xbb}, 
	{NOISE1_PAGE, LPFAGTHL_HI253, 0x31},
	{NOISE1_PAGE, LPFAGTHH_HI253, 0x34},
	{NOISE1_PAGE, LPFOUTTHL_HI253, 0x0f},
	{NOISE1_PAGE, LPFOUTTHH_HI253, 0x10},
	{NOISE1_PAGE, LPFYMEANTHL_HI253, 0x30},
	{NOISE1_PAGE, LPFYMEANTHH_HI253, 0x32},

	{NOISE1_PAGE, OUT2YBOUNDH, 0x70}, //Outdoor 2
	{NOISE1_PAGE, OUT2YBOUNDL, 0x18}, //10},
	{NOISE1_PAGE, OUT2RATIO, 0x58},
	{NOISE1_PAGE, OUT2THH, 0x10}, //09},
	{NOISE1_PAGE, OUT2THM, 0x10}, //09}, 
	{NOISE1_PAGE, OUT2THL, 0x10}, //09}, 

	{NOISE1_PAGE, OUT1YBOUNDH, 0x70}, //Outdoor 1
	{NOISE1_PAGE, OUT1YBOUNDL, 0x18},
	{NOISE1_PAGE, OUT1RATIO, 0x58},
	{NOISE1_PAGE, OUT1THH, 0x10}, //09},
	{NOISE1_PAGE, OUT1THM, 0x10}, //09}, 
	{NOISE1_PAGE, OUT1THL, 0x10}, //09}, 

	{NOISE1_PAGE, INYBOUNDH, 0x80}, //Indoor
	{NOISE1_PAGE, INYBOUNDL, 0x18},
	{NOISE1_PAGE, INRATIO, 0x40},
	{NOISE1_PAGE, INTHH_HI253, 0x10}, //0c},
	{NOISE1_PAGE, INTHM_HI253, 0x10}, //0c}, 
	{NOISE1_PAGE, INTHL_HI253, 0x10}, //0c}, 

	{NOISE1_PAGE, DARK1YBNDH, 0x80}, //Dark 1
	{NOISE1_PAGE, DARK1YBNDL, 0x18},
	{NOISE1_PAGE, DARK1RATIO, 0x40},
	{NOISE1_PAGE, DARK1THH, 0x13},
	{NOISE1_PAGE, DARK1THM, 0x13}, 
	{NOISE1_PAGE, DARK1THL, 0x13},
	 
	{NOISE1_PAGE, DARK2YBNDH, 0x90}, //Dark 2
	{NOISE1_PAGE, DARK2YBNDL, 0x40},
	{NOISE1_PAGE, DARK2RATIO, 0x58},
	{NOISE1_PAGE, DARK2THH, 0x13},
	{NOISE1_PAGE, DARK2THM, 0x13}, 
	{NOISE1_PAGE, DARK2THL, 0x13}, 

	{NOISE1_PAGE, DARK3YBNDH, 0x80}, //Dark 3
	{NOISE1_PAGE, DARK3YBNDL, 0x30},
	{NOISE1_PAGE, DARK3RATIO, 0x58},
	{NOISE1_PAGE, DARK3THH, 0x13},
	{NOISE1_PAGE, DARK3THM, 0x13}, 
	{NOISE1_PAGE, DARK3THL, 0x13},

	{NOISE1_PAGE, 0x54,0x11},
	{NOISE1_PAGE, 0x55, 0x0d},
	{NOISE1_PAGE, 0x56,0x20},
	{NOISE1_PAGE, 0x57, 0x01},
	{NOISE1_PAGE, 0x58, 0x00},
	{NOISE1_PAGE, 0x59, 0x00},
	{NOISE1_PAGE, 0x5a, 0x1f},
	{NOISE1_PAGE, 0x5b, 0x3f},
	{NOISE1_PAGE, 0x5c,0x00},

	{NOISE1_PAGE, 0x60,0x3f},
	{NOISE1_PAGE, 0x62, 0x10}, 
	{NOISE1_PAGE, 0x70,0x06},

	{NOISE1_PAGE, PAGEMODE, NOISE2_PAGE}, //Page 12
	{NOISE2_PAGE, YCLPFCTL1, 0x0f},
	{NOISE2_PAGE, YCLPFCTL2, 0x0f},

	{NOISE2_PAGE, 0x25,0x30},
	{NOISE2_PAGE, 0x28,0x00},
	{NOISE2_PAGE, 0x29,0x00},
	{NOISE2_PAGE, 0x2a,0x00},
	{NOISE2_PAGE, YCPRWTH, 0x30},
	{NOISE2_PAGE, YCUNI1TH, 0x38},
	{NOISE2_PAGE, YCUNI2TH_HI253, 0x42},
	{NOISE2_PAGE, YCUNI3TH_HI253, 0x60},
	{NOISE2_PAGE, YCNOR1TH_HI253, 0x70},
	{NOISE2_PAGE, YCNOR2TH_HI253, 0x80},
	{NOISE2_PAGE, YCNOR3TH_HI253, 0xa0},

	{NOISE2_PAGE, YCOUT2THH, 0xc0}, //a0}, //outdoor 2
	{NOISE2_PAGE, YCOUT2THL, 0x55}, //40},
	{NOISE2_PAGE, YCOUT2STDH, 0x80}, //a0},
	{NOISE2_PAGE, YCOUT2STDM, 0x80}, //C0},  
	{NOISE2_PAGE, YCOUT2STDL, 0x90},
	{NOISE2_PAGE, YCOUT2RAT, 0x80},

	{NOISE2_PAGE, YCOUT1THH, 0xc0}, //b0}, //outdoor 1
	{NOISE2_PAGE, YCOUT2THL, 0x55},
	{NOISE2_PAGE, YCOUT1STDH, 0x80}, //a0},
	{NOISE2_PAGE, YCOUT1STDM, 0x80}, //C0}, 
	{NOISE2_PAGE, YCOUT1STDL, 0x90},
	{NOISE2_PAGE, YCOUT1RAT, 0x80},

	{NOISE2_PAGE, YCINTHH_HI253, 0xb0}, //Indoor
	{NOISE2_PAGE, YCINTHL_HI253, 0x40},
	{NOISE2_PAGE, YCINSTDH_HI253, 0xb0}, 
	{NOISE2_PAGE, YCINSTDM_HI253, 0xc0}, 
	{NOISE2_PAGE, YCINSTDL_HI253, 0xc0},
	{NOISE2_PAGE, YCINRAT_HI253, 0x80},

	{NOISE2_PAGE, YCDARK1THH_HI253, 0xb0}, //Dark 1
	{NOISE2_PAGE, YCDARK1THL_HI253, 0x60},
	{NOISE2_PAGE, YCDARK1STDH_HI253, 0xc0},
	{NOISE2_PAGE, YCDARK1STDM_HI253, 0xc0},
	{NOISE2_PAGE, YCDARK1STDL_HI253, 0xc0}, 
	{NOISE2_PAGE, YCDARK1RAT_HI253, 0x80}, //70},

	{NOISE2_PAGE, YCDARK2THH, 0x90}, //Dark 2
	{NOISE2_PAGE, YCDARK2THL, 0x40},
	{NOISE2_PAGE, YCDARK2STDH, 0xd0},
	{NOISE2_PAGE, YCDARK2STDM, 0xd0},
	{NOISE2_PAGE, YCDARK2STDL, 0xc0}, 
	{NOISE2_PAGE, YCDARK2RAT, 0x80}, //70},

	{NOISE2_PAGE, YCDARK3THH, 0x88}, //Dark 3
	{NOISE2_PAGE, YCDARK3THL, 0x40},
	{NOISE2_PAGE, YCDARK3STDH, 0xe0},
	{NOISE2_PAGE, YCDARK3STDM, 0xe0},
	{NOISE2_PAGE, YCDARK3STDL, 0xe0},
	{NOISE2_PAGE, YCDARK3RAT, 0x80},

	{NOISE2_PAGE, 0x70, 0x15},
	{NOISE2_PAGE, 0x71,0x01},
	{NOISE2_PAGE, 0x72, 0x18},
	{NOISE2_PAGE, 0x73,0x01},
	{NOISE2_PAGE, 0x74,0x25},
	{NOISE2_PAGE, 0x75,0x15},
	{NOISE2_PAGE, 0x80, 0x20},
	{NOISE2_PAGE, 0x81, 0x40},
	{NOISE2_PAGE, 0x82, 0x65},
	{NOISE2_PAGE, 0x85,0x1a},
	{NOISE2_PAGE, 0x88,0x00},
	{NOISE2_PAGE, 0x89,0x00},
	{NOISE2_PAGE, DPCCTL, 0x5d}, 
	{NOISE2_PAGE, 0xD0,0x0c},
	{NOISE2_PAGE, 0xD1,0x80},
	{NOISE2_PAGE, 0xD2,0x67},
	{NOISE2_PAGE, 0xD3,0x00},
	{NOISE2_PAGE, 0xD4,0x00},
	{NOISE2_PAGE, 0xD5,0x02},
	{NOISE2_PAGE, 0xD6,0xff},
	{NOISE2_PAGE, 0xD7,0x18},
	{NOISE2_PAGE, 0x3b,0x06},
	{NOISE2_PAGE, 0x3c,0x06},
	{NOISE2_PAGE, 0xc5,0x30},
	{NOISE2_PAGE, 0xc6,0x2a},

	{NOISE2_PAGE, PAGEMODE, EDGE_PAGE},
	{EDGE_PAGE, EDGECTL1, 0xab},
	{EDGE_PAGE, EDGECTL2, 0x7b},
	{EDGE_PAGE, EDGECTL3, 0x02}, //06}, 1017
	{EDGE_PAGE, EDGECTL5_HI253, 0x00},
	{EDGE_PAGE, EDGENGAIN, 0x08}, //15},
	{EDGE_PAGE, EDGEPGAIN, 0x03}, //13},
	{EDGE_PAGE, 0x22,0x33},
	{EDGE_PAGE, EDGEHCLIP1TH, 0x04},
	{EDGE_PAGE, EDGEHCLIP2TH, 0x09},
	{EDGE_PAGE, EDGELCLIPTH, 0x08},
	{EDGE_PAGE, EDGELCLIPLMT, 0x20},
	{EDGE_PAGE, 0x27,0x30},
	{EDGE_PAGE, EDGETIMETH_HI253, 0x12},
	{EDGE_PAGE, EDGEAGTH_HI253, 0x50},
	{EDGE_PAGE, 0x2b,0x06},
	{EDGE_PAGE, 0x2c,0x07},
	{EDGE_PAGE, EDGELCLIPTH, 0x08},
	{EDGE_PAGE, 0x2d,0x0c},
	{EDGE_PAGE, 0x2e,0x12},
	{EDGE_PAGE, 0x2f,0x12},

	{EDGE_PAGE, 0x50,0x10},
	{EDGE_PAGE, 0x51, 0x10}, 
	{EDGE_PAGE, 0x52, 0x10}, 
	{EDGE_PAGE, 0x53,0x0c},
	{EDGE_PAGE, 0x54, 0x0c}, 
	{EDGE_PAGE, 0x55, 0x0c}, 
	{EDGE_PAGE, 0x56,0x10},
	{EDGE_PAGE, 0x57, 0x10}, 
	{EDGE_PAGE, 0x58, 0x10}, 
	{EDGE_PAGE, 0x59,0x0c},
	{EDGE_PAGE, 0x5a, 0x0c}, 
	{EDGE_PAGE, 0x5b, 0x0c}, 

	{EDGE_PAGE, 0x5c,0x0a},
	{EDGE_PAGE, 0x5d, 0x0a}, 
	{EDGE_PAGE, 0x5e,0x0a},
	{EDGE_PAGE, 0x5f,0x08},
	{EDGE_PAGE, 0x60, 0x08}, 
	{EDGE_PAGE, 0x61,0x08},
	{EDGE_PAGE, 0x62,0x08},
	{EDGE_PAGE, 0x63, 0x08}, 
	{EDGE_PAGE, 0x64,0x08},
	{EDGE_PAGE, 0x65,0x06},
	{EDGE_PAGE, 0x66, 0x06}, 
	{EDGE_PAGE, 0x67,0x06},

	{EDGE_PAGE, 0x68,0x07},
	{EDGE_PAGE, 0x69, 0x07}, 
	{EDGE_PAGE, 0x6a,0x07},
	{EDGE_PAGE, 0x6b,0x06},
	{EDGE_PAGE, 0x6c, 0x06}, 
	{EDGE_PAGE, 0x6d,0x06},
	{EDGE_PAGE, 0x6e,0x07},
	{EDGE_PAGE, 0x6f, 0x07},
	{EDGE_PAGE, 0x70,0x07},
	{EDGE_PAGE, 0x71,0x06},
	{EDGE_PAGE, 0x72, 0x06}, 
	{EDGE_PAGE, 0x73,0x06},
	 
	{EDGE_PAGE, EDGE2DCTL1, 0xfd}, //00}, //0x00-Pre1,2, 0xfd-Capture

	{EDGE_PAGE, EDGE2DCTL2, 0x1f},
	{EDGE_PAGE, EDGE2DCTL3, 0x01}, 
	{EDGE_PAGE, EDGE2DCTL4, 0x31},
	{EDGE_PAGE, EDGE2DNGAIN, 0x3f},
	{EDGE_PAGE, EDGE2DPGAIN, 0x3f},
	{EDGE_PAGE, 0x92,0x33},
	{EDGE_PAGE, EDGE2DLCLIPLMT, 0x30},
	{EDGE_PAGE, EDGE2DHCLIP1TH, 0x05},
	{EDGE_PAGE, EDGE2DHCLIP2TH, 0x18},
	{EDGE_PAGE, 0x97,0x30},
	{EDGE_PAGE, 0x99,0x35},
	{EDGE_PAGE, EDGE2DLCOUT2N, 0x01},
	{EDGE_PAGE, EDGE2DLCOUT2P, 0x02},
	{EDGE_PAGE, EDGE2DLCOUT1N, 0x01},
	{EDGE_PAGE, EDGE2DLCOUT1P, 0x02},
	{EDGE_PAGE, EDGE2DLCINN, 0x02},
	{EDGE_PAGE, EDGE2DLCINP, 0x04},
	{EDGE_PAGE, EDGE2DLCD1N, 0x04},
	{EDGE_PAGE, EDGE2DLCD1P, 0x06},
	{EDGE_PAGE, EDGE2DLCD2N, 0x05},
	{EDGE_PAGE, EDGE2DLCD2P, 0x08},
	{EDGE_PAGE, EDGE2DLCD3N, 0x05},
	{EDGE_PAGE, EDGE2DLCD3P, 0x08},

	{EDGE_PAGE, 0xb0, 0x30}, //32}, //outdoor2 Edge 2D
	{EDGE_PAGE, 0xb1, 0x30}, //32}, 
	{EDGE_PAGE, 0xb2, 0x1a}, //32}, 

	{EDGE_PAGE, 0xb3, 0x30}, //32}, 
	{EDGE_PAGE, 0xb4, 0x30}, //32}, 
	{EDGE_PAGE, 0xb5, 0x1a}, //32}, 

	{EDGE_PAGE, 0xb6, 0x30}, //outdoor1 Edge 2D 
	{EDGE_PAGE, 0xb7, 0x30}, 
	{EDGE_PAGE, 0xb8, 0x1a}, //2a}, 

	{EDGE_PAGE, 0xb9, 0x30}, 
	{EDGE_PAGE, 0xba, 0x30}, 
	{EDGE_PAGE, 0xbb, 0x1a}, //2a}, 

	{EDGE_PAGE, 0xbc, 0x30}, //indoor Edge 2D 
	{EDGE_PAGE, 0xbd,0x30},
	{EDGE_PAGE, 0xbe, 0x1a}, //20}, 

	{EDGE_PAGE, 0xbf, 0x30}, 
	{EDGE_PAGE, 0xc0,0x30},
	{EDGE_PAGE, 0xc1, 0x1a}, //20}, 

	{EDGE_PAGE, 0xc2, 0x2a}, //dark1 Edge 2D
	{EDGE_PAGE, 0xc3, 0x2a}, 
	{EDGE_PAGE, 0xc4, 0x1a}, 

	{EDGE_PAGE, 0xc5, 0x2a}, 
	{EDGE_PAGE, 0xc6, 0x2a}, 
	{EDGE_PAGE, 0xc7, 0x1a}, 

	{EDGE_PAGE, 0xc8, 0x18}, //dark2 Edge 2D
	{EDGE_PAGE, 0xc9, 0x18}, 
	{EDGE_PAGE, 0xca, 0x18}, 

	{EDGE_PAGE, 0xcb,0x18},
	{EDGE_PAGE, 0xcc, 0x18}, 
	{EDGE_PAGE, 0xcd, 0x18}, 

	{EDGE_PAGE, 0xce, 0x18}, //dark3 Edge 2D 
	{EDGE_PAGE, 0xcf, 0x18}, 
	{EDGE_PAGE, 0xd0, 0x18},

	{EDGE_PAGE, 0xd1,0x18},
	{EDGE_PAGE, 0xd2, 0x18},
	{EDGE_PAGE, 0xd3, 0x18},

	{EDGE_PAGE, PAGEMODE, LENS_PAGE},
	{LENS_PAGE, LENSCTL1, 0x11},
	{LENS_PAGE, Gb_XCEN, 0x80},
	{LENS_PAGE, Gb_YCEN, 0x80},
	{LENS_PAGE, R_XCEN, 0x80},
	{LENS_PAGE, R_YCEN, 0x80},
	{LENS_PAGE, B_XCEN, 0x80},
	{LENS_PAGE, B_YCEN, 0x80},
	{LENS_PAGE, XCEN, 0x60}, //x cen/
	{LENS_PAGE, YCEN, 0x90}, //Y
	{LENS_PAGE, LENSRGAIN_HI253, 0x7a}, //
	{LENS_PAGE, LENSGGAIN_HI253, 0x80},
	{LENS_PAGE, LENSBGAIN_HI253, 0x80},
	{LENS_PAGE, 0x30,0xb1}, //0xc8},
	{LENS_PAGE, 0x31,0x2b},
	{LENS_PAGE, 0x32,0x0b}, //0x0c},//0x00
	{LENS_PAGE, 0x33,0x00},
	{LENS_PAGE, 0x34,0x90},
	{LENS_PAGE, LENSRP0, 0x60}, //0x50}, //0429//0x52},//0x59},   Lens shading R
	{LENS_PAGE, LENSGrP0, 0x45},                                 //Lens shading Gr
	{LENS_PAGE, LENSBP0, 0x3b},//0x37},                         //Lens shading B
	{LENS_PAGE, LENSGbP0, 0x45},//0x40},                         //Lens shading Gb



	{LENS_PAGE, PAGEMODE, COLOR_PAGE},///CMC
	{COLOR_PAGE, CMCCTL, 0x0f},
	{COLOR_PAGE, CMCOFSGH, 0x42},
	{COLOR_PAGE, CMCOFSGM, 0x3a},
	{COLOR_PAGE, CMCOFSGL, 0x24},
	{COLOR_PAGE, CMCSIGN, 0x2f},
	{COLOR_PAGE, CMC11, 0x7c},
	{COLOR_PAGE, CMC12, 0x50},
	{COLOR_PAGE, CMC13, 0x13},
	{COLOR_PAGE, CMC21, 0x0c},
	{COLOR_PAGE, CMC22, 0x57},
	{COLOR_PAGE, CMC23, 0x0a},
	{COLOR_PAGE, CMC31, 0x08},
	{COLOR_PAGE, CMC32, 0x41},
	{COLOR_PAGE, CMC33, 0x8a},
	{COLOR_PAGE, CMCOFSL11, 0x0a}, //0x82}, //0x83},
	{COLOR_PAGE, CMCOFSL12, 0x0d}, //0x14}, //0x15},
	{COLOR_PAGE, CMCOFSL13, 0x8c}, //0x88}, //0x89},
	{COLOR_PAGE, CMCOFSL21, 0x88}, //0x88}, //0x89},
	{COLOR_PAGE, CMCOFSL22, 0x09}, //0x0a},
	{COLOR_PAGE, CMCOFSL23, 0x00}, //0x80},
	{COLOR_PAGE, CMCOFSL31, 0x85}, //0x81}, //0x82},
	{COLOR_PAGE, CMCOFSL32, 0x9b}, //0x98},
	{COLOR_PAGE, CMCOFSL33, 0x28}, //0x20},
	{COLOR_PAGE, CMCOFSH11, 0x1c}, //0x02}, //0x1c},
	{COLOR_PAGE, CMCOFSH12, 0x86}, //0x08}, //0x86},
	{COLOR_PAGE, CMCOFSH13, 0x92}, //0x86}, //0x92},
	{COLOR_PAGE, CMCOFSH21, 0x00},
	{COLOR_PAGE, CMCOFSH22, 0x32},
	{COLOR_PAGE, CMCOFSH23, 0xb2},
	{COLOR_PAGE, CMCOFSH31, 0x02},
	{COLOR_PAGE, CMCOFSH32, 0x0e},
	{COLOR_PAGE, CMCOFSH33, 0x92},
	{COLOR_PAGE, 0x80,0x03},
	{COLOR_PAGE, 0x85,0x40},
	{COLOR_PAGE, 0x87,0x02},
	{COLOR_PAGE, 0x88,0x00},
	{COLOR_PAGE, 0x89,0x00},
	{COLOR_PAGE, 0x8a,0x00},

	{COLOR_PAGE, PAGEMODE, GAMMA_PAGE},
	{GAMMA_PAGE, GMACTL, 0x31},
	{GAMMA_PAGE, 0x18,0x5e},
	{GAMMA_PAGE, 0x19,0x5d},
	{GAMMA_PAGE, 0x1a,0x0e},
	{GAMMA_PAGE, 0x1b,0x01},
	{GAMMA_PAGE, 0x1c,0xdc},
	{GAMMA_PAGE, 0x1d,0xfe},

	{GAMMA_PAGE, GGMA0, 0x00},
	{GAMMA_PAGE, GGMA1, 0x00},
	{GAMMA_PAGE, GGMA2, 0x08},
	{GAMMA_PAGE, GGMA3, 0x22},
	{GAMMA_PAGE, GGMA4, 0x45},
	{GAMMA_PAGE, GGMA5, 0x5f},
	{GAMMA_PAGE, GGMA6, 0x74},
	{GAMMA_PAGE, GGMA7, 0x86},
	{GAMMA_PAGE, GGMA8, 0x96},
	{GAMMA_PAGE, GGMA9, 0xa5},
	{GAMMA_PAGE, GGMA10, 0xb3},
	{GAMMA_PAGE, GGMA11, 0xbf},
	{GAMMA_PAGE, GGMA12, 0xca},
	{GAMMA_PAGE, GGMA13, 0xd4},
	{GAMMA_PAGE, GGMA14, 0xde},
	{GAMMA_PAGE, GGMA15, 0xe6},
	{GAMMA_PAGE, GGMA16, 0xee},
	{GAMMA_PAGE, GGMA17, 0xf4},
	{GAMMA_PAGE, GGMA18, 0xff},

	{GAMMA_PAGE, RGMA0, 0x00},  //0x00}, //0x00},	//
	{GAMMA_PAGE, RGMA1, 0x00},  //0x00}, //0x03},	//
	{GAMMA_PAGE, RGMA2, 0x0a},  //0x08}, //0x1b},	//
	{GAMMA_PAGE, RGMA3, 0x24},  //0x22}, //0x34},	//
	{GAMMA_PAGE, RGMA4, 0x47},  //0x45}, //0x58},	//
	{GAMMA_PAGE, RGMA5, 0x61},  //0x5f}, //0x74},	//
	{GAMMA_PAGE, RGMA6, 0x7b},  //0x74}, //0x8b},	//
	{GAMMA_PAGE, RGMA7, 0x8f},  //0x86}, //0x9e},	//
	{GAMMA_PAGE, RGMA8, 0xa0},  //0x96}, //0xae},	//
	{GAMMA_PAGE, RGMA9, 0xb0},  //0xa5}, //0xba},	//
	{GAMMA_PAGE, RGMA10, 0xbd},  //0xb3}, //0xc9},	//
	{GAMMA_PAGE, RGMA11, 0xc7},  //0xbf}, //0xd3},	//
	{GAMMA_PAGE, RGMA12, 0xd1},  //0xca}, //0xdc},	//
	{GAMMA_PAGE, RGMA13, 0xda},  //0xd4}, //0xe4},	//
	{GAMMA_PAGE, RGMA14, 0xe2},  //0xde}, //0xeb},	//
	{GAMMA_PAGE, RGMA15, 0xea},  //0xe6}, //0xf0},	//
	{GAMMA_PAGE, RGMA16, 0xf0},  //0xee}, //0xf5},	//
	{GAMMA_PAGE, RGMA17, 0xf6},  //0xf4}, //0xfa},	//
	{GAMMA_PAGE, RGMA18, 0xff},  //0xff}, //0xff},	//

	{GAMMA_PAGE, BGMA0, 0x00},
	{GAMMA_PAGE, BGMA1, 0x00},
	{GAMMA_PAGE, BGMA2, 0x08},
	{GAMMA_PAGE, BGMA3, 0x22},
	{GAMMA_PAGE, BGMA4, 0x45},
	{GAMMA_PAGE, BGMA5, 0x5f},
	{GAMMA_PAGE, BGMA6, 0x74},
	{GAMMA_PAGE, BGMA7, 0x86},
	{GAMMA_PAGE, BGMA8, 0x96},
	{GAMMA_PAGE, BGMA9, 0xa5},
	{GAMMA_PAGE, BGMA10, 0xb3},
	{GAMMA_PAGE, BGMA11, 0xbf},
	{GAMMA_PAGE, BGMA12, 0xca},
	{GAMMA_PAGE, BGMA13, 0xd4},
	{GAMMA_PAGE, BGMA14, 0xde},
	{GAMMA_PAGE, BGMA15, 0xe6},
	{GAMMA_PAGE, BGMA16, 0xee},
	{GAMMA_PAGE, BGMA17, 0xf4},
	{GAMMA_PAGE, BGMA18, 0xff},

	{GAMMA_PAGE, PAGEMODE, FLICKER_PAGE},
	{FLICKER_PAGE, 0x10,0xf7},
	{FLICKER_PAGE, FLK200, 0x3c}, //FLK200
	{FLICKER_PAGE, FLK240, 0x32}, //FLK240

	{FLICKER_PAGE, PAGEMODE, AUTOEXP_PAGE},
	{AUTOEXP_PAGE, AECTL2, 0x1c},
	{AUTOEXP_PAGE, 0x18, 0x30}, //fliker detection �ӵ� Low bit                       
	{AUTOEXP_PAGE, 0x1a,0x08},
	{AUTOEXP_PAGE, AEFRAMECTL1, 0x01}, //AEweight On
	{AUTOEXP_PAGE, 0x21,0x30},
	{AUTOEXP_PAGE, 0x22,0x10},
	{AUTOEXP_PAGE, 0x23,0x00},
	{AUTOEXP_PAGE, 0x24, 0x00}, //Uniform Scene Off                                  
	{AUTOEXP_PAGE, AEFINECTL1, 0xe7}, //indoor Dgain                                       
	{AUTOEXP_PAGE, AEFINECTL2, 0x0d},
	{AUTOEXP_PAGE, AEFINECTL3, 0xff},
	{AUTOEXP_PAGE, AEFINECTL4, 0x34}, //f4->Adaptive off                                

	{AUTOEXP_PAGE, AEFINECTL5, 0xc3}, //c2},                                                      

	{AUTOEXP_PAGE, AEFINECTL6, 0xcf}, //fe->AE Speed option                                
	{AUTOEXP_PAGE, AEFINECTL7, 0x33},
	{AUTOEXP_PAGE, 0x30,0x78},
	{AUTOEXP_PAGE, 0x32,0x03},
	{AUTOEXP_PAGE, 0x33,0x2e},
	{AUTOEXP_PAGE, 0x34,0x30},
	{AUTOEXP_PAGE, 0x35,0xd4},
	{AUTOEXP_PAGE, 0x36,0xfe},
	{AUTOEXP_PAGE, 0x37,0x32},
	{AUTOEXP_PAGE, 0x38,0x04},
	{AUTOEXP_PAGE, 0x39, 0x22}, //AE_escapeC10                                       
	{AUTOEXP_PAGE, 0x3a, 0xde}, //AE_escapeC11                                       
	{AUTOEXP_PAGE, 0x3b, 0x22}, //AE_escapeC1                                        
	{AUTOEXP_PAGE, 0x3c, 0xde}, //AE_escapeC2                                        
	{AUTOEXP_PAGE, 0x50,0x45},
	{AUTOEXP_PAGE, 0x51,0x88},
	{AUTOEXP_PAGE, 0x56,0x03},
	{AUTOEXP_PAGE, 0x57,0xf7},
	{AUTOEXP_PAGE, 0x58,0x14},
	{AUTOEXP_PAGE, 0x59,0x88},
	{AUTOEXP_PAGE, 0x5a, 0x04}, 

	{AUTOEXP_PAGE, AEWGT1, 0x00}, //AEweight1 
	{AUTOEXP_PAGE, AEWGT2, 0x00}, //AEweight2 
	{AUTOEXP_PAGE, AEWGT3, 0x00}, //AEweight3 
	{AUTOEXP_PAGE, AEWGT4, 0x00}, //AEweight4 
	{AUTOEXP_PAGE, AEWGT5, 0x05}, //AEweight5 
	{AUTOEXP_PAGE, AEWGT6, 0x50}, //AEweight6 
	{AUTOEXP_PAGE, AEWGT7, 0x05}, //AEweight7 
	{AUTOEXP_PAGE, AEWGT8, 0x50}, //AEweight8 
	{AUTOEXP_PAGE, AEWGT9, 0x05}, //AEweight9 
	{AUTOEXP_PAGE, AEWGT10, 0x50}, //AEweight10
	{AUTOEXP_PAGE, AEWGT11, 0x05}, //AEweight11
	{AUTOEXP_PAGE, AEWGT12, 0x50}, //AEweight12
	{AUTOEXP_PAGE, AEWGT13, 0x00}, //AEweight13
	{AUTOEXP_PAGE, AEWGT14, 0x00}, //AEweight14
	{AUTOEXP_PAGE, AEWGT15, 0x00}, //AEweight15
	{AUTOEXP_PAGE, AEWGT16, 0x00}, //AEweight16

	{AUTOEXP_PAGE, YLVL, 0x38}, //3b 78 Y lvl target 
	{AUTOEXP_PAGE, 0x71, 0x09}, //Outdoor Y level 0ff 
	{AUTOEXP_PAGE, 0x76, 0x43}, //haunting control
	{AUTOEXP_PAGE, 0x77, 0xe2}, 
	{AUTOEXP_PAGE, YTH1, 0x22}, //Yth1
	{AUTOEXP_PAGE, YTH2HI, 0x43}, //Yth2
	{AUTOEXP_PAGE, 0x7a, 0x23}, 
	{AUTOEXP_PAGE, 0x7b, 0x22}, 
	{AUTOEXP_PAGE, 0x7d, 0x23},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0x5f}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

//patch: 15 fps fixed{AUTOEXP_PAGE, EXPMAXH, 0x01}, 
//patch: 15 fps fixed{AUTOEXP_PAGE, EXPMAXM, 0x5f}, 
//patch: 15 fps fixed{AUTOEXP_PAGE, EXPMAXL, 0x8c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x20}, 
{AUTOEXP_PAGE, EXPMAXL, 0x1c}, //patch: 15 fps fixed

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 
	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

{AUTOEXP_PAGE, EXPFIXH, 0x02}, //patch: 15 fps fixed
{AUTOEXP_PAGE, EXPFIXM, 0xbf}, //patch: 15 fps fixed
{AUTOEXP_PAGE, EXPFIXL, 0x1e},//patch: 15 fps fixed
	{AUTOEXP_PAGE, EXPLMTH, 0x08}, 
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 
	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 

	{AUTOEXP_PAGE, AG, 0x18},
	{AUTOEXP_PAGE, AGMIN, 0x14}, //ADC 400->560
	{AUTOEXP_PAGE, AGMAX, 0xb0},
	{AUTOEXP_PAGE, AGLVLH, 0x18},
	{AUTOEXP_PAGE, AGTH1, 0x1a},
	{AUTOEXP_PAGE, AGTH2, 0x44},
	{AUTOEXP_PAGE, AGBTH1, 0x2f},
	{AUTOEXP_PAGE, AGBTH2, 0x28},
	{AUTOEXP_PAGE, AGBTH3, 0x25},
	{AUTOEXP_PAGE, AGBTH4, 0x22},
	{AUTOEXP_PAGE, AGBTH5, 0x21},
	{AUTOEXP_PAGE, AGBTH6, 0x20},
	{AUTOEXP_PAGE, AGBTH7, 0x1f},
	{AUTOEXP_PAGE, AGBTH8, 0x1f},

		//AE_Adaptive Time option
	{AUTOEXP_PAGE, AGSKY_HI253, 0x14},
	{AUTOEXP_PAGE, 0xc1, 0x1f},
	{AUTOEXP_PAGE, 0xc2, 0x1f},
	{AUTOEXP_PAGE, AGLVLL_HI253, 0x18}, 
	{AUTOEXP_PAGE, AGTIMETH, 0x10}, 
	{AUTOEXP_PAGE, DGMAX, 0x80},
	{AUTOEXP_PAGE, DGMIN, 0x40},
	      
	{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE}, //awb
	{AUTOWB_PAGE, AWBCTL1, 0xfd},
	{AUTOWB_PAGE, AWBCTL2, 0x2e},
	{AUTOWB_PAGE, 0x19,0x01},
	{AUTOWB_PAGE, 0x20,0x30},
	{AUTOWB_PAGE, 0x21, 0x83}, //110305_16 pixel ���� Sampling  
	{AUTOWB_PAGE, 0x24,0x01},
	{AUTOWB_PAGE, ULVL, 0x80},
	{AUTOWB_PAGE, VLVL, 0x80},
	{AUTOWB_PAGE, UVTH1, 0x11},
	{AUTOWB_PAGE, UVTH2, 0x34},
	{AUTOWB_PAGE, YRANGE, 0xf7}, //Y1 limit   
	{AUTOWB_PAGE, CDIFF, 0x33}, //43}, //Cdiff LHC  
	{AUTOWB_PAGE, CSUM2, 0x22}, //CSUM       
	{AUTOWB_PAGE, 0x43,0xf6},
	{AUTOWB_PAGE, 0x44,0x55},
	{AUTOWB_PAGE, 0x45,0x44},
	{AUTOWB_PAGE, WHTPXLTH, 0x00},
	{AUTOWB_PAGE, 0x50,0xb2},
	{AUTOWB_PAGE, 0x51,0x81},
	{AUTOWB_PAGE, 0x52,0x98},

	{AUTOWB_PAGE, RGAIN, 0x38}, //Rgain 
	{AUTOWB_PAGE, GGAIN, 0x20}, //Ggain 
	{AUTOWB_PAGE, BGAIN, 0x38}, //Bgain 

	{AUTOWB_PAGE, RMAX, 0x55}, //Rmax
	{AUTOWB_PAGE, RMIN, 0x1e}, //Rmin
	{AUTOWB_PAGE, BMAX, 0x50}, //Bmax
	{AUTOWB_PAGE, BMIN, 0x20}, //Bmin

	{AUTOWB_PAGE, RMAXM, 0x50}, //4b}, //Middle Gain  
	{AUTOWB_PAGE, RMINM, 0x38}, //35}, //30}, 
	{AUTOWB_PAGE, BMAXM, 0x35}, //35}, 
	{AUTOWB_PAGE, BMINM, 0x28},

	{AUTOWB_PAGE, RMAXB, 0x40}, //4b}, //Bottom Gain 
	{AUTOWB_PAGE, RMINB, 0x35}, //30}, 
	{AUTOWB_PAGE, BMAXB, 0x35}, //32 35}, 
	{AUTOWB_PAGE, BMINB, 0x30}, //28}, //2a 28}, 

	{AUTOWB_PAGE, BGAINPARA1, 0x56}, //Gain slope 
	{AUTOWB_PAGE, BGAINPARA2, 0x52}, 
	{AUTOWB_PAGE, BGAINPARA3, 0x4f}, 
	{AUTOWB_PAGE, BGAINPARA4, 0x4b}, 
	{AUTOWB_PAGE, BGAINPARA5, 0x43}, //3f}, 
	{AUTOWB_PAGE, BGAINPARA6, 0x38}, 
	{AUTOWB_PAGE, BGAINPARA7, 0x32}, 
	{AUTOWB_PAGE, BGAINPARA8, 0x2e}, 
	{AUTOWB_PAGE, BGAINPARA9, 0x29}, 
	{AUTOWB_PAGE, BGAINPARA10, 0x27}, 
	{AUTOWB_PAGE, BGAINPARA11, 0x23}, 
	{AUTOWB_PAGE, BGAINPARA12, 0x1f}, 

	{AUTOWB_PAGE, BGAINBND1, 0x55}, 
	{AUTOWB_PAGE, BGAINBND2, 0x55}, 
	{AUTOWB_PAGE, RAINTH1, 0x48},
	{AUTOWB_PAGE, RAINTH2, 0x38},
	{AUTOWB_PAGE, RAINTH3, 0x30},

	{AUTOWB_PAGE, RDELTA1, 0x44},
	{AUTOWB_PAGE, BDELTA1, 0x44}, 
	{AUTOWB_PAGE, RDELTA2, 0x6a}, 
	{AUTOWB_PAGE, BDELTA2, 0xef}, //af}, 

	{AUTOWB_PAGE, AWBEXPLMT1, 0x06}, //1500fps 
	{AUTOWB_PAGE, AWBEXPLMT2, 0x40}, //700fps  
	{AUTOWB_PAGE, AWBEXPLMT3, 0xd0}, //bf}, 

	{AUTOWB_PAGE, 0xad,0x40},
	{AUTOWB_PAGE, 0xae,0x4a},
	{AUTOWB_PAGE, 0xaf,0x28},
	{AUTOWB_PAGE, 0xb0,0x26},
	{AUTOWB_PAGE, 0xb1,0x00},
	{AUTOWB_PAGE, 0xb4, 0xff}, //AWB Only Center weighted 
	{AUTOWB_PAGE, 0xb8, 0xa0}, //a2: B-2, R+2 //b4 B-3, R+4 lowtemp          
	{AUTOWB_PAGE, 0xb9,0x00},
		
	{AUTOWB_PAGE, PAGEMODE, AUTOEXP_PAGE},
	{AUTOEXP_PAGE, AECTL1, 0x9c},
	{AUTOEXP_PAGE, PAGEMODE, AUTOWB_PAGE},
	{AUTOWB_PAGE, AWBCTL1, 0xe9},
		
	{AUTOWB_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PLLCTL1, 0x03},
	{WINDOW_PAGE, PLLCTL1, 0x73},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},

	{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
	{WINDOW_PAGE, PWRCTL, 0x60}, //90},
};

/* These are the frame rate sequences */
/* Source: UXGA_7.5fps_fixed.usf */
static const char hi253_uxga_7_5fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x00},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x68}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x06},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x06},

	{UNDOC_0x02_PAGE, 0xd4,0x10}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x10}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA0},
	{UNDOC_0x02_PAGE, 0xd6,0x98},

	{AUTOEXP_PAGE, EXPTIMEH, 0x02}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0x0f}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x58}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0xf4}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x06}, 
	{AUTOEXP_PAGE, EXPMAXM, 0x1a}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x7e},

	{AUTOEXP_PAGE, EXP100H, 0xaf}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0xc8}, 

	{AUTOEXP_PAGE, EXP120H, 0x92}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x7c}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x06}, 
	{AUTOEXP_PAGE, EXPFIXM, 0x1a}, 
	{AUTOEXP_PAGE, EXPFIXL, 0x80}, 

	{AUTOEXP_PAGE, EXPLMTH, 0x0d}, //EXP Limit 488.28 fps 
	{AUTOEXP_PAGE, EXPLMTL, 0xac}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0xf4}, 
};

/* Source: UXGA~7.5fps_variable_PLL2.usf */
static const char hi253_uxga_7_5fps_variable[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Faster PLL */

	{WINDOW_PAGE, VDOCTL1, 0x00},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x68}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x10},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x10},

	{UNDOC_0x02_PAGE, 0xd4,0x10}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x10}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA0},
	{UNDOC_0x02_PAGE, 0xd6,0x98},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0x86}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0xa0}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0xf4}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x06}, 
	{AUTOEXP_PAGE, EXPMAXM, 0x1a}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x80},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0xa8}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x00}, /* Not specified */
	{AUTOEXP_PAGE, EXPFIXM, 0x00}, /* Not specified */
	{AUTOEXP_PAGE, EXPFIXL, 0x00}, /* Not specified */

	{AUTOEXP_PAGE, EXPLMTH, 0x0d}, //EXP Limit 488.28 fps 
	{AUTOEXP_PAGE, EXPLMTL, 0xac}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0xf4}, 
};

/* Source: UXGA_15fps_fixed_mod.usf */
static const char hi253_uxga_15fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x75},	/* Faster PLL */

	{WINDOW_PAGE, VDOCTL1, 0x00},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x68}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x06},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x06},

	{UNDOC_0x02_PAGE, 0xd4,0x10}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x10}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA0},
	{UNDOC_0x02_PAGE, 0xd6,0x98},

	{AUTOEXP_PAGE, EXPTIMEH, 0x02}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0x0f}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x58}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0xf4}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x05}, 
	{AUTOEXP_PAGE, EXPMAXM, 0x26}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x5c},

	{AUTOEXP_PAGE, EXP100H, 0xaf}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0xc8}, 

	{AUTOEXP_PAGE, EXP120H, 0x92}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x7c}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x05}, 
	{AUTOEXP_PAGE, EXPFIXM, 0x26}, 
	{AUTOEXP_PAGE, EXPFIXL, 0x5c}, 

	{AUTOEXP_PAGE, EXPLMTH, 0x19}, //EXP Limit 488.28 fps 
	{AUTOEXP_PAGE, EXPLMTL, 0x64}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0xf4}, 
};

/* Source: SVGA_15fps_fixed.usf */
static const char hi253_svga_15fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x13},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x78}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x06},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x06},

	{UNDOC_0x02_PAGE, 0xd4,0x06}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x06}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x1c},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x02}, 
	{AUTOEXP_PAGE, EXPFIXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPFIXL, 0x1e}, 

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* Source: SVGA~15fps_variable.usf */
static const char hi253_svga_15fps_variable[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x13},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x68}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x03},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x03},

	{UNDOC_0x02_PAGE, 0xd4,0x03}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x03}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x20},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x00}, /* Not specified */
	{AUTOEXP_PAGE, EXPFIXM, 0x00}, /* Not specified */
	{AUTOEXP_PAGE, EXPFIXL, 0x00}, /* Not specified */

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* Source: SVGA_30fps_fixed_mod.usf */
static const char hi253_svga_30fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x13},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x78}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x03},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x03},

	{UNDOC_0x02_PAGE, 0xd4,0x03}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x03}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xb7}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x70},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x01}, 
	{AUTOEXP_PAGE, EXPFIXM, 0xb7}, 
	{AUTOEXP_PAGE, EXPFIXL, 0x74}, 

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* Source: Q_SVGA~15fps_fixed.usf */
static const char hi253_q_svga_15fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x23},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x78}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x06},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x06},

	{UNDOC_0x02_PAGE, 0xd4,0x06}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x06}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x1c},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x02}, 
	{AUTOEXP_PAGE, EXPFIXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPFIXL, 0x1e}, 

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* Source: Q_SVGA~15fps_variable.usf */
static const char hi253_q_svga_15fps_variable[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x23},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x68}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x03},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x03},

	{UNDOC_0x02_PAGE, 0xd4,0x03}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x03}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x02}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xbf}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x20},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x00}, /* not specified */
	{AUTOEXP_PAGE, EXPFIXM, 0x00}, /* not specified */ 
	{AUTOEXP_PAGE, EXPFIXL, 0x00}, /* not specified */ 

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* Source: Q_SVGA~30fps_fixed_mod.usf */
static const char hi253_q_svga_30fps_fixed[][3] = {
	{WINDOW_PAGE, PLLCTL1,0x73},	/* Normal PLL */

	{WINDOW_PAGE, VDOCTL1, 0x23},	/* For Preview1, not Sub-sampling */

	{WINDOW_PAGE, HBLANKH,0x01}, //Hblank 
	{WINDOW_PAGE, HBLANKL,0x78}, 

	{WINDOW_PAGE, BLCTIMETHON, 0x03},
	{WINDOW_PAGE, BLCTIMETHOFF, 0x03},

	{UNDOC_0x02_PAGE, 0xd4,0x03}, //BLC_TIME_TH_ON
	{UNDOC_0x02_PAGE, 0xd5,0x03}, //BLC_TIME_TH_OFF
	{UNDOC_0x02_PAGE, 0xd6,0xA8},
	{UNDOC_0x02_PAGE, 0xd6,0xA0},

	{AUTOEXP_PAGE, EXPTIMEH, 0x01}, 
	{AUTOEXP_PAGE, EXPTIMEM, 0xf5}, 
	{AUTOEXP_PAGE, EXPTIMEL, 0x90}, 

	{AUTOEXP_PAGE, EXPMINH, 0x01}, //EXPMIN
	{AUTOEXP_PAGE, EXPMINL, 0x2c}, 

	{AUTOEXP_PAGE, EXPMAXH, 0x01}, 
	{AUTOEXP_PAGE, EXPMAXM, 0xb7}, 
	{AUTOEXP_PAGE, EXPMAXL, 0x70},

	{AUTOEXP_PAGE, EXP100H, 0x75}, //EXP100 
	{AUTOEXP_PAGE, EXP100L, 0x30}, 

	{AUTOEXP_PAGE, EXP120H, 0x61}, //EXP120 
	{AUTOEXP_PAGE, EXP120L, 0x44}, 

	{AUTOEXP_PAGE, EXPFIXH, 0x01},
	{AUTOEXP_PAGE, EXPFIXM, 0xb7},
	{AUTOEXP_PAGE, EXPFIXL, 0x74},

	{AUTOEXP_PAGE, EXPLMTH, 0x08},
	{AUTOEXP_PAGE, EXPLMTL, 0x34}, 

	{AUTOEXP_PAGE, EXPUNITH, 0x01}, //EXP Unit 
	{AUTOEXP_PAGE, EXPUNITL, 0x2c}, 
};

/* SR300PC10 settings.  Not current */

/*
[SENSOR_INITIALIZATION]
DISP_DATE = "2010-03-08 00:00:00"
DISP_WIDTH = 1024
DISP_HEIGHT = 768
DISP_FORMAT = YUV422
DISP_DATAORDER = YUYV
MCLK = 24.00
PLL = 1.00
*/
static const char my_hynix_1024x768[][3] =
{
#if 0
{WINDOW_PAGE, PWRCTL, 0xf1}, //SW Reset 1->3->1 (Sleep Mode)
{WINDOW_PAGE, PWRCTL, 0xf3},
{WINDOW_PAGE, PWRCTL, 0xf1},


{AUTOEXP_PAGE, PAGEMODE, AUTOEXP_PAGE}, //page 20
{AUTOEXP_PAGE, AECTL1, 0x0c}, //ae off
{AUTOWB_PAGE, PAGEMODE, AUTOWB_PAGE}, //page 22
{AUTOWB_PAGE, AWBCTL1, 0x69}, //awb off
#endif

////////////////////////////////////////////
///           MCU initialize             ///
////////////////////////////////////////////
#if 0
{PAGEMODE, MCU_PAGE}, //MCU ON (Sleep Mode)
{MCU_PAGE, MCUCTL, 0x89},
{MCU_PAGE, SBUSMEMCTL, 0x01},
{MCU_PAGE, SBUSMEMADDRH, 0x80},
{MCU_PAGE, SBUSMEMADDRL, 0x01},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x80},
{MCU_PAGE, SBUSMEMADDRL, 0x02},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x26},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x81},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x82},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x83},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x84},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMADDRH, 0x84},
{MCU_PAGE, SBUSMEMADDRL, 0x85},
{MCU_PAGE, SBUSMEMDIN, 0x00},

{MCU_PAGE, SBUSMEMCTL, 0x00},
{MCU_PAGE, MCUCTL, 0x09},
#endif

////////////////////////////////////////////
///           Power Control              ///
////////////////////////////////////////////
#if 0
{FORMAT_PAGE, PAGEMODE, FORMAT_PAGE},
{FORMAT_PAGE, 0xe0, 0x00},
{FORMAT_PAGE, 0xe1, 0x00},
{FORMAT_PAGE, 0xe2, 0x00},
{FORMAT_PAGE, 0xe3, 0x00},
{FORMAT_PAGE, 0xe4, 0x00},
{FORMAT_PAGE, 0xe5, 0x00},
{FORMAT_PAGE, 0xe6, 0x30},
{FORMAT_PAGE, 0xe7, 0x00},
{FORMAT_PAGE, 0xe8, 0x00},

{FORMAT_PAGE, 0xea, 0x00},
{FORMAT_PAGE, 0xeb, 0x00},
{FORMAT_PAGE, 0xec, 0x00},
{FORMAT_PAGE, 0xed, 0x00},
{FORMAT_PAGE, 0xf0, 0x40},
{FORMAT_PAGE, 0xf2, 0x00},
{FORMAT_PAGE, 0xf3, 0x00},
{FORMAT_PAGE, 0xf8, 0xa8},
{FORMAT_PAGE, 0xf9, 0xb0},

{AUTOEXP_PAGE, PAGEMODE, AUTOEXP_PAGE},
{AUTOEXP_PAGE, 0x1a, 0x24},
{AUTOEXP_PAGE, 0x1b, 0x00},
#endif

////////////////////////////////////////////
///           PAGE 0 CTL0                ///
////////////////////////////////////////////
#if 0
{WINDOW_PAGE, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, VDOCTL1, 0x00},
{WINDOW_PAGE, VDOCTL2, 0x90},
{WINDOW_PAGE, SYNCCTL, 0x00}, //00
{WINDOW_PAGE, 0x13, 0x00}, //80->00

{WINDOW_PAGE, WINROWH, 0x00}, //WINROW
{WINDOW_PAGE, WINROWL, 0x0a},
{WINDOW_PAGE, WINCOLH, 0x00}, //WINCOL
{WINDOW_PAGE, WINCOLL, 0x0c},

{WINDOW_PAGE, 0x32, 0x06},
{WINDOW_PAGE, 0x33, 0x30},
{WINDOW_PAGE, 0x34, 0x06},
{WINDOW_PAGE, 0x35, 0x30},

//Hblank
{WINDOW_PAGE, HBLANKH, 0x01}, // 1line 2400
{WINDOW_PAGE, HBLANKL, 0x38}, //
//Vsync Pre2 50line
{WINDOW_PAGE, VSYNCH, 0x00},
{WINDOW_PAGE, VSYNCL, 0x32}, //50

//BLC_10_04_07
{WINDOW_PAGE, BLCCTL, 0x08},
{WINDOW_PAGE, 0x81, 0x97}, //9f->97 _0407
{WINDOW_PAGE, 0x82, 0x90},
{WINDOW_PAGE, 0x83, 0x30},
{WINDOW_PAGE, 0x84, 0xFE}, //0c->cc->ce _0407
{WINDOW_PAGE, 0x85, 0x00},
{WINDOW_PAGE, 0x86, 0xF4}, //94->d4 _0407
{WINDOW_PAGE, 0x87, 0x80},
{WINDOW_PAGE, BLCTIMETHON, 0x0c}, //0f->0d(8.33fps)
{WINDOW_PAGE, BLCTIMETHOFF, 0x0c}, //0f->0d(8.33fps)
{WINDOW_PAGE, 0x96, 0xe8},
{WINDOW_PAGE, 0x97, 0xf0},
{WINDOW_PAGE, 0x98, 0x38},

//Outdoor
{WINDOW_PAGE, 0x99, 0x43}, //20100315 43->41
{WINDOW_PAGE, 0x9a, 0x43}, //41
{WINDOW_PAGE, 0x9b, 0x43}, //41
{WINDOW_PAGE, 0x9c, 0x43}, //41

//Dark
{WINDOW_PAGE, BLCOFSDB, 0x00},
{WINDOW_PAGE, BLCOFSDGB, 0x00},
{WINDOW_PAGE, BLCOFSDR, 0x00},
{WINDOW_PAGE, BLCOFSDGR, 0x00},

//Normal
{WINDOW_PAGE, 0xa8, 0x42}, //00
{WINDOW_PAGE, 0xaa, 0x42}, //00
{WINDOW_PAGE, 0xac, 0x42}, //00
{WINDOW_PAGE, 0xae, 0x42}, //00

{WINDOW_PAGE, 0xB0, 0x00},
{WINDOW_PAGE, 0xB2, 0x00},
{WINDOW_PAGE, 0xB4, 0x00},
{WINDOW_PAGE, 0xB6, 0x00},
#endif

////////////////////////////////////////////
///           PAGE 2 Analog_10_05_04     ///
////////////////////////////////////////////
#if 1	// required - black output otherwise
{UNDOC_0x02_PAGE, PAGEMODE, UNDOC_0x02_PAGE},

{UNDOC_0x02_PAGE, 0x10, 0x00},
{UNDOC_0x02_PAGE, 0x12, 0x7F},
{UNDOC_0x02_PAGE, 0x13, 0x00},
{UNDOC_0x02_PAGE, 0x18, 0x1C},
{UNDOC_0x02_PAGE, 0x19, 0x00},
{UNDOC_0x02_PAGE, 0x1A, 0x39}, //09->39 _10_04_07
{UNDOC_0x02_PAGE, 0x1B, 0x00},
{UNDOC_0x02_PAGE, 0x16, 0x00},
{UNDOC_0x02_PAGE, 0x17, 0x00},

{UNDOC_0x02_PAGE, 0x1F, 0x10}, //00->10 _10_04_07
{UNDOC_0x02_PAGE, 0x20, 0x77},
{UNDOC_0x02_PAGE, 0x21, 0xed}, //aa->ed_0504
{UNDOC_0x02_PAGE, 0x22, 0xA7},
{UNDOC_0x02_PAGE, 0x23, 0x30}, //sky f2->b2->b0
{UNDOC_0x02_PAGE, 0x25, 0x10}, //�߰�
{UNDOC_0x02_PAGE, 0x27, 0x34},
{UNDOC_0x02_PAGE, 0x2B, 0x84},
{UNDOC_0x02_PAGE, 0x2E, 0x11},
{UNDOC_0x02_PAGE, 0x2F, 0xA1},
{UNDOC_0x02_PAGE, 0x30, 0x00},
{UNDOC_0x02_PAGE, 0x31, 0x99},
{UNDOC_0x02_PAGE, 0x32, 0x00},
{UNDOC_0x02_PAGE, 0x33, 0x00},
{UNDOC_0x02_PAGE, 0x34, 0x22},
{UNDOC_0x02_PAGE, 0x35, 0x01}, //00->01 _10_04_07
{UNDOC_0x02_PAGE, 0x36, 0x01},
{UNDOC_0x02_PAGE, 0x37, 0x01},
{UNDOC_0x02_PAGE, 0x3D, 0x03},
{UNDOC_0x02_PAGE, 0x3e, 0x0d},
{UNDOC_0x02_PAGE, 0x49, 0xD1}, //00->d1 _10_04_07
{UNDOC_0x02_PAGE, 0x50, 0x28}, //21->28 _10_04_07
{UNDOC_0x02_PAGE, 0x52, 0x03},
{UNDOC_0x02_PAGE, 0x53, 0x81}, //80->81 _10_04_07
{UNDOC_0x02_PAGE, 0x54, 0x3C},
{UNDOC_0x02_PAGE, 0x55, 0x1C},
{UNDOC_0x02_PAGE, 0x56, 0x11},
{UNDOC_0x02_PAGE, 0x5d, 0xa2}, //aa->a2 _10_04_07
{UNDOC_0x02_PAGE, 0x5E, 0x55},
{UNDOC_0x02_PAGE, 0x60, 0x8d},
{UNDOC_0x02_PAGE, 0x61, 0x9b},
{UNDOC_0x02_PAGE, 0x62, 0x8e},
{UNDOC_0x02_PAGE, 0x63, 0x99},
{UNDOC_0x02_PAGE, 0x64, 0x8e},
{UNDOC_0x02_PAGE, 0x65, 0x99},
{UNDOC_0x02_PAGE, 0x67, 0x0c},
{UNDOC_0x02_PAGE, 0x68, 0x0c},
{UNDOC_0x02_PAGE, 0x69, 0x0c},

{UNDOC_0x02_PAGE, 0x72, 0x8e},
{UNDOC_0x02_PAGE, 0x73, 0x98},
{UNDOC_0x02_PAGE, 0x74, 0x8e},
{UNDOC_0x02_PAGE, 0x75, 0x98},

{UNDOC_0x02_PAGE, 0x76, 0xa6},
{UNDOC_0x02_PAGE, 0x77, 0xb6},
{UNDOC_0x02_PAGE, 0x7C, 0xa0},
{UNDOC_0x02_PAGE, 0x7d, 0xd0}, // 20010308 �߰�


{UNDOC_0x02_PAGE, 0x80, 0x01},
{UNDOC_0x02_PAGE, 0x81, 0x82},
{UNDOC_0x02_PAGE, 0x82, 0x1e},
{UNDOC_0x02_PAGE, 0x83, 0x30},
{UNDOC_0x02_PAGE, 0x84, 0x80},
{UNDOC_0x02_PAGE, 0x85, 0x83},
{UNDOC_0x02_PAGE, 0x86, 0x80},
{UNDOC_0x02_PAGE, 0x87, 0x83},


{UNDOC_0x02_PAGE, 0x92, 0x4e},
{UNDOC_0x02_PAGE, 0x93, 0x60},
{UNDOC_0x02_PAGE, 0x94, 0x80},
{UNDOC_0x02_PAGE, 0x95, 0x83},
{UNDOC_0x02_PAGE, 0x96, 0x80},
{UNDOC_0x02_PAGE, 0x97, 0x83},

{UNDOC_0x02_PAGE, 0xa0, 0x02},
{UNDOC_0x02_PAGE, 0xa1, 0x7d},
{UNDOC_0x02_PAGE, 0xa2, 0x02},
{UNDOC_0x02_PAGE, 0xa3, 0x7d},
{UNDOC_0x02_PAGE, 0xa5, 0x02},
{UNDOC_0x02_PAGE, 0xa4, 0x7d},
{UNDOC_0x02_PAGE, 0xa6, 0x7d},
{UNDOC_0x02_PAGE, 0xa7, 0x02},
{UNDOC_0x02_PAGE, 0xa8, 0x8d},
{UNDOC_0x02_PAGE, 0xa9, 0x93},
{UNDOC_0x02_PAGE, 0xaa, 0x8d},
{UNDOC_0x02_PAGE, 0xab, 0x93},
{UNDOC_0x02_PAGE, 0xac, 0x1b},
{UNDOC_0x02_PAGE, 0xad, 0x22},
{UNDOC_0x02_PAGE, 0xae, 0x1b},
{UNDOC_0x02_PAGE, 0xaf, 0x22},

{UNDOC_0x02_PAGE, 0xb0, 0xa0},
{UNDOC_0x02_PAGE, 0xb1, 0xaa}, // 20010426 ����
{UNDOC_0x02_PAGE, 0xb4, 0xa1},
{UNDOC_0x02_PAGE, 0xb5, 0xa8},
{UNDOC_0x02_PAGE, 0xb8, 0xa2},
{UNDOC_0x02_PAGE, 0xb9, 0xa7},
{UNDOC_0x02_PAGE, 0xbc, 0xa2},
{UNDOC_0x02_PAGE, 0xbd, 0xa6},
{UNDOC_0x02_PAGE, 0xb2, 0xa0},
{UNDOC_0x02_PAGE, 0xb3, 0xaa},// 20010426 ����
{UNDOC_0x02_PAGE, 0xb6, 0xa1},
{UNDOC_0x02_PAGE, 0xb7, 0xa8},
{UNDOC_0x02_PAGE, 0xba, 0xa2},
{UNDOC_0x02_PAGE, 0xbb, 0xa7},
{UNDOC_0x02_PAGE, 0xbe, 0xa2},
{UNDOC_0x02_PAGE, 0xbf, 0xa6},

{UNDOC_0x02_PAGE, 0xc4, 0x32},
{UNDOC_0x02_PAGE, 0xc5, 0x49},
{UNDOC_0x02_PAGE, 0xc6, 0x63},
{UNDOC_0x02_PAGE, 0xc7, 0x7a},
{UNDOC_0x02_PAGE, 0xc8, 0x33},
{UNDOC_0x02_PAGE, 0xc9, 0x48},
{UNDOC_0x02_PAGE, 0xca, 0x33},
{UNDOC_0x02_PAGE, 0xcb, 0x48},
{UNDOC_0x02_PAGE, 0xcc, 0x64},
{UNDOC_0x02_PAGE, 0xcd, 0x79},
{UNDOC_0x02_PAGE, 0xce, 0x64},
{UNDOC_0x02_PAGE, 0xcf, 0x79},
{UNDOC_0x02_PAGE, 0xea, 0x82}, //_2010_04_26

{UNDOC_0x02_PAGE, 0xeb, 0x02}, //_2010_04_07
{UNDOC_0x02_PAGE, 0xef, 0x02}, //_2010_04_07
#endif

////////////////////////////////////////////
///     PAGE 2 M_DCDC_CTL_2010_04_07     ///
////////////////////////////////////////////
#if 0
{UNDOC_0x02_PAGE, PAGEMODE, UNDOC_0x02_PAGE},
{UNDOC_0x02_PAGE, 0x1c, 0x3c},//1.3M Base
{UNDOC_0x02_PAGE, 0x1d, 0x01},
{UNDOC_0x02_PAGE, 0x1e, 0x30},

{UNDOC_0x02_PAGE, 0xd0, 0x0a},//091202 dcdc
{UNDOC_0x02_PAGE, 0xd1, 0x09},//091202 dcdc
{UNDOC_0x02_PAGE, 0xd2, 0x20},//091202 dcdc
{UNDOC_0x02_PAGE, 0xd3, 0x00},//091202 dcdc
{UNDOC_0x02_PAGE, 0xd4, 0x0c},//0f(60hz)->0c(50hz)//091202 dcdc
{UNDOC_0x02_PAGE, 0xd5, 0x0c},//0f(60hz)->0c(50hz)//091202 dcdc
{UNDOC_0x02_PAGE, 0xd6, 0x56}, //_2010_04_07
{UNDOC_0x02_PAGE, 0xd7, 0x50}, //_2010_04_07

{UNDOC_0x02_PAGE, 0xe0, 0xe1},//091202 dcdc
{UNDOC_0x02_PAGE, 0xe1, 0xe1},//091202 dcdc
{UNDOC_0x02_PAGE, 0xe2, 0xe1},//091202 dcdc
{UNDOC_0x02_PAGE, 0xe3, 0xe1},//091202 dcdc
{UNDOC_0x02_PAGE, 0xe4, 0xe1},//091202 dcdc
{UNDOC_0x02_PAGE, 0xe5, 0x01},//091202 dcdc
#endif

////////////////////////////////////////////
///           PAGE 10 ISP-CTL1           ///
////////////////////////////////////////////
#if 0 // required - no interrupts otherwise
{UNDOC_0x02_PAGE, PAGEMODE, FORMAT_PAGE},
{FORMAT_PAGE, ISPCTL1, 0x07}, //{FORMAT_PAGE, ISPCTL1, 0x05}, //YUV422_YUYV: 0x03, ITU656: 0x07 (jhkim:MOD)
{FORMAT_PAGE, ISPCTL2, 0x03},
{FORMAT_PAGE, ISPCTL3, 0xc0},
{FORMAT_PAGE, ISPCTL4, 0x0a},

{FORMAT_PAGE, ITUCTL, 0x15}, // ITU656: 0x04 (jhkim:ADD)

{FORMAT_PAGE, ITUSOF, 0x80}, // ITU656: SOF : SAV Blank (jhkim:ADD)
{FORMAT_PAGE, ITUSOL, 0x80}, // ITU656: SOL : EAV Field (jhkim:ADD)
{FORMAT_PAGE, ITUEOF, 0xb6}, // ITU656: EOF : EAV Blank (jhkim:ADD)
{FORMAT_PAGE, ITUEOL, 0x9d}, // ITU656: EOL : EAV Field (jhkim:ADD)
#endif

#if 0
{FORMAT_PAGE, CONTRAST, 0x84}, //contrast 88->84

//Saturation
{FORMAT_PAGE, SATCTL, 0x83},
{FORMAT_PAGE, SATB, 0x1a}, //0x1b -> 0x1C
{FORMAT_PAGE, SATR, 0x80},
{FORMAT_PAGE, 0x63, 0x70},
{FORMAT_PAGE, AGSAT, 0xff},

//Out Sat option
{FORMAT_PAGE, SATTIMETH, 0xf7}, //ff->f7
{FORMAT_PAGE, SATOUTDEL, 0x33}, //24->33

//Saturation_UV
{FORMAT_PAGE, UPOSSAT, 0x44},//upos
{FORMAT_PAGE, UNEGSAT, 0x3f},//uneg
{FORMAT_PAGE, VPOSSAT, 0x54},//vpos
{FORMAT_PAGE, VNEGSAT, 0x48},//vneg

//-----------------------
// White Protection
//-----------------------
{FORMAT_PAGE, 0x80, 0x14},
{FORMAT_PAGE, 0x81, 0x08},
{FORMAT_PAGE, 0x82, 0x08},
{FORMAT_PAGE, 0x83, 0x54},
{FORMAT_PAGE, 0x84, 0x1C},
{FORMAT_PAGE, 0x85, 0x08},
{FORMAT_PAGE, 0x86, 0x08},
{FORMAT_PAGE, 0x87, 0x38},
{FORMAT_PAGE, 0x88, 0x18}, //
{FORMAT_PAGE, 0x89, 0x18}, //
{FORMAT_PAGE, 0x8A, 0x18}, //
{FORMAT_PAGE, 0x8B, 0x18}, //

{FORMAT_PAGE, 0xf0, 0x40}, //2010_04_09
#endif

////////////////////////////////////////////
///           PAGE 11 1D-LPF             ///
////////////////////////////////////////////
#if 0
{FORMAT_PAGE, PAGEMODE, NOISE1_PAGE},

{NOISE1_PAGE, DLPFCTL, 0x0f},
{NOISE1_PAGE, DLPFOPT1, 0x0F},
{NOISE1_PAGE, DLPFOPT2, 0x0f}, // Blue Reducing Edge
{NOISE1_PAGE, DLPFOPT3, 0x00}, // Green Increase Edge  //0x08 -> 0x00
{NOISE1_PAGE, DLPFOPT4, 0x03}, // Dark PS-Color Reduce.. But Resolution Down
{NOISE1_PAGE, EDGEMASK1, 0x0F}, //
{NOISE1_PAGE, EDGEMASK2, 0x0F}, //
{NOISE1_PAGE, EDGEMASK3, 0x0F}, //
{NOISE1_PAGE, HVRAT1OUT, 0x22}, // 24 5Line Outdoor
{NOISE1_PAGE, HVRAT2OUT, 0x11}, // 12 3Line Outdoor
{NOISE1_PAGE, HVRAT1IN, 0x1C}, // 24 5Line Indoor //30
{NOISE1_PAGE, HVRAT2IN, 0x0E}, // 12 3Line Indoor
{NOISE1_PAGE, HVRAT1DAK, 0x3C}, // 24 5Line Dark
{NOISE1_PAGE, HVRAT2DAK, 0x22}, // 12 3Line Dark
{NOISE1_PAGE, DLPFOPT5, 0x04}, // 3 Line Filt Sel
{NOISE1_PAGE, DLPFOPT6, 0x04}, // 5 Line Filt Sel

{NOISE1_PAGE, DLPFOPT7, 0x00}, //Dark_lpf_sel <- �߰�
{NOISE1_PAGE, DLPFOPT8, 0x00}, //R1_lpf_sel <- �߰�
{NOISE1_PAGE, DLPFOPT9, 0x10}, //R2_lpf_sel <- �߰�
{NOISE1_PAGE, DLPFOPT11, 0x00}, // STD LPF Indoor -> 0x04 (GGGXXX)

{NOISE1_PAGE, OUTRAT, 0x20},  //Hig 091029_dsshin

{NOISE1_PAGE, OUTTHH, 0x60},  //60->48 Hig 150code~ high
{NOISE1_PAGE, OUTTHM, 0x2A},  //38->23 Mi 100~150code middle
{NOISE1_PAGE, OUTTHL, 0x55},  //23->48 LO 50~100code middlelow
{NOISE1_PAGE, DAKREGOUT, 0x44},  //DAR 20~50code low, 0~20code dark


//----- R2 Region --------
{NOISE1_PAGE, OUTOFSHR2, 0x60}, //gggxxx High OFFSET
{NOISE1_PAGE, OUTOFSMR2, 0x70}, //gggxxx Mid OFST
{NOISE1_PAGE, OUTOFSMLR2, 0x7F}, //gggxxx ML OFST //03->06
{NOISE1_PAGE, OUTOFSLR2, 0x8F}, //gggxxx LO OFST //01->02
{NOISE1_PAGE, OUTOFSLO, 0xF0}, //gggxxx DARK OFFSET

{NOISE1_PAGE, OUTSTDHR2, 0x1A}, //gggxxx High Gain (0xB8)
{NOISE1_PAGE, OUTSTDMR2, 0x1C}, //gggxxx Mi Gain   (0xBC) c6->ce
{NOISE1_PAGE, OUTSTDMLR2, 0x2A}, //gggxxx ML Gain   (0xBF)->d0
{NOISE1_PAGE, OUTSTDLR2, 0x18}, //gggxxx LO Gain // e4
{NOISE1_PAGE, OUTSTDLO, 0x50}, //gggxxx DARK Gain

{NOISE1_PAGE, OUTCLIPHR2, 0xE0}, //gggxxx Hig Clip
{NOISE1_PAGE, OUTCLIPMR2, 0xF8}, //gggxxx Mid Clip
{NOISE1_PAGE, OUTCLIPMLR2, 0xF0}, //gggxxx ML  Clip
{NOISE1_PAGE, OUTCLIPLR2, 0xE0}, //gggxxx LO Clip
{NOISE1_PAGE, OUTCLIPLO, 0xF8}, //gggxxx DARK Clip

//----- R1 Region --------
{NOISE1_PAGE, OUTOFSHR1, 0x60}, //gggxxx High OFFSET
{NOISE1_PAGE, OUTOFSMR1, 0x70}, //gggxxx Mid OFST
{NOISE1_PAGE, OUTOFSMLR1, 0x80}, //gggxxx ML OFST
{NOISE1_PAGE, OUTOFSLR1, 0x90}, //gggxxx LO OFST

{NOISE1_PAGE, OUTSTDHR1, 0x1A}, //gggxxx High Gain (0xC8)
{NOISE1_PAGE, OUTSTDMR1, 0x1C}, //gggxxx Mi Gain   (0xE0)
{NOISE1_PAGE, OUTSTDMLR1, 0x22}, //gggxxx ML Gain   (0xE0)
{NOISE1_PAGE, OUTSTDLR1, 0x30}, //gggxxx LO Gain   (0xC4)

{NOISE1_PAGE, OUTCLIPHR1, 0xE0}, // Hig Clip   (0xC0)
{NOISE1_PAGE, OUTCLIPMR1, 0xF8}, // Mid Clip   (0xC0)
{NOISE1_PAGE, OUTCLIPMLR1, 0xF0}, // ML  Clip   (0xC0)
{NOISE1_PAGE, OUTCLIPLR1, 0xFF}, // LO Clip    (0xC0)

//---- Edge Line Gain Control
{NOISE1_PAGE, OUTEDGEH, 0x06},  //
{NOISE1_PAGE, OUTEDGEM, 0x04},  //
{NOISE1_PAGE, OUTEDGEML, 0x02},  //
{NOISE1_PAGE, OUTEDGEL, 0x08},  //

//----- Color Option
{NOISE1_PAGE, OUTCOLH, 0xD8}, //gggxxx C0
{NOISE1_PAGE, OUTCOLM, 0xD0}, //gggxxx C0
{NOISE1_PAGE, OUTCOLML, 0xC8}, //gggxxx C0
{NOISE1_PAGE, OUTCOLL, 0xC0}, //gggxxx C0
{NOISE1_PAGE, OUTOFSLIMH, 0xF0}, //gggxxx (0x00)
{NOISE1_PAGE, OUTOFSLIMM, 0xE8}, //gggxxx (0x00)
{NOISE1_PAGE, OUTOFSLIMML, 0xE0}, //gggxxx (0x00)
{NOISE1_PAGE, OUTOFSLIML, 0xE0}, //gggxxx (0x00)
//---- DPC Marker
{NOISE1_PAGE, OUTDPCTH, 0xC0},
{NOISE1_PAGE, OUTDPCSTD, 0xF0},

{NOISE1_PAGE, INRAT, 0x20},  // NR Rate 0x20 Default 6bit (Indoor) <- �߰�
{NOISE1_PAGE, INTHH_SR300PC10, 0x4a},  //70 Hig 150code~
{NOISE1_PAGE, INTHM_SR300PC10, 0x21},  //Mi 100~150code
{NOISE1_PAGE, INTHL_SR300PC10, 0x51},  //LO 50~100code
{NOISE1_PAGE, DAKREGIN, 0x3d},  //DAR 20~50code

//------------ Indoor Setting ------------
{NOISE1_PAGE, INOFSLO, 0x32},  // 24 DARK OFFSET
{NOISE1_PAGE, INSTDLO, 0x42},  // E0 DARK Gain
{NOISE1_PAGE, INCLIPLO, 0xff},  // F0 DARK Limit

//----- R2 Region --------
{NOISE1_PAGE, INOFSHR2, 0x08}, //10 High OFFSET
{NOISE1_PAGE, INOFSMR2, 0x10}, //0C Mid OFST
{NOISE1_PAGE, INOFSMLR2, 0x18}, //09 ML OFST
{NOISE1_PAGE, INOFSLR2, 0x20}, //07 LO OFST

{NOISE1_PAGE, INSTDHR2, 0x2E}, // 5E High Gain (0xB8)
{NOISE1_PAGE, INSTDMR2, 0x2F}, // 5F Mi Gain   (0xBC)
{NOISE1_PAGE, INSTDMLR2, 0x30}, // 60 ML Gain   (0xBF)
{NOISE1_PAGE, INSTDLR2, 0x38}, // 58 LO Gain

{NOISE1_PAGE, INCLIPHR2, 0xB0}, // Hig Clip Recovery A0->F0->A0
{NOISE1_PAGE, INCLIPMR2, 0xB8}, // Mid Clip
{NOISE1_PAGE, INCLIPMLR2, 0xC4}, // ML  Clip
{NOISE1_PAGE, INCLIPLR2, 0xEC}, // LO Clip

//----- R1 Region --------
{NOISE1_PAGE, INOFSHR1, 0x10}, // High OFFSET
{NOISE1_PAGE, INOFSMR1, 0x14}, // Mid OFST
{NOISE1_PAGE, INOFSMLR1, 0x18}, // ML OFST
{NOISE1_PAGE, INOFSLR1, 0x1E}, // LO OFST

{NOISE1_PAGE, INSTDHR1, 0x1E}, //5E High Gain (0xC8)
{NOISE1_PAGE, INSTDMR1, 0x1F}, //5F Mi Gain   (0xE0)
{NOISE1_PAGE, INSTDMLR1, 0x24}, //64 ML Gain   (0xE0)
{NOISE1_PAGE, INSTDLR1, 0x28}, //68 LO Gain   (0xC4)

{NOISE1_PAGE, INCLIPHR1, 0xB2}, // Hig Clip   (0xC0)
{NOISE1_PAGE, INCLIPMR1, 0xB7}, // Mid Clip   (0xC0)
{NOISE1_PAGE, INCLIPMLR1, 0xBE}, // ML  Clip   (0xC0)
{NOISE1_PAGE, INCLIPLR1, 0xCC}, // LO Clip    (0xC0)

//---- Edge Line Gain Control (4bit )
{NOISE1_PAGE, INEDGEH, 0x08},  //
{NOISE1_PAGE, INEDGEM, 0x08},  //
{NOISE1_PAGE, INEDGEML, 0x08},  //
{NOISE1_PAGE, INEDGEL, 0x08},  //

//----- Color Option
{NOISE1_PAGE, INCOLH, 0xF8}, //C0
{NOISE1_PAGE, INCOLM, 0xF0}, //C0
{NOISE1_PAGE, INCOLML, 0xE8}, //C0
{NOISE1_PAGE, INCOLL, 0xE0}, //C0
{NOISE1_PAGE, INOFSLIMH, 0xf8}, //
{NOISE1_PAGE, INOFSLIMM, 0xf8}, //
{NOISE1_PAGE, INOFSLIMML, 0xf8}, //
{NOISE1_PAGE, INOFSLIML, 0xf8}, //
//---- DPC Marker
{NOISE1_PAGE, INDPCTH, 0xC0},
{NOISE1_PAGE, INDPCSTD, 0xF0},

//--------------Dark1 setting-------------------
{NOISE1_PAGE, DAK1THH, 0x84}, //lum hi
{NOISE1_PAGE, DAK1THM, 0x2a}, //lum mi
{NOISE1_PAGE, DAK1THL, 0x60}, //lum lo

{NOISE1_PAGE, DAK1OFSLO, 0xff}, //offset_dark
{NOISE1_PAGE, DAK1STDLO, 0x00}, //gain_dark
{NOISE1_PAGE, DAK1CLIPLO, 0xff}, //clip dark

{NOISE1_PAGE, DAK1OFSHR2, 0xff}, //07 High OFFSET
{NOISE1_PAGE, DAK1OFSMR2, 0xff}, //05 Mid OFST
{NOISE1_PAGE, DAK1OFSMLR2, 0xff}, // ML OFST
{NOISE1_PAGE, DAK1OFSLR2, 0xff}, // LO OFST

{NOISE1_PAGE, DAK1STDHR2, 0x00}, //c0 High GAIN
{NOISE1_PAGE, DAK1STDMR2, 0x00}, //d0 Mid GAIN
{NOISE1_PAGE, DAK1STDMLR2, 0x00}, // ML GAIN
{NOISE1_PAGE, DAK1STDLR2, 0x00}, // LO GAIN

{NOISE1_PAGE, DAK1CLIPHR2, 0xff}, // High CLIP
{NOISE1_PAGE, DAK1CLIPMR2, 0xff}, // Mid CLIP
{NOISE1_PAGE, DAK1CLIPMLR2, 0xff}, // ML CLIP
{NOISE1_PAGE, DAK1CLIPLR2, 0xff}, // LO CLIP
//------------------------------------

//--------------Dark23 setting-------------------
{NOISE1_PAGE, DAK23THH, 0x84}, //lum hi
{NOISE1_PAGE, DAK23THM, 0x2a}, //lum mi
{NOISE1_PAGE, DAK23THL, 0x60}, //lum lo

{NOISE1_PAGE, DAK23OFSLO, 0xff}, //offset_dark
{NOISE1_PAGE, DAK23STDLO, 0x00}, //gain_dark
{NOISE1_PAGE, DAK23CLIPLO, 0xff}, //clip dark

{NOISE1_PAGE, DAK23OFSHR2, 0xff}, //07 High OFFSET
{NOISE1_PAGE, DAK23OFSMR2, 0xff}, //05 Mid OFST
{NOISE1_PAGE, DAK23OFSMLR2, 0xff}, // ML OFST
{NOISE1_PAGE, DAK23OFSLR2, 0xff}, // LO OFST

{NOISE1_PAGE, DAK23STDHR2, 0x00}, //c0 High GAIN
{NOISE1_PAGE, DAK23STDMR2, 0x00}, //d0 Mid GAIN
{NOISE1_PAGE, DAK23STDMLR2, 0x00}, // ML GAIN
{NOISE1_PAGE, DAK23STDLR2, 0x00}, // LO GAIN

{NOISE1_PAGE, DAK23CLIPHR2, 0xff}, // High CLIP
{NOISE1_PAGE, DAK23CLIPMR2, 0xff}, // Mid CLIP
{NOISE1_PAGE, DAK23CLIPMLR2, 0xff}, // ML CLIP
{NOISE1_PAGE, DAK23CLIPLR2, 0xff}, // LO CLIP
//------------------------------------

{NOISE1_PAGE, DAK1DPCTH, 0xe0},
{NOISE1_PAGE, DAK1DPCSTD, 0xf0},
{NOISE1_PAGE, DAK23DPCTH, 0xe0},
{NOISE1_PAGE, DAK23DPCSTD, 0xf0},

{NOISE1_PAGE, LPFOUTTHL_SR300PC10, 0x80}, //out2 th
{NOISE1_PAGE, LPFOUTTHH_SR300PC10, 0x78}, //256fps
#endif

////////////////////////////////////////////
///           PAGE 12 DPC                ///
////////////////////////////////////////////
//DPC-Dark1,2,3
#if 0
{NOISE1_PAGE, PAGEMODE, DEBLUR_PAGE},
{DEBLUR_PAGE, 0x12, 0x3f}, //00->0f _2010_04_07  //gggxxx 0F -> 0x3F
{DEBLUR_PAGE, 0x20, 0x32}, //00->32 _2010_04_07

{DEBLUR_PAGE, 0x25, 0x07},
{DEBLUR_PAGE, 0x26, 0x07},
{DEBLUR_PAGE, 0x27, 0x07},

{DEBLUR_PAGE, 0x3e, 0x03},   // Dark DPC

{DEBLUR_PAGE, GLPFTHOUT, 0x44},  // GBGR Drange
{DEBLUR_PAGE, GLPFTHIN, 0x44},  // GBGR Drange Indoor
{DEBLUR_PAGE, 0x54, 0x00},  // GBGR Filt Select
{DEBLUR_PAGE, GLPFCTL2, 0x03},  // GbGr Sub   (0x00)

// sky
{DEBLUR_PAGE, 0x68, 0x78},
{DEBLUR_PAGE, 0x69, 0x78},
{DEBLUR_PAGE, 0x6c, 0x40},
{DEBLUR_PAGE, 0x6f, 0x80},

{DEBLUR_PAGE, LDCTL, 0x0C}, //20100304 0f->00

{DEBLUR_PAGE, LDBCENOUT, 0x54}, // Center G Gain    60 => 0x54
{DEBLUR_PAGE, LDBLOUT, 0xA2}, //gggxxx Center G
{DEBLUR_PAGE, LDBROUT, 0x24}, //gggxxx Center G
{DEBLUR_PAGE, LDBOFSOUT, 0x1A}, //gggxxx Center G   2C => 0x1A

{DEBLUR_PAGE, LDCCENOUT, 0x60}, // Coring Graph
{DEBLUR_PAGE, LDCLOUT, 0x04}, // Coring
{DEBLUR_PAGE, LDCROUT, 0xC0}, // Coring
{DEBLUR_PAGE, LDCOFSOUT, 0x08}, // Coring offset

{DEBLUR_PAGE, LDRATOUT, 0xCF},  // Gain x1
{DEBLUR_PAGE, LDHLMTOUT, 0x0E},  // Pos Limit  //gggxxx 0x18 -> 0x0E
{DEBLUR_PAGE, LDLLMTOUT, 0x0C},  // Neg Limit  //gggxxx 0x1D -> 0x0C
//------------- Indoor ---------------
{DEBLUR_PAGE, LDBCENIND, 0x60}, // Center G Gain
{DEBLUR_PAGE, LDBLIND, 0xA2}, // Center G
{DEBLUR_PAGE, LDBRIND, 0x28}, // Center G
{DEBLUR_PAGE, LDBOFSIND, 0x1C}, // Center G
//
{DEBLUR_PAGE, LDCCENIND, 0x60}, // Coring Graph
{DEBLUR_PAGE, LDCLIND, 0x04}, // Coring 88->08
{DEBLUR_PAGE, LDCRIND, 0xC0}, // Coring 22->b2
{DEBLUR_PAGE, LDCOFSIND, 0x04},
//
{DEBLUR_PAGE, LDRATIN, 0xCC},  // Gain x1
{DEBLUR_PAGE, LDHLMTIN, 0x0E},  // Pos Limit
{DEBLUR_PAGE, LDLLMTIN, 0x0C},  // Neg Limit
//
{DEBLUR_PAGE, LDTERMOPT, 0xEA},  // Reducing Mask

{DEBLUR_PAGE, LDEDCENOUT, 0x60},
{DEBLUR_PAGE, LDEDLOUT, 0xB0},
{DEBLUR_PAGE, LDEDROUT, 0x88},
{DEBLUR_PAGE, LDEDOFSOUT, 0x10},
{DEBLUR_PAGE, LDEDRATOUT, 0x04},

//--------- Indoor Edge Graph ---------
{DEBLUR_PAGE, LDEDCENIN, 0x40}, //0x60
{DEBLUR_PAGE, LDEDLIN, 0xA0}, //0xB0
{DEBLUR_PAGE, LDEDRIN, 0x7C}, //0x88
{DEBLUR_PAGE, LDEDOFSIN, 0x1A}, //0x10
{DEBLUR_PAGE, LDEDRATIN, 0x0C}, //0x04

{DEBLUR_PAGE, 0xe1, 0x58},   ////////////////////// sung
{DEBLUR_PAGE, 0xe9, 0x04},   //
{DEBLUR_PAGE, 0xeb, 0x07},   // h/v sum              //gggxxx 0x07 -> 0x0F -> 0x03 moire
{DEBLUR_PAGE, 0xee, 0x0C},   // cilpf enable
{DEBLUR_PAGE, 0xEF, 0x01}, //00  // cilpf outdoor_th
{DEBLUR_PAGE, 0xF0, 0x02}, //00  //  "
{DEBLUR_PAGE, 0xF1, 0x04}, //00  //  "
{DEBLUR_PAGE, 0xF2, 0x02},   // cilpf indoor_th
{DEBLUR_PAGE, 0xF3, 0x04},   //  "
{DEBLUR_PAGE, 0xF4, 0x07},   //  "
{DEBLUR_PAGE, 0xFB, 0x22}, //22 // Lum Code [7:4]
#endif

////////////////////////////////////////////
///           PAGE 13 2D-LPF             ///
////////////////////////////////////////////
#if 0
{DEBLUR_PAGE, PAGEMODE, NOISE2_PAGE},
{NOISE2_PAGE, YCLPFCTL1, 0x17},
{NOISE2_PAGE, YCLPFCTL2, 0x1f}, //0f->1f
{NOISE2_PAGE, YCLPFCTL3, 0x01},
{NOISE2_PAGE, YCPRWTH, 0x08},
{NOISE2_PAGE, YCUNI1THOUT, 0x20},
{NOISE2_PAGE, YCUNI1THIN, 0x10},
{NOISE2_PAGE, YCUNI1THDAK, 0x18},
{NOISE2_PAGE, YCUNI2TH_SR300PC10, 0x30},
{NOISE2_PAGE, YCUNI3TH_SR300PC10, 0x40},
{NOISE2_PAGE, YCNOR1TH_SR300PC10, 0x50},
{NOISE2_PAGE, YCNOR2TH_SR300PC10, 0x60},
{NOISE2_PAGE, YCNOR3TH_SR300PC10, 0x80},

{NOISE2_PAGE, YCOUTTHH, 0xa0}, //OUTDOOR1/2
{NOISE2_PAGE, YCOUTTHL, 0x60},
{NOISE2_PAGE, YCOUTSTDH, 0x01}, //hi
{NOISE2_PAGE, YCOUTSTDM, 0x01}, //mi
{NOISE2_PAGE, YCOUTSTDL, 0x01}, //lo
{NOISE2_PAGE, YCOUTRAT, 0x70}, //ratio

{NOISE2_PAGE, YCINTHH_SR300PC10, 0xa0}, //INDOOR
{NOISE2_PAGE, YCINTHL_SR300PC10, 0x30},
{NOISE2_PAGE, YCINSTDH_SR300PC10, 0x18}, //hi
{NOISE2_PAGE, YCINSTDM_SR300PC10, 0x10}, //mi
{NOISE2_PAGE, YCINSTDL_SR300PC10, 0x08}, //lo 20100304 80->60
{NOISE2_PAGE, YCINRAT_SR300PC10, 0x70}, //ratio

{NOISE2_PAGE, YCDARK1THH_SR300PC10, 0xa0}, //DARK1
{NOISE2_PAGE, YCDARK1THL_SR300PC10, 0x30},
{NOISE2_PAGE, YCDARK1STDH_SR300PC10, 0xc0}, //hi
{NOISE2_PAGE, YCDARK1STDM_SR300PC10, 0xc0}, //mi
{NOISE2_PAGE, YCDARK1STDL_SR300PC10, 0xc0}, //lo 20100304 80->60
{NOISE2_PAGE, YCDARK1RAT_SR300PC10, 0x80}, //ratio

{NOISE2_PAGE, 0x74, 0xA0},
{NOISE2_PAGE, 0x75, 0x60},
{NOISE2_PAGE, 0x76, 0x40},

{NOISE2_PAGE, 0x81, 0xf0},
{NOISE2_PAGE, 0x83, 0x04}, //YAWM th outdoor
{NOISE2_PAGE, 0x85, 0x01},
{NOISE2_PAGE, 0x8b, 0x24}, //YAWM th indoor
{NOISE2_PAGE, 0x8d, 0x01},

{NOISE2_PAGE, 0xa0, 0xff}, //Extended
{NOISE2_PAGE, 0xa1, 0x3f}, // filter Change outdoor
{NOISE2_PAGE, 0xa2, 0x3f}, //  "            indoor
{NOISE2_PAGE, 0xa5, 0x9f}, //Unsharp outdoor
{NOISE2_PAGE, 0xa6, 0x00}, //  "     indoor 20100310 ff->00
{NOISE2_PAGE, 0xa7, 0x00}, //  "     dark1
{NOISE2_PAGE, 0xa8, 0x00}, //  "     dark2/3
{NOISE2_PAGE, 0xa9, 0x22},
{NOISE2_PAGE, 0xaa, 0x63},

{NOISE2_PAGE, 0xad, 0x0f}, //Color Detect
{NOISE2_PAGE, 0xae, 0x0f},

{NOISE2_PAGE, 0xc0, 0x0a},
{NOISE2_PAGE, 0xc1, 0x0e},
{NOISE2_PAGE, 0xc2, 0x09},
{NOISE2_PAGE, 0xd0, 0x08},
#endif


////////////////////////////////////////////
///           PAGE 14 Sharp              ///
////////////////////////////////////////////
#if 0
{NOISE2_PAGE, PAGEMODE, EDGE_PAGE},
{EDGE_PAGE, EDGECTL1, 0x8f},//20100304 8f->00
{EDGE_PAGE, EDGECTL3, 0x30},
{EDGE_PAGE, EDGENGAIN, 0x07},
{EDGE_PAGE, EDGEPGAIN, 0x03},
{EDGE_PAGE, EDGELCLIPTH, 0x08},

{EDGE_PAGE, 0x2D, 0x01},


{EDGE_PAGE, 0x50, 0x01},//neg_h//sharp1d slope outdoor
{EDGE_PAGE, 0x51, 0x01},//neg_m
{EDGE_PAGE, 0x52, 0x01},//meg_l
{EDGE_PAGE, 0x53, 0x01},//pos_h
{EDGE_PAGE, 0x54, 0x01},//pos_m
{EDGE_PAGE, 0x55, 0x01},//pos_l

{EDGE_PAGE, 0x5c, 0x01},//neg_h//sharp1d slope indoor
{EDGE_PAGE, 0x5d, 0x01},//neg_m
{EDGE_PAGE, 0x5e, 0x01},//neg_l
{EDGE_PAGE, 0x5f, 0x01},//pos_h
{EDGE_PAGE, 0x60, 0x01},//pos_m
{EDGE_PAGE, 0x61, 0x01},//pos_l

{EDGE_PAGE, 0x62, 0x02},//neg_h//sharp1d slope dark1
{EDGE_PAGE, 0x63, 0x04},//neg_m
{EDGE_PAGE, 0x64, 0x03},//neg_l
{EDGE_PAGE, 0x65, 0x02},//pos_h
{EDGE_PAGE, 0x66, 0x04},//pos_m
{EDGE_PAGE, 0x67, 0x03},//pos_l

{EDGE_PAGE, 0x68, 0x01},//neg_h//sharp1d slope dark2/3
{EDGE_PAGE, 0x69, 0x02},//neg_m
{EDGE_PAGE, 0x6a, 0x01},//neg_l
{EDGE_PAGE, 0x6b, 0x01},//pos_h
{EDGE_PAGE, 0x6c, 0x02},//pos_m
{EDGE_PAGE, 0x6d, 0x01},//pos_l

{EDGE_PAGE, EDGE2DCTL1, 0x41},
{EDGE_PAGE, EDGE2DCTL2, 0x05},
{EDGE_PAGE, EDGE2DCTL3, 0x00},
{EDGE_PAGE, EDGE2DCTL4, 0xf5},//Gus Coef sel

{EDGE_PAGE, 0x8d, 0x11},//Adt ES sel

{EDGE_PAGE, EDGE2DLCOUTH, 0x08},//low-clip Outdoor
{EDGE_PAGE, EDGE2DLCOUTM, 0x06},
{EDGE_PAGE, EDGE2DLCOUTL, 0x04},
{EDGE_PAGE, EDGE2DLCINH, 0x01},//low-clip Indoor
{EDGE_PAGE, EDGE2DLCINM, 0x01},
{EDGE_PAGE, EDGE2DLCINL, 0x01},
{EDGE_PAGE, EDGE2DLCDAK1H, 0x02},//low-clip Dark1
{EDGE_PAGE, EDGE2DLCDAK1M, 0x02},
{EDGE_PAGE, EDGE2DLCDAK1L, 0x02},
{EDGE_PAGE, EDGE2DLCDAK23H, 0x03},//low-clip Dark2/3
{EDGE_PAGE, EDGE2DLCDAK23M, 0x03},
{EDGE_PAGE, EDGE2DLCDAK23L, 0x05},

{EDGE_PAGE, 0xac, 0x0e},//neg_h//sharp2d slope Outdoor
{EDGE_PAGE, 0xad, 0x0f},//neg_m
{EDGE_PAGE, 0xae, 0x0f},//neg_l
{EDGE_PAGE, 0xaf, 0x08},//pos_h
{EDGE_PAGE, 0xb0, 0x0a},//pos_m
{EDGE_PAGE, 0xb1, 0x0a},//pos_l

{EDGE_PAGE, 0xb2, 0x0a},//neg_h//sharp2d slope Indoor
{EDGE_PAGE, 0xb3, 0x0b},//neg_m 9->b
{EDGE_PAGE, 0xb4, 0x06},//neg_l
{EDGE_PAGE, 0xb5, 0x08},//pos_h
{EDGE_PAGE, 0xb6, 0x09},//pos_m 7->9
{EDGE_PAGE, 0xb7, 0x04},//pos_l

{EDGE_PAGE, 0xb8, 0x04},//neg_h//sharp2d slope Dark1
{EDGE_PAGE, 0xb9, 0x02},//neg_m
{EDGE_PAGE, 0xba, 0x02},//neg_l
{EDGE_PAGE, 0xbb, 0x02},//pos_h
{EDGE_PAGE, 0xbc, 0x01},//pos_m
{EDGE_PAGE, 0xbd, 0x01},//pos_l

{EDGE_PAGE, 0xbe, 0x04},//neg_h//sharp2d slope Dark2/3
{EDGE_PAGE, 0xbf, 0x02},//neg_m
{EDGE_PAGE, 0xc0, 0x02},//neg_l
{EDGE_PAGE, 0xc1, 0x02},//pos_h
{EDGE_PAGE, 0xc2, 0x01},//pos_m
{EDGE_PAGE, 0xc3, 0x01},//pos_l

{EDGE_PAGE, 0xca, 0x14},// High Clip Outdoor
{EDGE_PAGE, 0xcb, 0x14},
{EDGE_PAGE, 0xcc, 0x14},
{EDGE_PAGE, 0xcd, 0x14},
{EDGE_PAGE, 0xce, 0x14},
{EDGE_PAGE, 0xcf, 0x14},

{EDGE_PAGE, 0xd0, 0x0A},// High Clip Indoor
{EDGE_PAGE, 0xd1, 0x0B},
{EDGE_PAGE, 0xd2, 0x08},
{EDGE_PAGE, 0xd3, 0x09},
{EDGE_PAGE, 0xd4, 0x0A},
{EDGE_PAGE, 0xd5, 0x06},

{EDGE_PAGE, 0xd6, 0x0f},// High Clip Dark1
{EDGE_PAGE, 0xd7, 0x0f},
{EDGE_PAGE, 0xd8, 0x0f},
{EDGE_PAGE, 0xd9, 0x0f},
{EDGE_PAGE, 0xda, 0x0f},
{EDGE_PAGE, 0xdb, 0x0f},
{EDGE_PAGE, 0xdc, 0x0f},// High Clip Dark2/3
{EDGE_PAGE, 0xdd, 0x0f},
{EDGE_PAGE, 0xde, 0x0f},
{EDGE_PAGE, 0xdf, 0x0f},
{EDGE_PAGE, 0xe0, 0x0f},
{EDGE_PAGE, 0xe1, 0x0f},

{EDGE_PAGE, 0xe2, 0x59},//Unsharp
{EDGE_PAGE, 0xe3, 0x99},
{EDGE_PAGE, 0xe4, 0x00},
{EDGE_PAGE, 0xe5, 0x00},

{EDGE_PAGE, 0xee, 0x88},
{EDGE_PAGE, 0xf0, 0x99},
#endif

////////////////////////////////////////////
///           PAGE 15 Shading            ///
////////////////////////////////////////////
#if 0
{EDGE_PAGE, PAGEMODE, LENS_PAGE},
{LENS_PAGE, LENSCTL1, 0x15},
{LENS_PAGE, LENSRGAIN_SR300PC10, 0x80},
{LENS_PAGE, LENSGGAIN_SR300PC10, 0x80},
{LENS_PAGE, LENSBGAIN_SR300PC10, 0x80},
{LENS_PAGE, 0x1c, 0x41}, //0430 �߰�

{LENS_PAGE, XCEN, 0x80}, //XCEN, X for GR
{LENS_PAGE, YCEN, 0x80}, //YCEN, Y for GR
{LENS_PAGE, 0x22, 0x80}, //X for GB
{LENS_PAGE, 0x23, 0x80}, //Y for GB
{LENS_PAGE, 0x24, 0x80}, //X for R 60->50
{LENS_PAGE, 0x25, 0x80}, //Y for R 60->75
{LENS_PAGE, 0x26, 0x80}, //X for B
{LENS_PAGE, 0x27, 0x80}, //Y for B 60->6a

{LENS_PAGE, 0x30, 0xc8}, //0xbd
{LENS_PAGE, 0x31, 0x30},
{LENS_PAGE, 0x32, 0x48}, //{LENS_PAGE, 0x32, 0x44},
{LENS_PAGE, 0x33, 0x00}, //{LENS_PAGE, 0x33, 0x22},
{LENS_PAGE, 0x34, 0xa3},
{LENS_PAGE, 0x35, 0x18},

{LENS_PAGE, LENSRP0, 0x2e}, //R_2c //Out_120FPS_35
{LENS_PAGE, LENSGrP0, 0x20}, //Gr
{LENS_PAGE, LENSBP0, 0x1d}, //B
{LENS_PAGE, LENSGbP0, 0x20}, //Gb
#endif

////////////////////////////////////////////
///           PAGE 17 Gamma              ///
////////////////////////////////////////////
#if 0
{LENS_PAGE, PAGEMODE, GAMMA_PAGE},
{GAMMA_PAGE, GMACTL, 0x31},//GMA_CTL
{GAMMA_PAGE, 0x18, 0x7e},//AG_ON
{GAMMA_PAGE, 0x19, 0x7d},//AG_OFF
{GAMMA_PAGE, 0x1A, 0x0e},//TIME_ON
{GAMMA_PAGE, 0x1B, 0x01},//TIME_OFF
{GAMMA_PAGE, 0x1C, 0xdc},//OUT_ON
{GAMMA_PAGE, 0x1D, 0xfe},//OUT_OFF

//Indoor
//GMA 0.50 0.40  -> 0.42
{GAMMA_PAGE, GGMA1, 0x0c}, //0e
{GAMMA_PAGE, GGMA2, 0x1c}, //1d
{GAMMA_PAGE, GGMA3, 0x31}, //32
{GAMMA_PAGE, GGMA4, 0x54}, //56

{GAMMA_PAGE, GGMA5, 0x6d},
{GAMMA_PAGE, GGMA6, 0x85},
{GAMMA_PAGE, GGMA7, 0x96},
{GAMMA_PAGE, GGMA8, 0xa6},
{GAMMA_PAGE, GGMA9, 0xb4},
{GAMMA_PAGE, GGMA10, 0xbf},

{GAMMA_PAGE, GGMA11, 0xc7},
{GAMMA_PAGE, GGMA12, 0xcf},
{GAMMA_PAGE, GGMA13, 0xd5},
{GAMMA_PAGE, GGMA14, 0xdd},
{GAMMA_PAGE, GGMA15, 0xe3},
{GAMMA_PAGE, GGMA16, 0xeb},
{GAMMA_PAGE, GGMA17, 0xf2},
{GAMMA_PAGE, GGMA18, 0xfa}, //ff

//Outdoor
//RGMA 0.6 0.3
{GAMMA_PAGE, RGMA0, 0x00}, //0x00
{GAMMA_PAGE, RGMA1, 0x08}, //0x08
{GAMMA_PAGE, RGMA2, 0x19}, //0x19
{GAMMA_PAGE, RGMA3, 0x33}, //0x33
{GAMMA_PAGE, RGMA4, 0x5b}, //0x5b
{GAMMA_PAGE, RGMA5, 0x78}, //0x78
{GAMMA_PAGE, RGMA6, 0x89}, //0x89
{GAMMA_PAGE, RGMA7, 0x97}, //0x97
{GAMMA_PAGE, RGMA8, 0xa4}, //0xa4
{GAMMA_PAGE, RGMA9, 0xb0}, //0xb0
{GAMMA_PAGE, RGMA10, 0xbb}, //0xbb

{GAMMA_PAGE, RGMA11, 0xc3}, //0xc5
{GAMMA_PAGE, RGMA12, 0xcd}, //0xcf
{GAMMA_PAGE, RGMA13, 0xd6}, //0xd8
{GAMMA_PAGE, RGMA14, 0xde}, //0xe0

{GAMMA_PAGE, RGMA15, 0xe8}, //0xe9
{GAMMA_PAGE, RGMA16, 0xf0}, //0xf1
{GAMMA_PAGE, RGMA17, 0xf7}, //0xf8
{GAMMA_PAGE, RGMA18, 0xf8}, //0xff

//Dark
//BGMA 0.38 0.35
{GAMMA_PAGE, BGMA0, 0x00},
{GAMMA_PAGE, BGMA1, 0x14},//19
{GAMMA_PAGE, BGMA2, 0x24},//28
{GAMMA_PAGE, BGMA3, 0x3f},//42
{GAMMA_PAGE, BGMA4, 0x6b},
{GAMMA_PAGE, BGMA5, 0x8c},
{GAMMA_PAGE, BGMA6, 0xa5},
{GAMMA_PAGE, BGMA7, 0xba},
{GAMMA_PAGE, BGMA8, 0xc8},
{GAMMA_PAGE, BGMA9, 0xd1},
{GAMMA_PAGE, BGMA10, 0xd8},
{GAMMA_PAGE, BGMA11, 0xde},
{GAMMA_PAGE, BGMA12, 0xe3},
{GAMMA_PAGE, BGMA13, 0xe7},
{GAMMA_PAGE, BGMA14, 0xec},
{GAMMA_PAGE, BGMA15, 0xef},
{GAMMA_PAGE, BGMA16, 0xf4},
{GAMMA_PAGE, BGMA17, 0xf8},
{GAMMA_PAGE, BGMA18, 0xff},
//Gamma Function End
#endif

////////////////////////////////////////////
///           PAGE 16 CMC                ///
////////////////////////////////////////////
#if 0
//CMC Fuction Start
{GAMMA_PAGE, PAGEMODE, COLOR_PAGE},
{COLOR_PAGE, CMCCTL, 0x2f},

//Monte CMC
{COLOR_PAGE, CMCOFSGH, 0x48},	//CMCOFSGH
{COLOR_PAGE, CMCOFSGM, 0x38},	//CMCOFSGM
{COLOR_PAGE, CMCOFSGL, 0x24},	//CMCOFSGL
{COLOR_PAGE, CMCSIGN, 0x2f},	//CMC SIGN
//CMC
{COLOR_PAGE, CMC11, 0x74},
{COLOR_PAGE, CMC12, 0x3f},
{COLOR_PAGE, CMC13, 0x0b},
{COLOR_PAGE, CMC21, 0x0f},
{COLOR_PAGE, CMC22, 0x5c},
{COLOR_PAGE, CMC23, 0x0d},
{COLOR_PAGE, CMC31, 0x02},
{COLOR_PAGE, CMC32, 0x44},
{COLOR_PAGE, CMC33, 0x86},

//CMC OFS
{COLOR_PAGE, CMCOFSL11, 0x88},
{COLOR_PAGE, CMCOFSL12, 0x08},
{COLOR_PAGE, CMCOFSL13, 0x00},
{COLOR_PAGE, CMCOFSL21, 0x84},
{COLOR_PAGE, CMCOFSL22, 0x04},
{COLOR_PAGE, CMCOFSL23, 0x80},
{COLOR_PAGE, CMCOFSL31, 0x8c},
{COLOR_PAGE, CMCOFSL32, 0x00},
{COLOR_PAGE, CMCOFSL33, 0x0c},

//CMC POFS
{COLOR_PAGE, CMCOFSH11, 0x05},
{COLOR_PAGE, CMCOFSH12, 0x83},
{COLOR_PAGE, CMCOFSH13, 0x82},
{COLOR_PAGE, CMCOFSH21, 0x83},
{COLOR_PAGE, CMCOFSH22, 0x05},
{COLOR_PAGE, CMCOFSH23, 0x82},
{COLOR_PAGE, CMCOFSH31, 0x81},
{COLOR_PAGE, CMCOFSH32, 0x01},
{COLOR_PAGE, CMCOFSH33, 0x00},
//CMC Fuction End

// Digital gain
{COLOR_PAGE, 0x80, 0x00},
{COLOR_PAGE, 0x85, 0x80},
#endif


////////////////////////////////////////////
///           PAGE 18 AE                 ///
////////////////////////////////////////////
#if 0
//HIST
{COLOR_PAGE, PAGEMODE, FLICKER_PAGE},
{FLICKER_PAGE, ISCTL, 0x70},
{FLICKER_PAGE, 0x11, 0x0e},//historgram 50%
//Anti flicker
{FLICKER_PAGE, FLKMODE, 0x01},
{FLICKER_PAGE, FLK200, 0x30},//100 at 48Mhz
{FLICKER_PAGE, FLK240, 0x28},//120 at 48Mhz
#endif

////////////////////////////////////////////
///           PAGE 19 Scailer            ///
////////////////////////////////////////////
#if 0
//Scailer
{FLICKER_PAGE, PAGEMODE, SCALING_PAGE},
{SCALING_PAGE, ZOUTWIDH, 0x02},
{SCALING_PAGE, ZOUTWIDL, 0x80},
{SCALING_PAGE, ZOUTHGTH, 0x01},
{SCALING_PAGE, ZOUTHGTL, 0xe0},

{SCALING_PAGE, ZWINSTXH, 0x00},
{SCALING_PAGE, ZWINSTXL, 0x03},
{SCALING_PAGE, ZWINSTYH, 0x00},
{SCALING_PAGE, ZWINSTYL, 0x03},

{SCALING_PAGE, ZWINENXH, 0x00},
{SCALING_PAGE, ZWINENXL, 0x23},
{SCALING_PAGE, ZWINENYH, 0x00},
{SCALING_PAGE, ZWINENYL, 0x1b},

{SCALING_PAGE, ZVERSTEPH, 0x0c},
{SCALING_PAGE, ZVERSTEPL, 0xcc},
{SCALING_PAGE, ZHORSTEPH, 0x0c},
{SCALING_PAGE, ZHORSTEPL, 0xcc},
{SCALING_PAGE, ZFIFODLY, 0x41},
#endif

////////////////////////////////////////////
///           PAGE 20 AE                 ///
////////////////////////////////////////////
#if 0
{SCALING_PAGE, PAGEMODE, AUTOEXP_PAGE},
{AUTOEXP_PAGE, AECTL1, 0x1c}, //50Hz
{AUTOEXP_PAGE, AEFRAMECTL1, 0x01},
{AUTOEXP_PAGE, 0x21, 0x34},
//Uniform Setting
{AUTOEXP_PAGE, 0x23, 0x40}, //out uni y ofs
{AUTOEXP_PAGE, 0x24, 0x04}, //out uni enb

{AUTOEXP_PAGE, AEFINECTL1, 0xE7}, //dark dg enable
{AUTOEXP_PAGE, 0x2c, 0xa3},

{AUTOEXP_PAGE, 0x56, 0x1e}, //AE BL, AWB weight position
{AUTOEXP_PAGE, 0x57, 0xa4},
{AUTOEXP_PAGE, 0x58, 0x22},
{AUTOEXP_PAGE, 0x59, 0xd6},

//1_1_1
{AUTOEXP_PAGE, AEWGT1, 0x00},
{AUTOEXP_PAGE, AEWGT2, 0x00},
{AUTOEXP_PAGE, AEWGT3, 0x00},
{AUTOEXP_PAGE, AEWGT4, 0x00},
{AUTOEXP_PAGE, AEWGT5, 0x00},
{AUTOEXP_PAGE, AEWGT6, 0x00},
{AUTOEXP_PAGE, AEWGT7, 0x01},
{AUTOEXP_PAGE, AEWGT8, 0x40},
{AUTOEXP_PAGE, AEWGT9, 0x01},
{AUTOEXP_PAGE, AEWGT10, 0x40},
{AUTOEXP_PAGE, AEWGT11, 0x0a},
{AUTOEXP_PAGE, AEWGT12, 0xa0},
{AUTOEXP_PAGE, AEWGT13, 0x00},
{AUTOEXP_PAGE, AEWGT14, 0x00},
{AUTOEXP_PAGE, AEWGT15, 0x00},
{AUTOEXP_PAGE, AEWGT16, 0x00},

{AUTOEXP_PAGE, YLVL, 0x3e},//3c->40
{AUTOEXP_PAGE, 0x71, 0x81},//20100301 81->82  (OutTarget : 46)
{AUTOEXP_PAGE, YTH1, 0x23},//YTH1

{AUTOEXP_PAGE, EXPTIMEH, 0x00},		//Exptime 25fps at 48Mhz_50hz
{AUTOEXP_PAGE, EXPTIMEM, 0xea},
{AUTOEXP_PAGE, EXPTIMEL, 0x60},

{AUTOEXP_PAGE, EXPMINH, 0x01},        //exp min  400
{AUTOEXP_PAGE, EXPMINL, 0x90},

{AUTOEXP_PAGE, EXPMAXH, 0x02},        //Exp max 8.33fps at 48Mhz 50hz
{AUTOEXP_PAGE, EXPMAXM, 0xbf},
{AUTOEXP_PAGE, EXPMAXL, 0x20},

{AUTOEXP_PAGE, EXP100H, 0x3a},        //bandtime 100 at 48Mhz
{AUTOEXP_PAGE, EXP100L, 0x98},
{AUTOEXP_PAGE, EXP120H, 0x30},        //bandtime 120 at 48Mhz
{AUTOEXP_PAGE, EXP120L, 0xd4},

{AUTOEXP_PAGE, EXPOUT1, 0xce},        //outdoor time th1
{AUTOEXP_PAGE, EXPOUT2, 0x46},        //outdoor time th2 // 46->57
{AUTOEXP_PAGE, 0x9B, 0x34},        //High temp time th

{AUTOEXP_PAGE, EXPUNITH, 0x01},        //4shared unit 500 -> 400
{AUTOEXP_PAGE, EXPUNITL, 0x90},
{AUTOEXP_PAGE, AGMIN, 0x10},        //gain min 0d -> 10
{AUTOEXP_PAGE, AGMAX, 0x90},		     //a0_gain max

{AUTOEXP_PAGE, AGSKY_SR300PC10, 0x17},        //clp_gain_12
{AUTOEXP_PAGE, DGMAX, 0x80},        //dgain max
{AUTOEXP_PAGE, DGMIN, 0x80},        //dgain min
#endif

////////////////////////////////////////////
///           PAGE 21 AE                 ///
////////////////////////////////////////////
#if 0
{AUTOEXP_PAGE, PAGEMODE, 0x21}, //count set
{0x21, 0x20, 0x00}, //40_MCU Y offset
{0x21, 0x21, 0x80}, //40->80
{0x21, 0x23, 0xff},
{0x21, 0x24, 0xc8}, //da->c8
{0x21, 0x25, 0x06}, //06
{0x21, 0x26, 0xc4}, //0xF8->0xC4
{0x21, 0x27, 0x98},
{0x21, 0x28, 0x66},
{0x21, 0x29, 0x66},
{0x21, 0x2a, 0xff},
{0x21, 0x2b, 0xda}, //ea->da
#endif

////////////////////////////////////////////
///           PAGE 22 AWB                ///
////////////////////////////////////////////
#if 0	// Noticably changes color
{0x21, PAGEMODE, AUTOWB_PAGE},
{AUTOWB_PAGE, AWBCTL1, 0xeb},
{AUTOWB_PAGE, AWBCTL2, 0x2e},
{AUTOWB_PAGE, 0x12, 0x00},
{AUTOWB_PAGE, 0x13, 0x00},
{AUTOWB_PAGE, 0x14, 0x00},
{AUTOWB_PAGE, 0x15, 0x00},
{AUTOWB_PAGE, 0x16, 0x00},
{AUTOWB_PAGE, 0x17, 0x00},
{AUTOWB_PAGE, 0x18, 0x00},
{AUTOWB_PAGE, AWBMAP, 0x15}, //R_Low temp select

//Uniform Boundary
{AUTOWB_PAGE, 0x1a, 0x50},
{AUTOWB_PAGE, 0x1b, 0x20},
{AUTOWB_PAGE, 0x1c, 0x50},
{AUTOWB_PAGE, 0x1d, 0x20},
//Uniform Exp
{AUTOWB_PAGE, 0x1e, 0x40},
{AUTOWB_PAGE, 0x1f, 0x80},

{AUTOWB_PAGE, 0x20, 0x34},
{AUTOWB_PAGE, 0x21, 0x00},
{AUTOWB_PAGE, 0x22, 0x00},
{AUTOWB_PAGE, 0x23, 0x00},
{AUTOWB_PAGE, 0x24, 0xB7}, //Hunting Option
{AUTOWB_PAGE, AWBCTL3, 0x3c},

{AUTOWB_PAGE, 0x26, 0x14}, //0x04->0x12
{AUTOWB_PAGE, 0x27, 0x61}, //6b->43->61

{AUTOWB_PAGE, 0x28, 0x66},
{AUTOWB_PAGE, 0x29, 0x31}, //29->39->31
{AUTOWB_PAGE, 0x2a, 0x45},
{AUTOWB_PAGE, 0x2b, 0x99}, //9d->99
{AUTOWB_PAGE, 0x2c, 0x2c}, //65
{AUTOWB_PAGE, 0x2d, 0x5f}, //5a->5f
{AUTOWB_PAGE, AWBCTL4, 0xbf}, //ff->bf
{AUTOWB_PAGE, AWBCTL5, 0x00}, //New Low temp on_08/off_00
{AUTOWB_PAGE, ULVL, 0x80},
{AUTOWB_PAGE, VLVL, 0x80},
{AUTOWB_PAGE, 0x32, 0x80},
{AUTOWB_PAGE, 0x33, 0x80},
{AUTOWB_PAGE, WHTSLOPE1, 0x18},
{AUTOWB_PAGE, WHTSLOPE2, 0x0e}, //0c
{AUTOWB_PAGE, CDIFFBND1, 0x2a},
{AUTOWB_PAGE, CDIFFBND2, 0x12}, //2a
{AUTOWB_PAGE, UVTH1, 0x01},
{AUTOWB_PAGE, UVTH2, 0xaa},
{AUTOWB_PAGE, 0x3a, 0x88},
{AUTOWB_PAGE, 0x3b, 0xc4},
{AUTOWB_PAGE, 0x3c, 0xf8},
{AUTOWB_PAGE, 0x3d, 0x00},
{AUTOWB_PAGE, 0x3e, 0x00},
{AUTOWB_PAGE, 0x3f, 0x00},
{AUTOWB_PAGE, YRANGE, 0xf3},
{AUTOWB_PAGE, CDIFF, 0x43}, //r1 cdiff
{AUTOWB_PAGE, CSUM2, 0x33}, //r1 2dsum
{AUTOWB_PAGE, YRANGETOT, 0xf3},
{AUTOWB_PAGE, CDIFFTOT, 0x65}, //unstb cdiff
{AUTOWB_PAGE, CSUM2TOT, 0x44}, //unstb 2dsum
{AUTOWB_PAGE, WHTPXLTH, 0x08}, //0x02->0x08
{AUTOWB_PAGE, YRANGEDAK, 0xf3},
{AUTOWB_PAGE, CDIFFDAK, 0x43}, //r2 cdiff
{AUTOWB_PAGE, CSUM2DAK, 0x33}, //r2 2dsum 0x15->0x24->23
{AUTOWB_PAGE, YRANGEOUT, 0x84},
{AUTOWB_PAGE, CDIFFOUT, 0x32}, //r3 cdiff
{AUTOWB_PAGE, CSUM2OUT, 0x23}, //r3 2dsum 0x13->0x23
{AUTOWB_PAGE, STBYTH, 0xd4},
{AUTOWB_PAGE, 0x4e, 0x04}, //0x0a->0x02
{AUTOWB_PAGE, 0x4f, 0x00},
{AUTOWB_PAGE, CSUM4, 0x22}, //r1 4dsum
{AUTOWB_PAGE, CSUM4TOT, 0x33}, //unstb 4dsum
{AUTOWB_PAGE, CSUM4DAK, 0x22}, //r2 4dsum //0x13->0x23->22
{AUTOWB_PAGE, CSUM4OUT, 0x22}, //r3 4dsum
{AUTOWB_PAGE, 0x54, 0x07},
{AUTOWB_PAGE, 0x55, 0x04}, //0x0a->0x04
{AUTOWB_PAGE, 0x56, 0x11},
{AUTOWB_PAGE, 0x57, 0x10}, //0x44->0x10->0x20
{AUTOWB_PAGE, 0x58, 0x80},
{AUTOWB_PAGE, 0x59, 0x00},
{AUTOWB_PAGE, AWBOUTTHON, 0xe0},
{AUTOWB_PAGE, AWBOUTTHOFF, 0xf0},
{AUTOWB_PAGE, 0x5c, 0x80},
{AUTOWB_PAGE, 0x5d, 0x10}, //44->10
{AUTOWB_PAGE, 0x5e, 0x20}, //40->20->00 //r2 out_wgt
{AUTOWB_PAGE, 0x5f, 0x00},
{AUTOWB_PAGE, 0x60, 0xfa}, //r1 y max
{AUTOWB_PAGE, 0x61, 0xfa}, //r2 y max
{AUTOWB_PAGE, 0x62, 0x08}, //r2 y min
{AUTOWB_PAGE, 0x63, 0xfa}, //r3 y max
{AUTOWB_PAGE, 0x64, 0x48}, //r3 y min
{AUTOWB_PAGE, 0x65, 0x12},
{AUTOWB_PAGE, 0x66, 0x41},

{AUTOWB_PAGE, 0x67, 0x04}, //0x0a->0x01
{AUTOWB_PAGE, 0x68, 0x14}, //0x14 //preview(20/4=5)
{AUTOWB_PAGE, 0x69, 0x08}, //0x0a(10/4=5)
{AUTOWB_PAGE, 0x6a, 0x0a}, //0x14->0x0a(10/4=5)

{AUTOWB_PAGE, 0x6b, 0x18}, //18
{AUTOWB_PAGE, 0x6c, 0x00},
{AUTOWB_PAGE, 0x6d, 0x14}, //r1 rcnt 0x40->0x34
{AUTOWB_PAGE, 0x6e, 0x18}, //r1 rmax 0x48->0x44->0x40
{AUTOWB_PAGE, 0x6f, 0x10}, //r1 rmin 0x38->0x24
{AUTOWB_PAGE, 0x70, 0x38}, //0x40->0x38
{AUTOWB_PAGE, 0x71, 0x48}, //0x4C->0x48
{AUTOWB_PAGE, 0x72, 0x28}, //0x30->0x28
{AUTOWB_PAGE, 0x73, 0x28},
{AUTOWB_PAGE, 0x74, 0x38}, //0x44->0x38
{AUTOWB_PAGE, 0x75, 0x48}, //0x50->0x48
{AUTOWB_PAGE, 0x76, 0x28}, //0x30->0x28
{AUTOWB_PAGE, 0x77, 0x00},
{AUTOWB_PAGE, 0x78, 0x40},
{AUTOWB_PAGE, 0x79, 0x40},
{AUTOWB_PAGE, 0x7a, 0xd6},
{AUTOWB_PAGE, 0x7b, 0xa1},
{AUTOWB_PAGE, 0x7c, 0xa4},
{AUTOWB_PAGE, 0x7d, 0xf0},
{AUTOWB_PAGE, 0x7e, 0x48},
{AUTOWB_PAGE, 0x7f, 0x63},

//RGB
{AUTOWB_PAGE, RGAIN, 0x3c}, //38
{AUTOWB_PAGE, GGAIN, 0x20},
{AUTOWB_PAGE, BGAIN, 0x34}, //40

//Defualt Boundary
{AUTOWB_PAGE, RMAX, 0x68}, //58
{AUTOWB_PAGE, RMIN, 0x1f}, //22
{AUTOWB_PAGE, BMAX, 0x58}, //5d
{AUTOWB_PAGE, BMIN, 0x23}, //21

//Middle Boundary
{AUTOWB_PAGE, RMAXM, 0x42}, //3f->42_outdoor1
{AUTOWB_PAGE, RMINM, 0x28},
{AUTOWB_PAGE, BMAXM, 0x3c},
{AUTOWB_PAGE, BMINM, 0x2d}, //30->2d

//Outdoor Boundary
{AUTOWB_PAGE, RMAXB, 0x40}, //39->42_outdoor2
{AUTOWB_PAGE, RMINB, 0x2f}, //28
{AUTOWB_PAGE, BMAXB, 0x3A}, //
{AUTOWB_PAGE, BMINB, 0x2d}, //30->2d//outdoor awb limit
// slop
{AUTOWB_PAGE, BGAINPARA1, 0x50}, //53
{AUTOWB_PAGE, BGAINPARA2, 0x4d}, //52
{AUTOWB_PAGE, BGAINPARA3, 0x4b}, //50
{AUTOWB_PAGE, BGAINPARA4, 0x4a}, //4d
{AUTOWB_PAGE, BGAINPARA5, 0x48}, //4a
{AUTOWB_PAGE, BGAINPARA6, 0x45}, //42
{AUTOWB_PAGE, BGAINPARA7, 0x3e}, //36
{AUTOWB_PAGE, BGAINPARA8, 0x36}, //2a
{AUTOWB_PAGE, BGAINPARA9, 0x2c}, //26
{AUTOWB_PAGE, BGAINPARA10, 0x26}, //23
{AUTOWB_PAGE, BGAINPARA11, 0x23}, //21
{AUTOWB_PAGE, BGAINPARA12, 0x22}, //21

{AUTOWB_PAGE, BGAINBND1, 0xaa}, //67 //
{AUTOWB_PAGE, BGAINBND2, 0x9a}, //76 //aa
{AUTOWB_PAGE, RAINTH1, 0x40}, //40
{AUTOWB_PAGE, RAINTH2, 0x38}, //38
{AUTOWB_PAGE, RAINTH3, 0x20}, //20

//Delta
{AUTOWB_PAGE, RDELTA1, 0x23},
{AUTOWB_PAGE, BDELTA1, 0x32},
{AUTOWB_PAGE, RDELTA2, 0x43}, //0xff->0x43
{AUTOWB_PAGE, BDELTA2, 0x43}, //0xff->0x43
{AUTOWB_PAGE, AWBEXPLMT1, 0x1e},
{AUTOWB_PAGE, AWBEXPLMT2, 0x78},
{AUTOWB_PAGE, AWBEXPLMT3, 0xa0}, //0xe7->0xa0

{AUTOWB_PAGE, 0xa7, 0x00}, //Low temp r gain min
{AUTOWB_PAGE, 0xa8, 0x18}, //Low temp r gain max
{AUTOWB_PAGE, 0xa9, 0x7f}, //Low temp b gain limit

{AUTOWB_PAGE, 0xaa, 0xf8},
{AUTOWB_PAGE, 0xab, 0x20},
{AUTOWB_PAGE, 0xac, 0x00},

{AUTOWB_PAGE, HTMPTHOFF, 0x3F}, //High temp gain off
{AUTOWB_PAGE, HTMPTHON, 0x3D}, //High temp gain on

{AUTOWB_PAGE, 0xaf, 0x26}, //Low temp r gain off
{AUTOWB_PAGE, 0xb0, 0x24}, //Low temp r gain on
{AUTOWB_PAGE, 0xb1, 0x24}, //0x28->0x24

{AUTOWB_PAGE, MRGAIN, 0x48},
{AUTOWB_PAGE, MBGAIN, 0x40},
{AUTOWB_PAGE, 0xb4, 0xff},
{AUTOWB_PAGE, 0xb5, 0x7f},
{AUTOWB_PAGE, HTMPOFS, 0x09}, //High temp ofs Cb=0x80, Cr=0x7e
{AUTOWB_PAGE, LTMPOFS, 0x00}, //a1_Low color offset target Cb=0x7e, Cr=0x80

{AUTOWB_PAGE, 0xb8, 0x2c}, //Low temp r gain off
{AUTOWB_PAGE, 0xb9, 0x2a}, //Low temp r gain on

{AUTOWB_PAGE, 0xba, 0x08},
{AUTOWB_PAGE, 0xbb, 0x25},
{AUTOWB_PAGE, LTMPTHMIN, 0x26}, //Awb target New low temp gain min
{AUTOWB_PAGE, LTMPTHMAX, 0x24}, //Awb target New low temp gain max
{AUTOWB_PAGE, 0xbe, 0x00},
{AUTOWB_PAGE, 0xbf, 0x22},
{AUTOWB_PAGE, 0xc0, 0x10},
{AUTOWB_PAGE, 0xc1, 0x90},
{AUTOWB_PAGE, 0xc2, 0x10},
{AUTOWB_PAGE, 0xc3, 0x68},
{AUTOWB_PAGE, 0xc4, 0x08},
{AUTOWB_PAGE, 0xc5, 0x62},
{AUTOWB_PAGE, 0xc6, 0x10},
{AUTOWB_PAGE, 0xc7, 0x90},
#endif

////////////////////////////////////////////
///           PAGE 24 AWB                ///
////////////////////////////////////////////
#if 0
{AUTOWB_PAGE, PAGEMODE, AUTOFOCUS_PAGE}, //0x24 page
{AUTOFOCUS_PAGE, AFCTL1, 0x01},
{AUTOFOCUS_PAGE, 0x11, 0x80}, //uni1&uni2=uni => uni1 only
{AUTOFOCUS_PAGE, AFCTL3, 0x4C}, //0x44->0x4C
{AUTOFOCUS_PAGE, 0x14, 0xdc}, //11->dc
{AUTOFOCUS_PAGE, 0x18, 0x05}, //UniSampling
{AUTOFOCUS_PAGE, AFCTL4, 0x15}, //Motion Sampling

{AUTOFOCUS_PAGE, 0x20, 0x1e}, //r1 y st
{AUTOFOCUS_PAGE, 0x21, 0xa2}, //r1 y en
{AUTOFOCUS_PAGE, 0x22, 0x55}, //r1 x st
{AUTOFOCUS_PAGE, 0x23, 0xab}, //r1 x en
{AUTOFOCUS_PAGE, 0x24, 0x08}, //r2 y st
{AUTOFOCUS_PAGE, 0x25, 0xb8}, //r2 y en
{AUTOFOCUS_PAGE, 0x26, 0x08}, //r2 x st
{AUTOFOCUS_PAGE, 0x27, 0xf8}, //r2 y en

{AUTOFOCUS_PAGE, 0x30, 0x10}, //uni y st
{AUTOFOCUS_PAGE, 0x31, 0xb0}, //uni y en
{AUTOFOCUS_PAGE, 0x32, 0x10}, //uni x st
{AUTOFOCUS_PAGE, 0x33, 0xf0}, //uni x en
{AUTOFOCUS_PAGE, 0x34, 0x1e}, //uni y low th
{AUTOFOCUS_PAGE, 0x35, 0x98}, //uni y high th
{AUTOFOCUS_PAGE, 0x36, 0x02}, //on th
{AUTOFOCUS_PAGE, 0x37, 0x00},
{AUTOFOCUS_PAGE, 0x38, 0x10}, //off th
{AUTOFOCUS_PAGE, 0x39, 0x00},
//Y
{AUTOFOCUS_PAGE, AFROWSTR1, 0x0A},
{AUTOFOCUS_PAGE, AFROWENR1, 0x42},
{AUTOFOCUS_PAGE, AFROWSTR2, 0x44},
{AUTOFOCUS_PAGE, AFROWENR2, 0x7C},
{AUTOFOCUS_PAGE, AFROWSTR3, 0x7E},
{AUTOFOCUS_PAGE, AFROWENR3, 0xB6},
//X
{AUTOFOCUS_PAGE, AFCOLSTR1, 0x1A},
{AUTOFOCUS_PAGE, AFCOLENR1, 0x34},
{AUTOFOCUS_PAGE, AFCOLSTR2, 0x55},
{AUTOFOCUS_PAGE, AFCOLENR2, 0x6F},
{AUTOFOCUS_PAGE, AFCOLSTR3, 0x90},
{AUTOFOCUS_PAGE, AFCOLENR3, 0xAA},
{AUTOFOCUS_PAGE, AFCOLSTR4, 0xCC},
{AUTOFOCUS_PAGE, AFCOLENR4, 0xE6},

{AUTOFOCUS_PAGE, 0x60, 0x07},
{AUTOFOCUS_PAGE, 0x61, 0x07},
{AUTOFOCUS_PAGE, 0x62, 0x0a},
{AUTOFOCUS_PAGE, 0x64, 0x00},
{AUTOFOCUS_PAGE, 0x65, 0x00},
{AUTOFOCUS_PAGE, 0x66, 0x00},
{AUTOFOCUS_PAGE, 0x67, 0x00},
{AUTOFOCUS_PAGE, 0x68, 0x06},
{AUTOFOCUS_PAGE, 0x69, 0x00},
{AUTOFOCUS_PAGE, 0x6a, 0x03},
{AUTOFOCUS_PAGE, 0x6b, 0x00},
{AUTOFOCUS_PAGE, 0x6c, 0x00},
{AUTOFOCUS_PAGE, 0x6d, 0x00},
{AUTOFOCUS_PAGE, 0x6e, 0x00},
{AUTOFOCUS_PAGE, 0x6f, 0x00},
{AUTOFOCUS_PAGE, 0x70, 0x0b},
{AUTOFOCUS_PAGE, 0x71, 0x00},
{AUTOFOCUS_PAGE, 0x72, 0x07},
{AUTOFOCUS_PAGE, 0x73, 0x00},
{AUTOFOCUS_PAGE, 0x74, 0xf0},
{AUTOFOCUS_PAGE, 0x75, 0x0a},
#endif

////////////////////////////////////////////
///           30 Page MCU AE             ///
////////////////////////////////////////////
#if 0
{AUTOFOCUS_PAGE, PAGEMODE, MCU_PAGE},

////////////////////////////////////////////
///           50 Page                    ///
////////////////////////////////////////////
{MCU_PAGE, PAGEMODE, 0x50},
{0x50, 0x11, 0x00},
{0x50, 0x12, 0x00},
{0x50, 0x13, 0x00},
{0x50, 0x14, 0x00},
{0x50, 0x16, 0x02},
{0x50, 0x17, 0x02},
//{0x50, 0x18, 0x02},
{0x50, 0x1A, 0x3C}, //dark,ind
{0x50, 0x1B, 0x03}, //02_out1,2
//{0x50, 0x1C, 0x01}, //out2

//�߰�_Deshutter_20100509
//{0x50, 0x11, 0x08},
//{0x50, 0x12, 0x11},
//{0x50, 0x14, 0xf4},
//{0x50, 0x2d, 0x32},
//{0x50, 0x2e, 0x48}, //38
//{0x50, 0x2f, 0x10},
//{0x50, 0x30, 0x90}, //c0
#endif

////////////////////////////////////////////
///           51 Page                    ///
////////////////////////////////////////////
#if 0
{0x50, PAGEMODE, 0x51},

{0x51, 0x4C, 0x15},
{0x51, 0x4D, 0x40},
{0x51, 0x4E, 0x2e},//2e_ind,dark

{0x51, 0x4f, 0x10},
{0x51, 0x50, 0x61},
{0x51, 0x51, 0x1a},//1b_ind,dark

{0x51, 0x6A, 0x15},
{0x51, 0x6B, 0x40},
{0x51, 0x6C, 0x35},//out1,2

{0x51, 0x6d, 0x10},
{0x51, 0x6e, 0x61},
{0x51, 0x6f, 0x1b},//out1,2

//{0x51, 0x88, 0x15},
//{0x51, 0x89, 0x40},
//{0x51, 0x8A, 0x4F},//out2

//{0x51, 0x8B, 0x10},
//{0x51, 0x8C, 0x61},
//{0x51, 0x8D, 0x19},//out2
#endif

////////////////////////////////////////////
///           70 Page AE                 ///
////////////////////////////////////////////
#if 0
{0x51, PAGEMODE, 0x70},

{0x70, 0x11, 0x60},
{0x70, 0x1e, 0x00}, //100fps 24Mhz 50Hz
{0x70, 0x1f, 0x3a}, //
{0x70, 0x20, 0x98}, //

{0x70, 0x22, 0x00}, //33.3fps 24Mhz 50Hz
{0x70, 0x23, 0xaf}, //
{0x70, 0x24, 0xc8}, //

{0x70, 0x26, 0x01}, //12.5fps 24Mhz 50Hz
{0x70, 0x27, 0xd4}, //
{0x70, 0x28, 0xc0}, //

{0x70, 0x18, 0x10}, //50fps
{0x70, 0x19, 0x20}, //21_33.3fps(700lux)
{0x70, 0x1a, 0x3e}, //3c_12.5fps(200lux)

{0x70, 0x1b, 0x04},
{0x70, 0x1c, 0x80},

//MCU AE Initial Setting_60hz
{0x70, 0x8d, 0x47},
{0x70, 0x8e, 0xc3},
{0x70, 0x8f, 0x50},
{0x70, 0x90, 0x00},

{0x70, 0x7c, 0x00},
{0x70, 0x7d, 0x00},
{0x70, 0x7e, 0x00},
{0x70, 0x7f, 0x04},

{0x70, 0x80, 0x00},
{0x70, 0x81, 0x00},
{0x70, 0x82, 0x00},
{0x70, 0x83, 0x04},
#endif


////////////////////////////////////////////
///           72 Page ARS                ///
////////////////////////////////////////////
#if 0
{0x70, PAGEMODE, 0x72},
{0x72, 0xa5, 0x00},

{0x72, 0x11, 0x00}, // Outdoor1,2 Enb, Start 1
{0x72, 0x12, 0x00}, // End 12(C)
{0x72, 0x13, 0x00}, //30
{0x72, 0x14, 0x00}, //1a
{0x72, 0x15, 0x00},
{0x72, 0x16, 0x00},
{0x72, 0x17, 0x00},
{0x72, 0x18, 0x00},
{0x72, 0x19, 0x00},
{0x72, 0x1A, 0x00},
{0x72, 0x1B, 0x00},
{0x72, 0x1C, 0x00},

//Init Register - Must set 0x00 (0x1d ~ 0x20)
{0x72, 0x1d, 0x00}, //0
{0x72, 0x1e, 0x00},
{0x72, 0x1f, 0x00},
{0x72, 0x20, 0x00},

//LensRg
{0x72, 0x21, 0x00}, //1
{0x72, 0x22, 0x00},
{0x72, 0x23, 0x00},
{0x72, 0x24, 0x00},
//
{0x72, 0x25, 0x00}, //2
{0x72, 0x26, 0x00},
{0x72, 0x27, 0x00},
{0x72, 0x28, 0x00},
//
{0x72, 0x29, 0x00}, //3
{0x72, 0x2A, 0x00},
{0x72, 0x2B, 0x00},
{0x72, 0x2C, 0x00},
//
{0x72, 0x2D, 0x00}, //4
{0x72, 0x2E, 0x00},
{0x72, 0x2F, 0x00},
{0x72, 0x30, 0x00},
//
{0x72, 0x31, 0x00}, //5
{0x72, 0x32, 0x00},
{0x72, 0x33, 0x00},
{0x72, 0x34, 0x00},
//
{0x72, 0x35, 0x00}, //6
{0x72, 0x36, 0x00},
{0x72, 0x37, 0x00},
{0x72, 0x38, 0x00},
//
{0x72, 0x39, 0x00}, //7
{0x72, 0x3A, 0x00},
{0x72, 0x3B, 0x00},
{0x72, 0x3C, 0x00},
//
{0x72, 0x3d, 0x00}, //8
{0x72, 0x3e, 0x00},
{0x72, 0x3f, 0x00},
{0x72, 0x40, 0x00},
//
{0x72, 0x41, 0x00}, //9
{0x72, 0x42, 0x00},
{0x72, 0x43, 0x00},
{0x72, 0x44, 0x00},
//
{0x72, 0x45, 0x00}, //A
{0x72, 0x46, 0x00},
{0x72, 0x47, 0x00},
{0x72, 0x48, 0x00},

{0x72, 0x49, 0x00}, //B
{0x72, 0x4a, 0x00},
{0x72, 0x4b, 0x00},
{0x72, 0x4c, 0x00},

{0x72, 0x4d, 0x00}, //C
{0x72, 0x4e, 0x00},
{0x72, 0x4f, 0x00},
{0x72, 0x50, 0x00},

{0x72, 0x51, 0x00}, //D
{0x72, 0x52, 0x00},
{0x72, 0x53, 0x00},
{0x72, 0x54, 0x00},

{0x72, 0x55, 0x00}, //E
{0x72, 0x56, 0x00},
{0x72, 0x57, 0x00},
{0x72, 0x58, 0x00},

{0x72, 0x59, 0x00}, //F
{0x72, 0x5a, 0x00},
{0x72, 0x5b, 0x00},
{0x72, 0x5c, 0x00},

//return indoor
//LensRg
{0x72, 0x5d, 0x00}, //10 //1 back
{0x72, 0x5e, 0x00},
{0x72, 0x5f, 0x00},
{0x72, 0x60, 0x00},
//
{0x72, 0x61, 0x00}, //11 //2 back
{0x72, 0x62, 0x00},
{0x72, 0x63, 0x00},
{0x72, 0x64, 0x00},
//
{0x72, 0x65, 0x00}, //12 //3 back
{0x72, 0x66, 0x00},
{0x72, 0x67, 0x00},
{0x72, 0x68, 0x00},
//
{0x72, 0x69, 0x00}, //13 //4 back
{0x72, 0x6A, 0x00},
{0x72, 0x6B, 0x00},
{0x72, 0x6C, 0x00},
//
{0x72, 0x6D, 0x00}, //14 //5 back
{0x72, 0x6E, 0x00},
{0x72, 0x6F, 0x00},
{0x72, 0x70, 0x00},
//
{0x72, 0x71, 0x00}, //15 //6 back
{0x72, 0x72, 0x00},
{0x72, 0x73, 0x00},
{0x72, 0x74, 0x00},
//
{0x72, 0x75, 0x00}, //16 //7 back
{0x72, 0x76, 0x00},
{0x72, 0x77, 0x00},
{0x72, 0x78, 0x00},
//
{0x72, 0x79, 0x00}, //17 //8 back
{0x72, 0x7a, 0x00},
{0x72, 0x7b, 0x00},
{0x72, 0x7C, 0x00},
//
{0x72, 0x7D, 0x00}, //18 //9 back
{0x72, 0x7E, 0x00},
{0x72, 0x7F, 0x00},
{0x72, 0x80, 0x00},
//
{0x72, 0x81, 0x00}, //19 //A back
{0x72, 0x82, 0x00},
{0x72, 0x83, 0x00},
{0x72, 0x84, 0x00},

{0x72, 0x85, 0x00}, //1A //B back
{0x72, 0x86, 0x00},
{0x72, 0x87, 0x00},
{0x72, 0x88, 0x00},

{0x72, 0x89, 0x00}, //1B //C back
{0x72, 0x8A, 0x00},
{0x72, 0x8B, 0x00},
{0x72, 0x8C, 0x00},

{0x72, 0x8D, 0x00}, //1C
{0x72, 0x8E, 0x00},
{0x72, 0x8F, 0x00},
{0x72, 0x90, 0x00},

{0x72, 0x91, 0x00}, //1D
{0x72, 0x92, 0x00},
{0x72, 0x93, 0x00},
{0x72, 0x94, 0x00},

{0x72, 0x95, 0x00},
{0x72, 0x96, 0x00},

//ARS addr Setting Start
{0x72, 0x97, 0x00},
{0x72, 0x98, 0x00},
{0x72, 0x99, 0x00},
{0x72, 0x9A, 0x00},
{0x72, 0x9B, 0x00},
{0x72, 0x9C, 0x00},
{0x72, 0x9D, 0x00},
{0x72, 0x9E, 0x00},
{0x72, 0x9F, 0x00},
{0x72, 0xA0, 0x00},
{0x72, 0xA1, 0x00},
{0x72, 0xA2, 0x00},

//ARS State Setting Start
{0x72, 0xA3, 0x00},
{0x72, 0xA4, 0x00},
{0x72, 0xA5, 0x00},

{0x72, 0x10, 0x00}, //0x85
#endif

////////////////////////////////////////////
///           73 Page Auto Y offset      ///
////////////////////////////////////////////

//00 Version_End_2f
//01 Version_End_30
#if 0
{0x72, PAGEMODE, 0x73}, //AE y offset set
{0x73, 0x10, 0x00}, //07
{0x73, 0x11, 0x76}, //0x16->0x76(Preview2)
{0x73, 0x13, 0xFF},
{0x73, 0x14, 0x19},
{0x73, 0x15, 0x02}, //0x04->0x02
{0x73, 0x16, 0x22},
{0x73, 0x17, 0x10},
{0x73, 0x18, 0x10},

{0x73, 0x23, 0x02}, //Pofs_cnt_min //0x01EB(1%)->0x03D7(2%)
{0x73, 0x24, 0xD7},
{0x73, 0x25, 0x13}, //Pofs_cnt_max //0x0997(5%)->0x1333(10%)
{0x73, 0x26, 0x33},
{0x73, 0x27, 0x08}, //Pofs max //0x10->0x0A

{0x73, 0x28, 0x03}, //Mofs_cnt_min //0x3d6(2%)
{0x73, 0x29, 0xd6},
{0x73, 0x2a, 0x18}, //Mofs_cnt_max //0x13CC(10.3%)->13%
{0x73, 0x2b, 0xf5},
{0x73, 0x2c, 0x03}, //Mofs max
{0x73, 0x2d, 0x01}, //Sat min //0x01EB(1%)
{0x73, 0x2e, 0xeb},
{0x73, 0x2f, 0x13}, //Sat max //0x0997(5%)->0x1333(10%)
{0x73, 0x30, 0x33},
#endif

////////////////////////////////////////////
///           80 Page CMC                ///
////////////////////////////////////////////
#if 0
{0x73, PAGEMODE, 0x80},
{0x80, 0x10, 0x00},

{0x80, 0x6b, 0x00},
{0x80, 0x6c, 0x00},
{0x80, 0x6d, 0x00},
{0x80, 0x6e, 0x00},
{0x80, 0x6f, 0x00},
#endif

////////////////////////////////////////////
///           81 Page                    ///
////////////////////////////////////////////
#if 0
{0x80, PAGEMODE, 0x81}, //color saturation
{0x81, 0x10, 0xcb}, //cb
{0x81, 0x11, 0x00}, //00

{0x81, 0x12, 0xa0}, //60 //a0
{0x81, 0x13, 0xf8}, //e0 //f8

{0x81, 0x14, 0x90}, //78
{0x81, 0x15, 0x8d}, //74

{0x81, 0x16, 0x4e}, //50
{0x81, 0x17, 0x3a}, //38

{0x81, 0x19, 0x33}, //upos 3f->44//outdoor
{0x81, 0x1a, 0x32}, //uneg 44->42
{0x81, 0x1b, 0x46}, //vpos 3f->4a->48
{0x81, 0x1c, 0x40}, //vneg 3f->44

{0x81, 0x1d, 0x40},//42 upos //indoor //CWF A~ H
{0x81, 0x1e, 0x3f},//3f uneg
{0x81, 0x1f, 0x5a},//56 vpos
{0x81, 0x20, 0x4b},//4b vneg

{0x81, 0x21, 0x40},//upos //dark
{0x81, 0x22, 0x38},//uneg
{0x81, 0x23, 0x40},//vpos
{0x81, 0x24, 0x38},//vneg

{0x81, 0x25, 0x52}, //4a //4a upos //_High-Temp //D65
{0x81, 0x26, 0x4a}, //3f //3f uneg
{0x81, 0x27, 0x4c}, //4a //52 vpos
{0x81, 0x28, 0x54}, //50 //50 vneg
#endif


////////////////////////////////////////////
///           82 Page Gamma              ///
////////////////////////////////////////////
#if 0
{0x81, PAGEMODE, 0x82},
{0x82, 0x10, 0x00},

{0x82, PAGEMODE, WINDOW_PAGE},
#endif
#if 0
{WINDOW_PAGE, PWRCTL, 0xf0}, //(Sleep Mode off)
#endif
// ===============================================//
// 29	preview  //                                //
// ===============================================//
#if 0
{WINDOW_PAGE, PAGEMODE, AUTOFOCUS_PAGE},
{AUTOFOCUS_PAGE, 0x15, 0x00},//flag hold off

{AUTOFOCUS_PAGE, PAGEMODE, 0x50},
{0x50, 0x10, 0x02},
{0x50, 0x0a, 0x05}, //50ms

{0x50, 0x01, 0xf1},
#endif
////////////////////////
// Preview Code Start //
////////////////////////
#if 1 // required - mangled image otherwise
{0x50, PAGEMODE, WINDOW_PAGE},
{WINDOW_PAGE, VDOCTL1, 0x13}, //Pre2
{WINDOW_PAGE, WINROWH, 0x00}, //WINROW
{WINDOW_PAGE, WINROWL, 0x00}, //02=>00_YC2D Stting
{WINDOW_PAGE, WINCOLH, 0x00}, //WINCOL
{WINDOW_PAGE, WINCOLL, 0x02},
{WINDOW_PAGE, HBLANKH, 0x03}, //HBLANK 1line 2000
{WINDOW_PAGE, HBLANKL, 0xb8},
{WINDOW_PAGE, 0x83, 0x30}, //BLC Hold
#endif
// DLPF OFF
#if 0
{WINDOW_PAGE, PAGEMODE, NOISE1_PAGE},
{NOISE1_PAGE, DLPFCTL, 0x00}, // lensd_lpf OFF
{NOISE1_PAGE, PAGEMODE, DEBLUR_PAGE},
{DEBLUR_PAGE, 0x40, 0x00}, // abberation OFF
{DEBLUR_PAGE, GLPFCTL2, 0x00}, // lensd_lpf OFF
{DEBLUR_PAGE, LDCTL, 0x00}, // bayer_d OFF
{DEBLUR_PAGE, 0xe3, 0x01},

// YC2D OFF //
{DEBLUR_PAGE, PAGEMODE, FORMAT_PAGE},
{FORMAT_PAGE, 0xe8, 0x5f}, //20 mem(yc2d) OFF
{FORMAT_PAGE, PAGEMODE, NOISE2_PAGE},
{NOISE2_PAGE, YCLPFCTL1, 0x17}, //00 y-lpf OFF
{NOISE2_PAGE, YCLPFCTL2, 0x1f}, //00 c-lpf OFF
{NOISE2_PAGE, PAGEMODE, EDGE_PAGE},
{EDGE_PAGE, EDGE2DCTL1, 0x41}, //00 sharp2d OFF

{EDGE_PAGE, PAGEMODE, AUTOWB_PAGE},
{AUTOWB_PAGE, 0x20, 0x34},
#endif
////////////////////////
// Preview Code End   //
////////////////////////

//Scailer
#if 0
{AUTOWB_PAGE, PAGEMODE, SCALING_PAGE},
{SCALING_PAGE, ZOOMCTL1, 0x00},

{SCALING_PAGE, PAGEMODE, 0x70},
{0x70, 0x10, 0x09}, //AE reset
{0x70, PAGEMODE, AUTOWB_PAGE},
{AUTOWB_PAGE, AWBCTL1, 0xeb}, //AWB ON

{AUTOWB_PAGE, 0x0a, 0x0d}, //DELAY 130

{AUTOWB_PAGE, PAGEMODE, 0x70},
{0x70, 0xad, 0x3f},
{0x70, 0xae, 0x80},
{0x70, 0xaf, 0x00},
{0x70, 0xb0, 0x00},
{0x70, 0x10, 0xe8}, // AE on

{0x70, 0x01, 0xf0},
#endif
};


///////////////
static char sr300pc100_1024x768[][2] =
{
{PWRCTL, 0xf1}, //SW Reset 1->3->1 (Sleep Mode)
{PWRCTL, 0xf3},
{PWRCTL, 0xf1},

{PAGEMODE, AUTOEXP_PAGE}, //page 20
{AECTL1, 0x0c}, //ae off
{PAGEMODE, AUTOWB_PAGE}, //page 22
{AWBCTL1, 0x69}, //awb off

////////////////////////////////////////////
///           MCU initialize             ///
////////////////////////////////////////////
{PAGEMODE, MCU_PAGE}, //MCU ON (Sleep Mode)
{MCUCTL, 0x89},
{SBUSMEMCTL, 0x01},
{SBUSMEMADDRH, 0x80},
{SBUSMEMADDRL, 0x01},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x80},
{SBUSMEMADDRL, 0x02},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x26},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x81},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x82},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x83},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x84},
{SBUSMEMDIN, 0x00},

{SBUSMEMADDRH, 0x84},
{SBUSMEMADDRL, 0x85},
{SBUSMEMDIN, 0x00},

{SBUSMEMCTL, 0x00},
{MCUCTL, 0x09},

////////////////////////////////////////////
///           Power Control              ///
////////////////////////////////////////////
{PAGEMODE, FORMAT_PAGE},
{0xe0, 0x00},
{0xe1, 0x00},
{0xe2, 0x00},
{0xe3, 0x00},
{0xe4, 0x00},
{0xe5, 0x00},
{0xe6, 0x30},
{0xe7, 0x00},
{0xe8, 0x00},

{0xea, 0x00},
{0xeb, 0x00},
{0xec, 0x00},
{0xed, 0x00},
{0xf0, 0x40},
{0xf2, 0x00},
{0xf3, 0x00},
{0xf8, 0xa8},
{0xf9, 0xb0},

{PAGEMODE, AUTOEXP_PAGE},
{0x1a, 0x24},
{0x1b, 0x00},

////////////////////////////////////////////
///           PAGE 0 CTL0                ///
////////////////////////////////////////////
{PAGEMODE, WINDOW_PAGE},
{VDOCTL1, 0x00},
{VDOCTL2, 0x90},
{SYNCCTL, 0x00}, //00
{0x13, 0x00}, //80->00

{WINROWH, 0x00}, //WINROW
{WINROWL, 0x0a},
{WINCOLH, 0x00}, //WINCOL
{WINCOLL, 0x0c},

{0x32, 0x06},
{0x33, 0x30},
{0x34, 0x06},
{0x35, 0x30},

//Hblank
{HBLANKH, 0x01}, // 1line 2400
{HBLANKL, 0x38}, //
//Vsync Pre2 50line
{VSYNCH, 0x00},
{VSYNCL, 0x32}, //50

//BLC_10_04_07
{BLCCTL, 0x08},
{0x81, 0x97}, //9f->97 _0407
{0x82, 0x90},
{0x83, 0x30},
{0x84, 0xFE}, //0c->cc->ce _0407
{0x85, 0x00},
{0x86, 0xF4}, //94->d4 _0407
{0x87, 0x80},
{BLCTIMETHON, 0x0c}, //0f->0d(8.33fps)
{BLCTIMETHOFF, 0x0c}, //0f->0d(8.33fps)
{0x96, 0xe8},
{0x97, 0xf0},
{0x98, 0x38},

//Outdoor
{0x99, 0x43}, //20100315 43->41
{0x9a, 0x43}, //41
{0x9b, 0x43}, //41
{0x9c, 0x43}, //41

//Dark
{BLCOFSDB, 0x00},
{BLCOFSDGB, 0x00},
{BLCOFSDR, 0x00},
{BLCOFSDGR, 0x00},

//Normal
{0xa8, 0x42}, //00
{0xaa, 0x42}, //00
{0xac, 0x42}, //00
{0xae, 0x42}, //00

{0xB0, 0x00},
{0xB2, 0x00},
{0xB4, 0x00},
{0xB6, 0x00},

////////////////////////////////////////////
///           PAGE 2 Analog_10_05_04     ///
////////////////////////////////////////////
{PAGEMODE, UNDOC_0x02_PAGE},

{0x10, 0x00},
{0x12, 0x7F},
{0x13, 0x00},
{0x18, 0x1C},
{0x19, 0x00},
{0x1A, 0x39}, //09->39 _10_04_07
{0x1B, 0x00},
{0x16, 0x00},
{0x17, 0x00},

{0x1F, 0x10}, //00->10 _10_04_07
{0x20, 0x77},
{0x21, 0xed}, //aa->ed_0504
{0x22, 0xA7},
{0x23, 0x30}, //sky f2->b2->b0
{0x25, 0x10}, //�߰�
{0x27, 0x34},
{0x2B, 0x84},
{0x2E, 0x11},
{0x2F, 0xA1},
{0x30, 0x00},
{0x31, 0x99},
{0x32, 0x00},
{0x33, 0x00},
{0x34, 0x22},
{0x35, 0x01}, //00->01 _10_04_07
{0x36, 0x01},
{0x37, 0x01},
{0x3D, 0x03},
{0x3e, 0x0d},
{0x49, 0xD1}, //00->d1 _10_04_07
{0x50, 0x28}, //21->28 _10_04_07
{0x52, 0x03},
{0x53, 0x81}, //80->81 _10_04_07
{0x54, 0x3C},
{0x55, 0x1C},
{0x56, 0x11},
{0x5d, 0xa2}, //aa->a2 _10_04_07
{0x5E, 0x55},
{0x60, 0x8d},
{0x61, 0x9b},
{0x62, 0x8e},
{0x63, 0x99},
{0x64, 0x8e},
{0x65, 0x99},
{0x67, 0x0c},
{0x68, 0x0c},
{0x69, 0x0c},

{0x72, 0x8e},
{0x73, 0x98},
{0x74, 0x8e},
{0x75, 0x98},

{0x76, 0xa6},
{0x77, 0xb6},
{0x7C, 0xa0},
{0x7d, 0xd0}, // 20010308 �߰�


{0x80, 0x01},
{0x81, 0x82},
{0x82, 0x1e},
{0x83, 0x30},
{0x84, 0x80},
{0x85, 0x83},
{0x86, 0x80},
{0x87, 0x83},


{0x92, 0x4e},
{0x93, 0x60},
{0x94, 0x80},
{0x95, 0x83},
{0x96, 0x80},
{0x97, 0x83},

{0xa0, 0x02},
{0xa1, 0x7d},
{0xa2, 0x02},
{0xa3, 0x7d},
{0xa5, 0x02},
{0xa4, 0x7d},
{0xa6, 0x7d},
{0xa7, 0x02},
{0xa8, 0x8d},
{0xa9, 0x93},
{0xaa, 0x8d},
{0xab, 0x93},
{0xac, 0x1b},
{0xad, 0x22},
{0xae, 0x1b},
{0xaf, 0x22},

{0xb0, 0xa0},
{0xb1, 0xaa}, // 20010426 ����
{0xb4, 0xa1},
{0xb5, 0xa8},
{0xb8, 0xa2},
{0xb9, 0xa7},
{0xbc, 0xa2},
{0xbd, 0xa6},
{0xb2, 0xa0},
{0xb3, 0xaa},// 20010426 ����
{0xb6, 0xa1},
{0xb7, 0xa8},
{0xba, 0xa2},
{0xbb, 0xa7},
{0xbe, 0xa2},
{0xbf, 0xa6},

{0xc4, 0x32},
{0xc5, 0x49},
{0xc6, 0x63},
{0xc7, 0x7a},
{0xc8, 0x33},
{0xc9, 0x48},
{0xca, 0x33},
{0xcb, 0x48},
{0xcc, 0x64},
{0xcd, 0x79},
{0xce, 0x64},
{0xcf, 0x79},
{0xea, 0x82}, //_2010_04_26

{0xeb, 0x02}, //_2010_04_07
{0xef, 0x02}, //_2010_04_07

////////////////////////////////////////////
///     PAGE 2 M_DCDC_CTL_2010_04_07     ///
////////////////////////////////////////////
{PAGEMODE, UNDOC_0x02_PAGE},
{0x1c, 0x3c},//1.3M Base
{0x1d, 0x01},
{0x1e, 0x30},

{0xd0, 0x0a},//091202 dcdc
{0xd1, 0x09},//091202 dcdc
{0xd2, 0x20},//091202 dcdc
{0xd3, 0x00},//091202 dcdc
{0xd4, 0x0c},//0f(60hz)->0c(50hz)//091202 dcdc
{0xd5, 0x0c},//0f(60hz)->0c(50hz)//091202 dcdc
{0xd6, 0x56}, //_2010_04_07
{0xd7, 0x50}, //_2010_04_07

{0xe0, 0xe1},//091202 dcdc
{0xe1, 0xe1},//091202 dcdc
{0xe2, 0xe1},//091202 dcdc
{0xe3, 0xe1},//091202 dcdc
{0xe4, 0xe1},//091202 dcdc
{0xe5, 0x01},//091202 dcdc

////////////////////////////////////////////
///           PAGE 10 ISP-CTL1           ///
////////////////////////////////////////////
{PAGEMODE, FORMAT_PAGE},
{ISPCTL1, 0x05}, //YUV422_YUYV: 0x03, ITU656: 0x07 (jhkim:MOD)
{ISPCTL2, 0x03},
{ISPCTL3, 0xc0},
{ISPCTL4, 0x0a},

{ITUCTL, 0x15}, // ITU656: 0x04 (jhkim:ADD)

{ITUSOF, 0x80}, // ITU656: SOF : SAV Blank (jhkim:ADD)
{ITUSOL, 0x80}, // ITU656: SOL : EAV Field (jhkim:ADD)
{ITUEOF, 0xb6}, // ITU656: EOF : EAV Blank (jhkim:ADD)
{ITUEOL, 0x9d}, // ITU656: EOL : EAV Field (jhkim:ADD)

{CONTRAST, 0x84}, //contrast 88->84

//Saturation
{SATCTL, 0x83},
{SATB, 0x1a}, //0x1b -> 0x1C
{SATR, 0x80},
{0x63, 0x70},
{AGSAT, 0xff},

//Out Sat option
{SATTIMETH, 0xf7}, //ff->f7
{SATOUTDEL, 0x33}, //24->33

//Saturation_UV
{UPOSSAT, 0x44},//upos
{UNEGSAT, 0x3f},//uneg
{VPOSSAT, 0x54},//vpos
{VNEGSAT, 0x48},//vneg

//-----------------------
// White Protection
//-----------------------
{0x80, 0x14},
{0x81, 0x08},
{0x82, 0x08},
{0x83, 0x54},
{0x84, 0x1C},
{0x85, 0x08},
{0x86, 0x08},
{0x87, 0x38},
{0x88, 0x18}, //
{0x89, 0x18}, //
{0x8A, 0x18}, //
{0x8B, 0x18}, //

{0xf0, 0x40}, //2010_04_09

////////////////////////////////////////////
///           PAGE 11 1D-LPF             ///
////////////////////////////////////////////
{PAGEMODE, NOISE1_PAGE},

{DLPFCTL, 0x0f},
{DLPFOPT1, 0x0F},
{DLPFOPT2, 0x0f}, // Blue Reducing Edge
{DLPFOPT3, 0x00}, // Green Increase Edge  //0x08 -> 0x00
{DLPFOPT4, 0x03}, // Dark PS-Color Reduce.. But Resolution Down
{EDGEMASK1, 0x0F}, //
{EDGEMASK2, 0x0F}, //
{EDGEMASK3, 0x0F}, //
{HVRAT1OUT, 0x22}, // 24 5Line Outdoor
{HVRAT2OUT, 0x11}, // 12 3Line Outdoor
{HVRAT1IN, 0x1C}, // 24 5Line Indoor //30
{HVRAT2IN, 0x0E}, // 12 3Line Indoor
{HVRAT1DAK, 0x3C}, // 24 5Line Dark
{HVRAT2DAK, 0x22}, // 12 3Line Dark
{DLPFOPT5, 0x04}, // 3 Line Filt Sel
{DLPFOPT6, 0x04}, // 5 Line Filt Sel

{DLPFOPT7, 0x00}, //Dark_lpf_sel <- �߰�
{DLPFOPT8, 0x00}, //R1_lpf_sel <- �߰�
{DLPFOPT9, 0x10}, //R2_lpf_sel <- �߰�
{DLPFOPT11, 0x00}, // STD LPF Indoor -> 0x04 (GGGXXX)

{OUTRAT, 0x20},  //Hig 091029_dsshin

{OUTTHH, 0x60},  //60->48 Hig 150code~ high
{OUTTHM, 0x2A},  //38->23 Mi 100~150code middle
{OUTTHL, 0x55},  //23->48 LO 50~100code middlelow
{DAKREGOUT, 0x44},  //DAR 20~50code low, 0~20code dark


//----- R2 Region --------
{OUTOFSHR2, 0x60}, //gggxxx High OFFSET
{OUTOFSMR2, 0x70}, //gggxxx Mid OFST
{OUTOFSMLR2, 0x7F}, //gggxxx ML OFST //03->06
{OUTOFSLR2, 0x8F}, //gggxxx LO OFST //01->02
{OUTOFSLO, 0xF0}, //gggxxx DARK OFFSET

{OUTSTDHR2, 0x1A}, //gggxxx High Gain (0xB8)
{OUTSTDMR2, 0x1C}, //gggxxx Mi Gain   (0xBC) c6->ce
{OUTSTDMLR2, 0x2A}, //gggxxx ML Gain   (0xBF)->d0
{OUTSTDLR2, 0x18}, //gggxxx LO Gain // e4
{OUTSTDLO, 0x50}, //gggxxx DARK Gain

{OUTCLIPHR2, 0xE0}, //gggxxx Hig Clip
{OUTCLIPMR2, 0xF8}, //gggxxx Mid Clip
{OUTCLIPMLR2, 0xF0}, //gggxxx ML  Clip
{OUTCLIPLR2, 0xE0}, //gggxxx LO Clip
{OUTCLIPLO, 0xF8}, //gggxxx DARK Clip

//----- R1 Region --------
{OUTOFSHR1, 0x60}, //gggxxx High OFFSET
{OUTOFSMR1, 0x70}, //gggxxx Mid OFST
{OUTOFSMLR1, 0x80}, //gggxxx ML OFST
{OUTOFSLR1, 0x90}, //gggxxx LO OFST

{OUTSTDHR1, 0x1A}, //gggxxx High Gain (0xC8)
{OUTSTDMR1, 0x1C}, //gggxxx Mi Gain   (0xE0)
{OUTSTDMLR1, 0x22}, //gggxxx ML Gain   (0xE0)
{OUTSTDLR1, 0x30}, //gggxxx LO Gain   (0xC4)

{OUTCLIPHR1, 0xE0}, // Hig Clip   (0xC0)
{OUTCLIPMR1, 0xF8}, // Mid Clip   (0xC0)
{OUTCLIPMLR1, 0xF0}, // ML  Clip   (0xC0)
{OUTCLIPLR1, 0xFF}, // LO Clip    (0xC0)

//---- Edge Line Gain Control
{OUTEDGEH, 0x06},  //
{OUTEDGEM, 0x04},  //
{OUTEDGEML, 0x02},  //
{OUTEDGEL, 0x08},  //

//----- Color Option
{OUTCOLH, 0xD8}, //gggxxx C0
{OUTCOLM, 0xD0}, //gggxxx C0
{OUTCOLML, 0xC8}, //gggxxx C0
{OUTCOLL, 0xC0}, //gggxxx C0
{OUTOFSLIMH, 0xF0}, //gggxxx (0x00)
{OUTOFSLIMM, 0xE8}, //gggxxx (0x00)
{OUTOFSLIMML, 0xE0}, //gggxxx (0x00)
{OUTOFSLIML, 0xE0}, //gggxxx (0x00)
//---- DPC Marker
{OUTDPCTH, 0xC0},
{OUTDPCSTD, 0xF0},

{INRAT, 0x20},  // NR Rate 0x20 Default 6bit (Indoor) <- �߰�
{INTHH_SR300PC10, 0x4a},  //70 Hig 150code~
{INTHM_SR300PC10, 0x21},  //Mi 100~150code
{INTHL_SR300PC10, 0x51},  //LO 50~100code
{DAKREGIN, 0x3d},  //DAR 20~50code

//------------ Indoor Setting ------------
{INOFSLO, 0x32},  // 24 DARK OFFSET
{INSTDLO, 0x42},  // E0 DARK Gain
{INCLIPLO, 0xff},  // F0 DARK Limit

//----- R2 Region --------
{INOFSHR2, 0x08}, //10 High OFFSET
{INOFSMR2, 0x10}, //0C Mid OFST
{INOFSMLR2, 0x18}, //09 ML OFST
{INOFSLR2, 0x20}, //07 LO OFST

{INSTDHR2, 0x2E}, // 5E High Gain (0xB8)
{INSTDMR2, 0x2F}, // 5F Mi Gain   (0xBC)
{INSTDMLR2, 0x30}, // 60 ML Gain   (0xBF)
{INSTDLR2, 0x38}, // 58 LO Gain

{INCLIPHR2, 0xB0}, // Hig Clip Recovery A0->F0->A0
{INCLIPMR2, 0xB8}, // Mid Clip
{INCLIPMLR2, 0xC4}, // ML  Clip
{INCLIPLR2, 0xEC}, // LO Clip

//----- R1 Region --------
{INOFSHR1, 0x10}, // High OFFSET
{INOFSMR1, 0x14}, // Mid OFST
{INOFSMLR1, 0x18}, // ML OFST
{INOFSLR1, 0x1E}, // LO OFST

{INSTDHR1, 0x1E}, //5E High Gain (0xC8)
{INSTDMR1, 0x1F}, //5F Mi Gain   (0xE0)
{INSTDMLR1, 0x24}, //64 ML Gain   (0xE0)
{INSTDLR1, 0x28}, //68 LO Gain   (0xC4)

{INCLIPHR1, 0xB2}, // Hig Clip   (0xC0)
{INCLIPMR1, 0xB7}, // Mid Clip   (0xC0)
{INCLIPMLR1, 0xBE}, // ML  Clip   (0xC0)
{INCLIPLR1, 0xCC}, // LO Clip    (0xC0)

//---- Edge Line Gain Control (4bit )
{INEDGEH, 0x08},  //
{INEDGEM, 0x08},  //
{INEDGEML, 0x08},  //
{INEDGEL, 0x08},  //

//----- Color Option
{INCOLH, 0xF8}, //C0
{INCOLM, 0xF0}, //C0
{INCOLML, 0xE8}, //C0
{INCOLL, 0xE0}, //C0
{INOFSLIMH, 0xf8}, //
{INOFSLIMM, 0xf8}, //
{INOFSLIMML, 0xf8}, //
{INOFSLIML, 0xf8}, //
//---- DPC Marker
{INDPCTH, 0xC0},
{INDPCSTD, 0xF0},

//--------------Dark1 setting-------------------
{DAK1THH, 0x84}, //lum hi
{DAK1THM, 0x2a}, //lum mi
{DAK1THL, 0x60}, //lum lo

{DAK1OFSLO, 0xff}, //offset_dark
{DAK1STDLO, 0x00}, //gain_dark
{DAK1CLIPLO, 0xff}, //clip dark

{DAK1OFSHR2, 0xff}, //07 High OFFSET
{DAK1OFSMR2, 0xff}, //05 Mid OFST
{DAK1OFSMLR2, 0xff}, // ML OFST
{DAK1OFSLR2, 0xff}, // LO OFST

{DAK1STDHR2, 0x00}, //c0 High GAIN
{DAK1STDMR2, 0x00}, //d0 Mid GAIN
{DAK1STDMLR2, 0x00}, // ML GAIN
{DAK1STDLR2, 0x00}, // LO GAIN

{DAK1CLIPHR2, 0xff}, // High CLIP
{DAK1CLIPMR2, 0xff}, // Mid CLIP
{DAK1CLIPMLR2, 0xff}, // ML CLIP
{DAK1CLIPLR2, 0xff}, // LO CLIP
//------------------------------------

//--------------Dark23 setting-------------------
{DAK23THH, 0x84}, //lum hi
{DAK23THM, 0x2a}, //lum mi
{DAK23THL, 0x60}, //lum lo

{DAK23OFSLO, 0xff}, //offset_dark
{DAK23STDLO, 0x00}, //gain_dark
{DAK23CLIPLO, 0xff}, //clip dark

{DAK23OFSHR2, 0xff}, //07 High OFFSET
{DAK23OFSMR2, 0xff}, //05 Mid OFST
{DAK23OFSMLR2, 0xff}, // ML OFST
{DAK23OFSLR2, 0xff}, // LO OFST

{DAK23STDHR2, 0x00}, //c0 High GAIN
{DAK23STDMR2, 0x00}, //d0 Mid GAIN
{DAK23STDMLR2, 0x00}, // ML GAIN
{DAK23STDLR2, 0x00}, // LO GAIN

{DAK23CLIPHR2, 0xff}, // High CLIP
{DAK23CLIPMR2, 0xff}, // Mid CLIP
{DAK23CLIPMLR2, 0xff}, // ML CLIP
{DAK23CLIPLR2, 0xff}, // LO CLIP
//------------------------------------

{DAK1DPCTH, 0xe0},
{DAK1DPCSTD, 0xf0},
{DAK23DPCTH, 0xe0},
{DAK23DPCSTD, 0xf0},

{LPFOUTTHL_SR300PC10, 0x80}, //out2 th
{LPFOUTTHH_SR300PC10, 0x78}, //256fps

////////////////////////////////////////////
///           PAGE 12 DPC                ///
////////////////////////////////////////////
//DPC-Dark1,2,3
{PAGEMODE, DEBLUR_PAGE},
{0x12, 0x3f}, //00->0f _2010_04_07  //gggxxx 0F -> 0x3F
{0x20, 0x32}, //00->32 _2010_04_07

{0x25, 0x07},
{0x26, 0x07},
{0x27, 0x07},

{0x3e, 0x03},   // Dark DPC

{GLPFTHOUT, 0x44},  // GBGR Drange
{GLPFTHIN, 0x44},  // GBGR Drange Indoor
{0x54, 0x00},  // GBGR Filt Select
{GLPFCTL2, 0x03},  // GbGr Sub   (0x00)

// sky
{0x68, 0x78},
{0x69, 0x78},
{0x6c, 0x40},
{0x6f, 0x80},

{LDCTL, 0x0C}, //20100304 0f->00

{LDBCENOUT, 0x54}, // Center G Gain    60 => 0x54
{LDBLOUT, 0xA2}, //gggxxx Center G
{LDBROUT, 0x24}, //gggxxx Center G
{LDBOFSOUT, 0x1A}, //gggxxx Center G   2C => 0x1A

{LDCCENOUT, 0x60}, // Coring Graph
{LDCLOUT, 0x04}, // Coring
{LDCROUT, 0xC0}, // Coring
{LDCOFSOUT, 0x08}, // Coring offset

{LDRATOUT, 0xCF},  // Gain x1
{LDHLMTOUT, 0x0E},  // Pos Limit  //gggxxx 0x18 -> 0x0E
{LDLLMTOUT, 0x0C},  // Neg Limit  //gggxxx 0x1D -> 0x0C
//------------- Indoor ---------------
{LDBCENIND, 0x60}, // Center G Gain
{LDBLIND, 0xA2}, // Center G
{LDBRIND, 0x28}, // Center G
{LDBOFSIND, 0x1C}, // Center G
//
{LDCCENIND, 0x60}, // Coring Graph
{LDCLIND, 0x04}, // Coring 88->08
{LDCRIND, 0xC0}, // Coring 22->b2
{LDCOFSIND, 0x04},
//
{LDRATIN, 0xCC},  // Gain x1
{LDHLMTIN, 0x0E},  // Pos Limit
{LDLLMTIN, 0x0C},  // Neg Limit
//
{LDTERMOPT, 0xEA},  // Reducing Mask

{LDEDCENOUT, 0x60},
{LDEDLOUT, 0xB0},
{LDEDROUT, 0x88},
{LDEDOFSOUT, 0x10},
{LDEDRATOUT, 0x04},

//--------- Indoor Edge Graph ---------
{LDEDCENIN, 0x40}, //0x60
{LDEDLIN, 0xA0}, //0xB0
{LDEDRIN, 0x7C}, //0x88
{LDEDOFSIN, 0x1A}, //0x10
{LDEDRATIN, 0x0C}, //0x04

{0xe1, 0x58},   ////////////////////// sung
{0xe9, 0x04},   //
{0xeb, 0x07},   // h/v sum              //gggxxx 0x07 -> 0x0F -> 0x03 moire
{0xee, 0x0C},   // cilpf enable
{0xEF, 0x01}, //00  // cilpf outdoor_th
{0xF0, 0x02}, //00  //  "
{0xF1, 0x04}, //00  //  "
{0xF2, 0x02},   // cilpf indoor_th
{0xF3, 0x04},   //  "
{0xF4, 0x07},   //  "
{0xFB, 0x22}, //22 // Lum Code [7:4]

////////////////////////////////////////////
///           PAGE 13 2D-LPF             ///
////////////////////////////////////////////
{PAGEMODE, NOISE2_PAGE},
{YCLPFCTL1, 0x17},
{YCLPFCTL2, 0x1f}, //0f->1f
{YCLPFCTL3, 0x01},
{YCPRWTH, 0x08},
{YCUNI1THOUT, 0x20},
{YCUNI1THIN, 0x10},
{YCUNI1THDAK, 0x18},
{YCUNI2TH_SR300PC10, 0x30},
{YCUNI3TH_SR300PC10, 0x40},
{YCNOR1TH_SR300PC10, 0x50},
{YCNOR2TH_SR300PC10, 0x60},
{YCNOR3TH_SR300PC10, 0x80},

{YCOUTTHH, 0xa0}, //OUTDOOR1/2
{YCOUTTHL, 0x60},
{YCOUTSTDH, 0x01}, //hi
{YCOUTSTDM, 0x01}, //mi
{YCOUTSTDL, 0x01}, //lo
{YCOUTRAT, 0x70}, //ratio

{YCINTHH_SR300PC10, 0xa0}, //INDOOR
{YCINTHL_SR300PC10, 0x30},
{YCINSTDH_SR300PC10, 0x18}, //hi
{YCINSTDM_SR300PC10, 0x10}, //mi
{YCINSTDL_SR300PC10, 0x08}, //lo 20100304 80->60
{YCINRAT_SR300PC10, 0x70}, //ratio

{YCDARK1THH_SR300PC10, 0xa0}, //DARK1
{YCDARK1THL_SR300PC10, 0x30},
{YCDARK1STDH_SR300PC10, 0xc0}, //hi
{YCDARK1STDM_SR300PC10, 0xc0}, //mi
{YCDARK1STDL_SR300PC10, 0xc0}, //lo 20100304 80->60
{YCDARK1RAT_SR300PC10, 0x80}, //ratio

{0x74, 0xA0},
{0x75, 0x60},
{0x76, 0x40},

{0x81, 0xf0},
{0x83, 0x04}, //YAWM th outdoor
{0x85, 0x01},
{0x8b, 0x24}, //YAWM th indoor
{0x8d, 0x01},

{0xa0, 0xff}, //Extended
{0xa1, 0x3f}, // filter Change outdoor
{0xa2, 0x3f}, //  "            indoor
{0xa5, 0x9f}, //Unsharp outdoor
{0xa6, 0x00}, //  "     indoor 20100310 ff->00
{0xa7, 0x00}, //  "     dark1
{0xa8, 0x00}, //  "     dark2/3
{0xa9, 0x22},
{0xaa, 0x63},

{0xad, 0x0f}, //Color Detect
{0xae, 0x0f},

{0xc0, 0x0a},
{0xc1, 0x0e},
{0xc2, 0x09},
{0xd0, 0x08},


////////////////////////////////////////////
///           PAGE 14 Sharp              ///
////////////////////////////////////////////
{PAGEMODE, EDGE_PAGE},
{EDGECTL1, 0x8f},//20100304 8f->00
{EDGECTL3, 0x30},
{EDGENGAIN, 0x07},
{EDGEPGAIN, 0x03},
{EDGELCLIPTH, 0x08},

{0x2D, 0x01},


{0x50, 0x01},//neg_h//sharp1d slope outdoor
{0x51, 0x01},//neg_m
{0x52, 0x01},//meg_l
{0x53, 0x01},//pos_h
{0x54, 0x01},//pos_m
{0x55, 0x01},//pos_l

{0x5c, 0x01},//neg_h//sharp1d slope indoor
{0x5d, 0x01},//neg_m
{0x5e, 0x01},//neg_l
{0x5f, 0x01},//pos_h
{0x60, 0x01},//pos_m
{0x61, 0x01},//pos_l

{0x62, 0x02},//neg_h//sharp1d slope dark1
{0x63, 0x04},//neg_m
{0x64, 0x03},//neg_l
{0x65, 0x02},//pos_h
{0x66, 0x04},//pos_m
{0x67, 0x03},//pos_l

{0x68, 0x01},//neg_h//sharp1d slope dark2/3
{0x69, 0x02},//neg_m
{0x6a, 0x01},//neg_l
{0x6b, 0x01},//pos_h
{0x6c, 0x02},//pos_m
{0x6d, 0x01},//pos_l

{EDGE2DCTL1, 0x41},
{EDGE2DCTL2, 0x05},
{EDGE2DCTL3, 0x00},
{EDGE2DCTL4, 0xf5},//Gus Coef sel

{0x8d, 0x11},//Adt ES sel

{EDGE2DLCOUTH, 0x08},//low-clip Outdoor
{EDGE2DLCOUTM, 0x06},
{EDGE2DLCOUTL, 0x04},
{EDGE2DLCINH, 0x01},//low-clip Indoor
{EDGE2DLCINM, 0x01},
{EDGE2DLCINL, 0x01},
{EDGE2DLCDAK1H, 0x02},//low-clip Dark1
{EDGE2DLCDAK1M, 0x02},
{EDGE2DLCDAK1L, 0x02},
{EDGE2DLCDAK23H, 0x03},//low-clip Dark2/3
{EDGE2DLCDAK23M, 0x03},
{EDGE2DLCDAK23L, 0x05},

{0xac, 0x0e},//neg_h//sharp2d slope Outdoor
{0xad, 0x0f},//neg_m
{0xae, 0x0f},//neg_l
{0xaf, 0x08},//pos_h
{0xb0, 0x0a},//pos_m
{0xb1, 0x0a},//pos_l

{0xb2, 0x0a},//neg_h//sharp2d slope Indoor
{0xb3, 0x0b},//neg_m 9->b
{0xb4, 0x06},//neg_l
{0xb5, 0x08},//pos_h
{0xb6, 0x09},//pos_m 7->9
{0xb7, 0x04},//pos_l

{0xb8, 0x04},//neg_h//sharp2d slope Dark1
{0xb9, 0x02},//neg_m
{0xba, 0x02},//neg_l
{0xbb, 0x02},//pos_h
{0xbc, 0x01},//pos_m
{0xbd, 0x01},//pos_l

{0xbe, 0x04},//neg_h//sharp2d slope Dark2/3
{0xbf, 0x02},//neg_m
{0xc0, 0x02},//neg_l
{0xc1, 0x02},//pos_h
{0xc2, 0x01},//pos_m
{0xc3, 0x01},//pos_l

{0xca, 0x14},// High Clip Outdoor
{0xcb, 0x14},
{0xcc, 0x14},
{0xcd, 0x14},
{0xce, 0x14},
{0xcf, 0x14},

{0xd0, 0x0A},// High Clip Indoor
{0xd1, 0x0B},
{0xd2, 0x08},
{0xd3, 0x09},
{0xd4, 0x0A},
{0xd5, 0x06},

{0xd6, 0x0f},// High Clip Dark1
{0xd7, 0x0f},
{0xd8, 0x0f},
{0xd9, 0x0f},
{0xda, 0x0f},
{0xdb, 0x0f},
{0xdc, 0x0f},// High Clip Dark2/3
{0xdd, 0x0f},
{0xde, 0x0f},
{0xdf, 0x0f},
{0xe0, 0x0f},
{0xe1, 0x0f},

{0xe2, 0x59},//Unsharp
{0xe3, 0x99},
{0xe4, 0x00},
{0xe5, 0x00},

{0xee, 0x88},
{0xf0, 0x99},

////////////////////////////////////////////
///           PAGE 15 Shading            ///
////////////////////////////////////////////
{PAGEMODE, LENS_PAGE},
{LENSCTL1, 0x15},
{LENSRGAIN_SR300PC10, 0x80},
{LENSGGAIN_SR300PC10, 0x80},
{LENSBGAIN_SR300PC10, 0x80},
{0x1c, 0x41}, //0430 �߰�

{XCEN, 0x80}, //XCEN, X for GR
{YCEN, 0x80}, //YCEN, Y for GR
{0x22, 0x80}, //X for GB
{0x23, 0x80}, //Y for GB
{0x24, 0x80}, //X for R 60->50
{0x25, 0x80}, //Y for R 60->75
{0x26, 0x80}, //X for B
{0x27, 0x80}, //Y for B 60->6a

{0x30, 0xc8}, //0xbd
{0x31, 0x30},
{0x32, 0x48}, //{0x32, 0x44},
{0x33, 0x00}, //{0x33, 0x22},
{0x34, 0xa3},
{0x35, 0x18},

{LENSRP0, 0x2e}, //R_2c //Out_120FPS_35
{LENSGrP0, 0x20}, //Gr
{LENSBP0, 0x1d}, //B
{LENSGbP0, 0x20}, //Gb

////////////////////////////////////////////
///           PAGE 17 Gamma              ///
////////////////////////////////////////////
{PAGEMODE, GAMMA_PAGE},
{GMACTL, 0x31},//GMA_CTL
{0x18, 0x7e},//AG_ON
{0x19, 0x7d},//AG_OFF
{0x1A, 0x0e},//TIME_ON
{0x1B, 0x01},//TIME_OFF
{0x1C, 0xdc},//OUT_ON
{0x1D, 0xfe},//OUT_OFF

//Indoor
//GMA 0.50 0.40  -> 0.42
{GGMA1, 0x0c}, //0e
{GGMA2, 0x1c}, //1d
{GGMA3, 0x31}, //32
{GGMA4, 0x54}, //56

{GGMA5, 0x6d},
{GGMA6, 0x85},
{GGMA7, 0x96},
{GGMA8, 0xa6},
{GGMA9, 0xb4},
{GGMA10, 0xbf},

{GGMA11, 0xc7},
{GGMA12, 0xcf},
{GGMA13, 0xd5},
{GGMA14, 0xdd},
{GGMA15, 0xe3},
{GGMA16, 0xeb},
{GGMA17, 0xf2},
{GGMA18, 0xfa}, //ff

//Outdoor
//RGMA 0.6 0.3
{RGMA0, 0x00}, //0x00
{RGMA1, 0x08}, //0x08
{RGMA2, 0x19}, //0x19
{RGMA3, 0x33}, //0x33
{RGMA4, 0x5b}, //0x5b
{RGMA5, 0x78}, //0x78
{RGMA6, 0x89}, //0x89
{RGMA7, 0x97}, //0x97
{RGMA8, 0xa4}, //0xa4
{RGMA9, 0xb0}, //0xb0
{RGMA10, 0xbb}, //0xbb

{RGMA11, 0xc3}, //0xc5
{RGMA12, 0xcd}, //0xcf
{RGMA13, 0xd6}, //0xd8
{RGMA14, 0xde}, //0xe0

{RGMA15, 0xe8}, //0xe9
{RGMA16, 0xf0}, //0xf1
{RGMA17, 0xf7}, //0xf8
{RGMA18, 0xf8}, //0xff

//Dark
//BGMA 0.38 0.35
{BGMA0, 0x00},
{BGMA1, 0x14},//19
{BGMA2, 0x24},//28
{BGMA3, 0x3f},//42
{BGMA4, 0x6b},
{BGMA5, 0x8c},
{BGMA6, 0xa5},
{BGMA7, 0xba},
{BGMA8, 0xc8},
{BGMA9, 0xd1},
{BGMA10, 0xd8},
{BGMA11, 0xde},
{BGMA12, 0xe3},
{BGMA13, 0xe7},
{BGMA14, 0xec},
{BGMA15, 0xef},
{BGMA16, 0xf4},
{BGMA17, 0xf8},
{BGMA18, 0xff},
//Gamma Function End

////////////////////////////////////////////
///           PAGE 16 CMC                ///
////////////////////////////////////////////
//CMC Fuction Start
{PAGEMODE, COLOR_PAGE},
{CMCCTL, 0x2f},

//Monte CMC
{CMCOFSGH, 0x48},	//CMCOFSGH
{CMCOFSGM, 0x38},	//CMCOFSGM
{CMCOFSGL, 0x24},	//CMCOFSGL
{CMCSIGN, 0x2f},	//CMC SIGN
//CMC
{CMC11, 0x74},
{CMC12, 0x3f},
{CMC13, 0x0b},
{CMC21, 0x0f},
{CMC22, 0x5c},
{CMC23, 0x0d},
{CMC31, 0x02},
{CMC32, 0x44},
{CMC33, 0x86},

//CMC OFS
{CMCOFSL11, 0x88},
{CMCOFSL12, 0x08},
{CMCOFSL13, 0x00},
{CMCOFSL21, 0x84},
{CMCOFSL22, 0x04},
{CMCOFSL23, 0x80},
{CMCOFSL31, 0x8c},
{CMCOFSL32, 0x00},
{CMCOFSL33, 0x0c},

//CMC POFS
{CMCOFSH11, 0x05},
{CMCOFSH12, 0x83},
{CMCOFSH13, 0x82},
{CMCOFSH21, 0x83},
{CMCOFSH22, 0x05},
{CMCOFSH23, 0x82},
{CMCOFSH31, 0x81},
{CMCOFSH32, 0x01},
{CMCOFSH33, 0x00},
//CMC Fuction End

// Digital gain
{0x80, 0x00},
{0x85, 0x80},


////////////////////////////////////////////
///           PAGE 18 AE                 ///
////////////////////////////////////////////
//HIST
{PAGEMODE, FLICKER_PAGE},
{ISCTL, 0x70},
{0x11, 0x0e},//historgram 50%
//Anti flicker
{FLKMODE, 0x01},
{FLK200, 0x30},//100 at 48Mhz
{FLK240, 0x28},//120 at 48Mhz

////////////////////////////////////////////
///           PAGE 19 Scailer            ///
////////////////////////////////////////////
//Scailer
{PAGEMODE, SCALING_PAGE},
{ZOUTWIDH, 0x02},
{ZOUTWIDL, 0x80},
{ZOUTHGTH, 0x01},
{ZOUTHGTL, 0xe0},

{ZWINSTXH, 0x00},
{ZWINSTXL, 0x03},
{ZWINSTYH, 0x00},
{ZWINSTYL, 0x03},

{ZWINENXH, 0x00},
{ZWINENXL, 0x23},
{ZWINENYH, 0x00},
{ZWINENYL, 0x1b},

{ZVERSTEPH, 0x0c},
{ZVERSTEPL, 0xcc},
{ZHORSTEPH, 0x0c},
{ZHORSTEPL, 0xcc},
{ZFIFODLY, 0x41},

////////////////////////////////////////////
///           PAGE 20 AE                 ///
////////////////////////////////////////////
{PAGEMODE, AUTOEXP_PAGE},
{AECTL1, 0x1c}, //50Hz
{AEFRAMECTL1, 0x01},
{0x21, 0x34},
//Uniform Setting
{0x23, 0x40}, //out uni y ofs
{0x24, 0x04}, //out uni enb

{AEFINECTL1, 0xE7}, //dark dg enable
{0x2c, 0xa3},

{0x56, 0x1e}, //AE BL, AWB weight position
{0x57, 0xa4},
{0x58, 0x22},
{0x59, 0xd6},

//1_1_1
{AEWGT1, 0x00},
{AEWGT2, 0x00},
{AEWGT3, 0x00},
{AEWGT4, 0x00},
{AEWGT5, 0x00},
{AEWGT6, 0x00},
{AEWGT7, 0x01},
{AEWGT8, 0x40},
{AEWGT9, 0x01},
{AEWGT10, 0x40},
{AEWGT11, 0x0a},
{AEWGT12, 0xa0},
{AEWGT13, 0x00},
{AEWGT14, 0x00},
{AEWGT15, 0x00},
{AEWGT16, 0x00},

{YLVL, 0x3e},//3c->40
{0x71, 0x81},//20100301 81->82  (OutTarget : 46)
{YTH1, 0x23},//YTH1

{EXPTIMEH, 0x00},		//Exptime 25fps at 48Mhz_50hz
{EXPTIMEM, 0xea},
{EXPTIMEL, 0x60},

{EXPMINH, 0x01},        //exp min  400
{EXPMINL, 0x90},

{EXPMAXH, 0x02},        //Exp max 8.33fps at 48Mhz 50hz
{EXPMAXM, 0xbf},
{EXPMAXL, 0x20},

{EXP100H, 0x3a},        //bandtime 100 at 48Mhz
{EXP100L, 0x98},
{EXP120H, 0x30},        //bandtime 120 at 48Mhz
{EXP120L, 0xd4},

{EXPOUT1, 0xce},        //outdoor time th1
{EXPOUT2, 0x46},        //outdoor time th2 // 46->57
{0x9B, 0x34},        //High temp time th

{EXPUNITH, 0x01},        //4shared unit 500 -> 400
{EXPUNITL, 0x90},
{AGMIN, 0x10},        //gain min 0d -> 10
{AGMAX, 0x90},		     //a0_gain max

{AGSKY_SR300PC10, 0x17},        //clp_gain_12
{DGMAX, 0x80},        //dgain max
{DGMIN, 0x80},        //dgain min

////////////////////////////////////////////
///           PAGE 21 AE                 ///
////////////////////////////////////////////
{PAGEMODE, 0x21}, //count set
{0x20, 0x00}, //40_MCU Y offset
{0x21, 0x80}, //40->80
{0x23, 0xff},
{0x24, 0xc8}, //da->c8
{0x25, 0x06}, //06
{0x26, 0xc4}, //0xF8->0xC4
{0x27, 0x98},
{0x28, 0x66},
{0x29, 0x66},
{0x2a, 0xff},
{0x2b, 0xda}, //ea->da

////////////////////////////////////////////
///           PAGE 22 AWB                ///
////////////////////////////////////////////
{PAGEMODE, AUTOWB_PAGE},
{AWBCTL1, 0xeb},
{AWBCTL2, 0x2e},
{0x12, 0x00},
{0x13, 0x00},
{0x14, 0x00},
{0x15, 0x00},
{0x16, 0x00},
{0x17, 0x00},
{0x18, 0x00},
{AWBMAP, 0x15}, //R_Low temp select

//Uniform Boundary
{0x1a, 0x50},
{0x1b, 0x20},
{0x1c, 0x50},
{0x1d, 0x20},
//Uniform Exp
{0x1e, 0x40},
{0x1f, 0x80},

{0x20, 0x34},
{0x21, 0x00},
{0x22, 0x00},
{0x23, 0x00},
{0x24, 0xB7}, //Hunting Option
{AWBCTL3, 0x3c},

{0x26, 0x14}, //0x04->0x12
{0x27, 0x61}, //6b->43->61

{0x28, 0x66},
{0x29, 0x31}, //29->39->31
{0x2a, 0x45},
{0x2b, 0x99}, //9d->99
{0x2c, 0x2c}, //65
{0x2d, 0x5f}, //5a->5f
{AWBCTL4, 0xbf}, //ff->bf
{AWBCTL5, 0x00}, //New Low temp on_08/off_00
{ULVL, 0x80},
{VLVL, 0x80},
{0x32, 0x80},
{0x33, 0x80},
{WHTSLOPE1, 0x18},
{WHTSLOPE2, 0x0e}, //0c
{CDIFFBND1, 0x2a},
{CDIFFBND2, 0x12}, //2a
{UVTH1, 0x01},
{UVTH2, 0xaa},
{0x3a, 0x88},
{0x3b, 0xc4},
{0x3c, 0xf8},
{0x3d, 0x00},
{0x3e, 0x00},
{0x3f, 0x00},
{YRANGE, 0xf3},
{CDIFF, 0x43}, //r1 cdiff
{CSUM2, 0x33}, //r1 2dsum
{YRANGETOT, 0xf3},
{CDIFFTOT, 0x65}, //unstb cdiff
{CSUM2TOT, 0x44}, //unstb 2dsum
{WHTPXLTH, 0x08}, //0x02->0x08
{YRANGEDAK, 0xf3},
{CDIFFDAK, 0x43}, //r2 cdiff
{CSUM2DAK, 0x33}, //r2 2dsum 0x15->0x24->23
{YRANGEOUT, 0x84},
{CDIFFOUT, 0x32}, //r3 cdiff
{CSUM2OUT, 0x23}, //r3 2dsum 0x13->0x23
{STBYTH, 0xd4},
{0x4e, 0x04}, //0x0a->0x02
{0x4f, 0x00},
{CSUM4, 0x22}, //r1 4dsum
{CSUM4TOT, 0x33}, //unstb 4dsum
{CSUM4DAK, 0x22}, //r2 4dsum //0x13->0x23->22
{CSUM4OUT, 0x22}, //r3 4dsum
{0x54, 0x07},
{0x55, 0x04}, //0x0a->0x04
{0x56, 0x11},
{0x57, 0x10}, //0x44->0x10->0x20
{0x58, 0x80},
{0x59, 0x00},
{AWBOUTTHON, 0xe0},
{AWBOUTTHOFF, 0xf0},
{0x5c, 0x80},
{0x5d, 0x10}, //44->10
{0x5e, 0x20}, //40->20->00 //r2 out_wgt
{0x5f, 0x00},
{0x60, 0xfa}, //r1 y max
{0x61, 0xfa}, //r2 y max
{0x62, 0x08}, //r2 y min
{0x63, 0xfa}, //r3 y max
{0x64, 0x48}, //r3 y min
{0x65, 0x12},
{0x66, 0x41},

{0x67, 0x04}, //0x0a->0x01
{0x68, 0x14}, //0x14 //preview(20/4=5)
{0x69, 0x08}, //0x0a(10/4=5)
{0x6a, 0x0a}, //0x14->0x0a(10/4=5)

{0x6b, 0x18}, //18
{0x6c, 0x00},
{0x6d, 0x14}, //r1 rcnt 0x40->0x34
{0x6e, 0x18}, //r1 rmax 0x48->0x44->0x40
{0x6f, 0x10}, //r1 rmin 0x38->0x24
{0x70, 0x38}, //0x40->0x38
{0x71, 0x48}, //0x4C->0x48
{0x72, 0x28}, //0x30->0x28
{0x73, 0x28},
{0x74, 0x38}, //0x44->0x38
{0x75, 0x48}, //0x50->0x48
{0x76, 0x28}, //0x30->0x28
{0x77, 0x00},
{0x78, 0x40},
{0x79, 0x40},
{0x7a, 0xd6},
{0x7b, 0xa1},
{0x7c, 0xa4},
{0x7d, 0xf0},
{0x7e, 0x48},
{0x7f, 0x63},

//RGB
{RGAIN, 0x3c}, //38
{GGAIN, 0x20},
{BGAIN, 0x34}, //40

//Defualt Boundary
{RMAX, 0x68}, //58
{RMIN, 0x1f}, //22
{BMAX, 0x58}, //5d
{BMIN, 0x23}, //21

//Middle Boundary
{RMAXM, 0x42}, //3f->42_outdoor1
{RMINM, 0x28},
{BMAXM, 0x3c},
{BMINM, 0x2d}, //30->2d

//Outdoor Boundary
{RMAXB, 0x40}, //39->42_outdoor2
{RMINB, 0x2f}, //28
{BMAXB, 0x3A}, //
{BMINB, 0x2d}, //30->2d//outdoor awb limit
// slop
{BGAINPARA1, 0x50}, //53
{BGAINPARA2, 0x4d}, //52
{BGAINPARA3, 0x4b}, //50
{BGAINPARA4, 0x4a}, //4d
{BGAINPARA5, 0x48}, //4a
{BGAINPARA6, 0x45}, //42
{BGAINPARA7, 0x3e}, //36
{BGAINPARA8, 0x36}, //2a
{BGAINPARA9, 0x2c}, //26
{BGAINPARA10, 0x26}, //23
{BGAINPARA11, 0x23}, //21
{BGAINPARA12, 0x22}, //21

{BGAINBND1, 0xaa}, //67 //
{BGAINBND2, 0x9a}, //76 //aa
{RAINTH1, 0x40}, //40
{RAINTH2, 0x38}, //38
{RAINTH3, 0x20}, //20

//Delta
{RDELTA1, 0x23},
{BDELTA1, 0x32},
{RDELTA2, 0x43}, //0xff->0x43
{BDELTA2, 0x43}, //0xff->0x43
{AWBEXPLMT1, 0x1e},
{AWBEXPLMT2, 0x78},
{AWBEXPLMT3, 0xa0}, //0xe7->0xa0

{0xa7, 0x00}, //Low temp r gain min
{0xa8, 0x18}, //Low temp r gain max
{0xa9, 0x7f}, //Low temp b gain limit

{0xaa, 0xf8},
{0xab, 0x20},
{0xac, 0x00},

{HTMPTHOFF, 0x3F}, //High temp gain off
{HTMPTHON, 0x3D}, //High temp gain on

{0xaf, 0x26}, //Low temp r gain off
{0xb0, 0x24}, //Low temp r gain on
{0xb1, 0x24}, //0x28->0x24

{MRGAIN, 0x48},
{MBGAIN, 0x40},
{0xb4, 0xff},
{0xb5, 0x7f},
{HTMPOFS, 0x09}, //High temp ofs Cb=0x80, Cr=0x7e
{LTMPOFS, 0x00}, //a1_Low color offset target Cb=0x7e, Cr=0x80

{0xb8, 0x2c}, //Low temp r gain off
{0xb9, 0x2a}, //Low temp r gain on

{0xba, 0x08},
{0xbb, 0x25},
{LTMPTHMIN, 0x26}, //Awb target New low temp gain min
{LTMPTHMAX, 0x24}, //Awb target New low temp gain max
{0xbe, 0x00},
{0xbf, 0x22},
{0xc0, 0x10},
{0xc1, 0x90},
{0xc2, 0x10},
{0xc3, 0x68},
{0xc4, 0x08},
{0xc5, 0x62},
{0xc6, 0x10},
{0xc7, 0x90},

////////////////////////////////////////////
///           PAGE 24 AWB                ///
////////////////////////////////////////////
{PAGEMODE, AUTOFOCUS_PAGE}, //0x24 page
{AFCTL1, 0x01},
{0x11, 0x80}, //uni1&uni2=uni => uni1 only
{AFCTL3, 0x4C}, //0x44->0x4C
{0x14, 0xdc}, //11->dc
{0x18, 0x05}, //UniSampling
{AFCTL4, 0x15}, //Motion Sampling

{0x20, 0x1e}, //r1 y st
{0x21, 0xa2}, //r1 y en
{0x22, 0x55}, //r1 x st
{0x23, 0xab}, //r1 x en
{0x24, 0x08}, //r2 y st
{0x25, 0xb8}, //r2 y en
{0x26, 0x08}, //r2 x st
{0x27, 0xf8}, //r2 y en

{0x30, 0x10}, //uni y st
{0x31, 0xb0}, //uni y en
{0x32, 0x10}, //uni x st
{0x33, 0xf0}, //uni x en
{0x34, 0x1e}, //uni y low th
{0x35, 0x98}, //uni y high th
{0x36, 0x02}, //on th
{0x37, 0x00},
{0x38, 0x10}, //off th
{0x39, 0x00},
//Y
{AFROWSTR1, 0x0A},
{AFROWENR1, 0x42},
{AFROWSTR2, 0x44},
{AFROWENR2, 0x7C},
{AFROWSTR3, 0x7E},
{AFROWENR3, 0xB6},
//X
{AFCOLSTR1, 0x1A},
{AFCOLENR1, 0x34},
{AFCOLSTR2, 0x55},
{AFCOLENR2, 0x6F},
{AFCOLSTR3, 0x90},
{AFCOLENR3, 0xAA},
{AFCOLSTR4, 0xCC},
{AFCOLENR4, 0xE6},

{0x60, 0x07},
{0x61, 0x07},
{0x62, 0x0a},
{0x64, 0x00},
{0x65, 0x00},
{0x66, 0x00},
{0x67, 0x00},
{0x68, 0x06},
{0x69, 0x00},
{0x6a, 0x03},
{0x6b, 0x00},
{0x6c, 0x00},
{0x6d, 0x00},
{0x6e, 0x00},
{0x6f, 0x00},
{0x70, 0x0b},
{0x71, 0x00},
{0x72, 0x07},
{0x73, 0x00},
{0x74, 0xf0},
{0x75, 0x0a},

////////////////////////////////////////////
///           30 Page MCU AE             ///
////////////////////////////////////////////
{PAGEMODE, MCU_PAGE},

////////////////////////////////////////////
///           50 Page                    ///
////////////////////////////////////////////
{PAGEMODE, 0x50},
{0x11, 0x00},
{0x12, 0x00},
{0x13, 0x00},
{0x14, 0x00},
{0x16, 0x02},
{0x17, 0x02},
//{0x18, 0x02},
{0x1A, 0x3C}, //dark,ind
{0x1B, 0x03}, //02_out1,2
//{0x1C, 0x01}, //out2

//�߰�_Deshutter_20100509
//{0x11, 0x08},
//{0x12, 0x11},
//{0x14, 0xf4},
//{0x2d, 0x32},
//{0x2e, 0x48}, //38
//{0x2f, 0x10},
//{0x30, 0x90}, //c0

////////////////////////////////////////////
///           51 Page                    ///
////////////////////////////////////////////
{PAGEMODE, 0x51},

{0x4C, 0x15},
{0x4D, 0x40},
{0x4E, 0x2e},//2e_ind,dark

{0x4f, 0x10},
{0x50, 0x61},
{0x51, 0x1a},//1b_ind,dark

{0x6A, 0x15},
{0x6B, 0x40},
{0x6C, 0x35},//out1,2

{0x6d, 0x10},
{0x6e, 0x61},
{0x6f, 0x1b},//out1,2

//{0x88, 0x15},
//{0x89, 0x40},
//{0x8A, 0x4F},//out2

//{0x8B, 0x10},
//{0x8C, 0x61},
//{0x8D, 0x19},//out2

////////////////////////////////////////////
///           70 Page AE                 ///
////////////////////////////////////////////

{PAGEMODE, 0x70},

{0x11, 0x60},
{0x1e, 0x00}, //100fps 24Mhz 50Hz
{0x1f, 0x3a}, //
{0x20, 0x98}, //

{0x22, 0x00}, //33.3fps 24Mhz 50Hz
{0x23, 0xaf}, //
{0x24, 0xc8}, //

{0x26, 0x01}, //12.5fps 24Mhz 50Hz
{0x27, 0xd4}, //
{0x28, 0xc0}, //

{0x18, 0x10}, //50fps
{0x19, 0x20}, //21_33.3fps(700lux)
{0x1a, 0x3e}, //3c_12.5fps(200lux)

{0x1b, 0x04},
{0x1c, 0x80},

//MCU AE Initial Setting_60hz
{0x8d, 0x47},
{0x8e, 0xc3},
{0x8f, 0x50},
{0x90, 0x00},

{0x7c, 0x00},
{0x7d, 0x00},
{0x7e, 0x00},
{0x7f, 0x04},

{0x80, 0x00},
{0x81, 0x00},
{0x82, 0x00},
{0x83, 0x04},


////////////////////////////////////////////
///           72 Page ARS                ///
////////////////////////////////////////////
{PAGEMODE, 0x72},
{0xa5, 0x00},

{0x11, 0x00}, // Outdoor1,2 Enb, Start 1
{0x12, 0x00}, // End 12(C)
{0x13, 0x00}, //30
{0x14, 0x00}, //1a
{0x15, 0x00},
{0x16, 0x00},
{0x17, 0x00},
{0x18, 0x00},
{0x19, 0x00},
{0x1A, 0x00},
{0x1B, 0x00},
{0x1C, 0x00},

//Init Register - Must set 0x00 (0x1d ~ 0x20)
{0x1d, 0x00}, //0
{0x1e, 0x00},
{0x1f, 0x00},
{0x20, 0x00},

//LensRg
{0x21, 0x00}, //1
{0x22, 0x00},
{0x23, 0x00},
{0x24, 0x00},
//
{0x25, 0x00}, //2
{0x26, 0x00},
{0x27, 0x00},
{0x28, 0x00},
//
{0x29, 0x00}, //3
{0x2A, 0x00},
{0x2B, 0x00},
{0x2C, 0x00},
//
{0x2D, 0x00}, //4
{0x2E, 0x00},
{0x2F, 0x00},
{0x30, 0x00},
//
{0x31, 0x00}, //5
{0x32, 0x00},
{0x33, 0x00},
{0x34, 0x00},
//
{0x35, 0x00}, //6
{0x36, 0x00},
{0x37, 0x00},
{0x38, 0x00},
//
{0x39, 0x00}, //7
{0x3A, 0x00},
{0x3B, 0x00},
{0x3C, 0x00},
//
{0x3d, 0x00}, //8
{0x3e, 0x00},
{0x3f, 0x00},
{0x40, 0x00},
//
{0x41, 0x00}, //9
{0x42, 0x00},
{0x43, 0x00},
{0x44, 0x00},
//
{0x45, 0x00}, //A
{0x46, 0x00},
{0x47, 0x00},
{0x48, 0x00},

{0x49, 0x00}, //B
{0x4a, 0x00},
{0x4b, 0x00},
{0x4c, 0x00},

{0x4d, 0x00}, //C
{0x4e, 0x00},
{0x4f, 0x00},
{0x50, 0x00},

{0x51, 0x00}, //D
{0x52, 0x00},
{0x53, 0x00},
{0x54, 0x00},

{0x55, 0x00}, //E
{0x56, 0x00},
{0x57, 0x00},
{0x58, 0x00},

{0x59, 0x00}, //F
{0x5a, 0x00},
{0x5b, 0x00},
{0x5c, 0x00},

//return indoor
//LensRg
{0x5d, 0x00}, //10 //1 back
{0x5e, 0x00},
{0x5f, 0x00},
{0x60, 0x00},
//
{0x61, 0x00}, //11 //2 back
{0x62, 0x00},
{0x63, 0x00},
{0x64, 0x00},
//
{0x65, 0x00}, //12 //3 back
{0x66, 0x00},
{0x67, 0x00},
{0x68, 0x00},
//
{0x69, 0x00}, //13 //4 back
{0x6A, 0x00},
{0x6B, 0x00},
{0x6C, 0x00},
//
{0x6D, 0x00}, //14 //5 back
{0x6E, 0x00},
{0x6F, 0x00},
{0x70, 0x00},
//
{0x71, 0x00}, //15 //6 back
{0x72, 0x00},
{0x73, 0x00},
{0x74, 0x00},
//
{0x75, 0x00}, //16 //7 back
{0x76, 0x00},
{0x77, 0x00},
{0x78, 0x00},
//
{0x79, 0x00}, //17 //8 back
{0x7a, 0x00},
{0x7b, 0x00},
{0x7C, 0x00},
//
{0x7D, 0x00}, //18 //9 back
{0x7E, 0x00},
{0x7F, 0x00},
{0x80, 0x00},
//
{0x81, 0x00}, //19 //A back
{0x82, 0x00},
{0x83, 0x00},
{0x84, 0x00},

{0x85, 0x00}, //1A //B back
{0x86, 0x00},
{0x87, 0x00},
{0x88, 0x00},

{0x89, 0x00}, //1B //C back
{0x8A, 0x00},
{0x8B, 0x00},
{0x8C, 0x00},

{0x8D, 0x00}, //1C
{0x8E, 0x00},
{0x8F, 0x00},
{0x90, 0x00},

{0x91, 0x00}, //1D
{0x92, 0x00},
{0x93, 0x00},
{0x94, 0x00},

{0x95, 0x00},
{0x96, 0x00},

//ARS addr Setting Start
{0x97, 0x00},
{0x98, 0x00},
{0x99, 0x00},
{0x9A, 0x00},
{0x9B, 0x00},
{0x9C, 0x00},
{0x9D, 0x00},
{0x9E, 0x00},
{0x9F, 0x00},
{0xA0, 0x00},
{0xA1, 0x00},
{0xA2, 0x00},

//ARS State Setting Start
{0xA3, 0x00},
{0xA4, 0x00},
{0xA5, 0x00},

{0x10, 0x00}, //0x85

////////////////////////////////////////////
///           73 Page Auto Y offset      ///
////////////////////////////////////////////

//00 Version_End_2f
//01 Version_End_30

{PAGEMODE, 0x73}, //AE y offset set
{0x10, 0x00}, //07
{0x11, 0x76}, //0x16->0x76(Preview2)
{0x13, 0xFF},
{0x14, 0x19},
{0x15, 0x02}, //0x04->0x02
{0x16, 0x22},
{0x17, 0x10},
{0x18, 0x10},

{0x23, 0x02}, //Pofs_cnt_min //0x01EB(1%)->0x03D7(2%)
{0x24, 0xD7},
{0x25, 0x13}, //Pofs_cnt_max //0x0997(5%)->0x1333(10%)
{0x26, 0x33},
{0x27, 0x08}, //Pofs max //0x10->0x0A

{0x28, 0x03}, //Mofs_cnt_min //0x3d6(2%)
{0x29, 0xd6},
{0x2a, 0x18}, //Mofs_cnt_max //0x13CC(10.3%)->13%
{0x2b, 0xf5},
{0x2c, 0x03}, //Mofs max
{0x2d, 0x01}, //Sat min //0x01EB(1%)
{0x2e, 0xeb},
{0x2f, 0x13}, //Sat max //0x0997(5%)->0x1333(10%)
{0x30, 0x33},

////////////////////////////////////////////
///           80 Page CMC                ///
////////////////////////////////////////////
{PAGEMODE, 0x80},
{0x10, 0x00},

{0x6b, 0x00},
{0x6c, 0x00},
{0x6d, 0x00},
{0x6e, 0x00},
{0x6f, 0x00},

////////////////////////////////////////////
///           81 Page                    ///
////////////////////////////////////////////
{PAGEMODE, 0x81}, //color saturation
{0x10, 0xcb}, //cb
{0x11, 0x00}, //00

{0x12, 0xa0}, //60 //a0
{0x13, 0xf8}, //e0 //f8

{0x14, 0x90}, //78
{0x15, 0x8d}, //74

{0x16, 0x4e}, //50
{0x17, 0x3a}, //38

{0x19, 0x33}, //upos 3f->44//outdoor
{0x1a, 0x32}, //uneg 44->42
{0x1b, 0x46}, //vpos 3f->4a->48
{0x1c, 0x40}, //vneg 3f->44

{0x1d, 0x40},//42 upos //indoor //CWF A~ H
{0x1e, 0x3f},//3f uneg
{0x1f, 0x5a},//56 vpos
{0x20, 0x4b},//4b vneg

{0x21, 0x40},//upos //dark
{0x22, 0x38},//uneg
{0x23, 0x40},//vpos
{0x24, 0x38},//vneg

{0x25, 0x52}, //4a //4a upos //_High-Temp //D65
{0x26, 0x4a}, //3f //3f uneg
{0x27, 0x4c}, //4a //52 vpos
{0x28, 0x54}, //50 //50 vneg


////////////////////////////////////////////
///           82 Page Gamma              ///
////////////////////////////////////////////
{PAGEMODE, 0x82},
{0x10, 0x00},

{PAGEMODE, WINDOW_PAGE},
{PWRCTL, 0xf0}, //(Sleep Mode off)

// ===============================================//
// 29	preview  //                                //
// ===============================================//
{PAGEMODE, AUTOFOCUS_PAGE},
{0x15, 0x00},//flag hold off

{PAGEMODE, 0x50},
{0x10, 0x02},
{0x0a, 0x05}, //50ms

{0x01, 0xf1},
////////////////////////
// Preview Code Start //
////////////////////////
{PAGEMODE, WINDOW_PAGE},
{VDOCTL1, 0x13}, //Pre2
{WINROWH, 0x00}, //WINROW
{WINROWL, 0x00}, //02=>00_YC2D Stting
{WINCOLH, 0x00}, //WINCOL
{WINCOLL, 0x02},
{HBLANKH, 0x03}, //HBLANK 1line 2000
{HBLANKL, 0xb8},
{0x83, 0x30}, //BLC Hold

// DLPF OFF
{PAGEMODE, NOISE1_PAGE},
{DLPFCTL, 0x00}, // lensd_lpf OFF
{PAGEMODE, DEBLUR_PAGE},
{0x40, 0x00}, // abberation OFF
{GLPFCTL2, 0x00}, // lensd_lpf OFF
{LDCTL, 0x00}, // bayer_d OFF
{0xe3, 0x01},

// YC2D OFF //
{PAGEMODE, FORMAT_PAGE},
{0xe8, 0x5f}, //20 mem(yc2d) OFF
{PAGEMODE, NOISE2_PAGE},
{YCLPFCTL1, 0x17}, //00 y-lpf OFF
{YCLPFCTL2, 0x1f}, //00 c-lpf OFF
{PAGEMODE, EDGE_PAGE},
{EDGE2DCTL1, 0x41}, //00 sharp2d OFF

{PAGEMODE, AUTOWB_PAGE},
{0x20, 0x34},

////////////////////////
// Preview Code End   //
////////////////////////

//Scailer
{PAGEMODE, SCALING_PAGE},
{ZOOMCTL1, 0x00},

{PAGEMODE, 0x70},
{0x10, 0x09}, //AE reset
{PAGEMODE, AUTOWB_PAGE},
{AWBCTL1, 0xeb}, //AWB ON

{0x0a, 0x0d}, //DELAY 130

{PAGEMODE, 0x70},
{0xad, 0x3f},
{0xae, 0x80},
{0xaf, 0x00},
{0xb0, 0x00},
{0x10, 0xe8}, // AE on

{0x01, 0xf0},
};


/*
[SENSOR_INITIALIZATION]
DISP_DATE = "2010-03-08 00:00:00"
DISP_WIDTH = 2048
DISP_HEIGHT = 1536
DISP_FORMAT = YUV422
DISP_DATAORDER = YUYV
MCLK = 24.00
PLL = 1.00
*/

static char sr300pc100_2048x1536[][2] =
{
// ===============================================//
// 30	snapshot                                 //
// ===============================================//
{PAGEMODE, AUTOFOCUS_PAGE},
{0x15, 0xff},//flag hold on

{PAGEMODE, 0x50},
{0x10, 0x01},
{0x0a, 0x05}, //50ms

{0x01, 0xf1},

{PAGEMODE, 0x70},
{0x10, 0x68}, //AE Off
{PAGEMODE, AUTOWB_PAGE},
{AWBCTL1, 0x6d}, //AWB Off
{0x20, 0xb4}, //wb lock
///////////////
// Capture Code //
///////////////
{PAGEMODE, WINDOW_PAGE},
{VDOCTL1, 0x00}, //Capture
{WINROWH, 0x00}, //WINROW
{WINROWL, 0x0a},
{WINCOLH, 0x00}, //WINCOL
{WINCOLL, 0x0c},
{HBLANKH, 0x01}, //HBLANK 312
{HBLANKL, 0x38},

{0x83, 0x38}, //BLC Hold

{PAGEMODE, AUTOEXP_PAGE},
{0x1a, 0x24},
{0x1b, 0x00},

////
// DLPF ON
{PAGEMODE, NOISE1_PAGE},
{DLPFCTL, 0x0f}, // lensd_lpf ON
{PAGEMODE, DEBLUR_PAGE},
{0x40, 0x00}, // abberation OFF
{GLPFCTL2, 0x0f}, // lensd_lpf ON
{LDCTL, 0x0c}, // bayer_d ON
{0xe3, 0x00},

// YC2D OFF
{PAGEMODE, FORMAT_PAGE},
{0xe8, 0x5f}, // mem(yc2d) ON
{PAGEMODE, NOISE2_PAGE},
{YCLPFCTL1, 0x17}, // y-lpf ON
{YCLPFCTL2, 0x1f}, // c-lpf ON
{PAGEMODE, EDGE_PAGE},
{EDGE2DCTL1, 0x41}, // sharp2d ON
/////
{0x01, 0xf0},

{0x0a, 0x10}, //Delay 100ms

////////////////////////////////////////////
///           PAGE 10 ITU656	         ///
////////////////////////////////////////////
{PAGEMODE, FORMAT_PAGE},
{ISPCTL1, 0x05}, //YUV422_YUYV: 0x03, ITU656: 0x07 (jhkim:MOD)

{ITUCTL, 0x15}, // ITU656: 0x04 (jhkim:ADD)

{ITUSOF, 0x80}, // ITU656: SOF : SAV Blank (jhkim:ADD)
{ITUSOL, 0x80}, // ITU656: SOL : EAV Field (jhkim:ADD)
{ITUEOF, 0xb6}, // ITU656: EOF : EAV Blank (jhkim:ADD)
{ITUEOL, 0x9d}, // ITU656: EOL : EAV Field (jhkim:ADD)
};

#endif /* __HYNIX_YAC_DAT_H__ */
